{"version":3,"file":"dnn-image-cropper.stories.js","sourceRoot":"","sources":["../../../src/components/dnn-image-cropper/dnn-image-cropper.stories.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,UAAU,CAAC;AAChC,OAAO,EAAE,SAAS,EAAE,MAAM,gCAAgC,CAAC;AAE3D,OAAO,MAAM,MAAM,aAAa,CAAC;AAEjC,eAAe;EACX,KAAK,EAAE,wBAAwB;EAC/B,SAAS,EAAE,mBAAmB;EAC9B,UAAU,EAAE;IACR,OAAO,EAAE;MACL,OAAO,EAAE,CAAC,kBAAkB,CAAC;KAChC;IACD,KAAK,EAAG,MAAM;GACjB;EACD,QAAQ,EAAE;IACN,OAAO,EAAE;MACL,OAAO,EAAE,QAAQ;KACpB;IACD,QAAQ,EAAE;MACN,OAAO,EAAE,QAAQ;KACpB;IACD,mBAAmB,EAAE;MACjB,OAAO,EAAE,MAAM;KAClB;IACD,SAAS,EAAE;MACP,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MAChE,OAAO,EAAE,QAAQ;KACpB;IACD,mBAAmB,EAAE;MACjB,OAAO,EAAE,SAAS;KACnB;GACF;CACA,CAAC;AAEV,MAAM,IAAI,GAQN;EACA,OAAO,EAAE,SAAS;EAClB,eAAe,EAAE,wBAAwB;EACzC,EAAE,EAAE,IAAI;EACR,WAAW,EAAE,gBAAgB;EAC7B,UAAU,EAAE,iBAAiB;EAC7B,aAAa,EAAE,uJAAuJ;EACtK,cAAc,EAAE,OAAO;CAC1B,CAAA;AAED,MAAM,QAAQ,GAAG,CAAC,IAAI,EAAE,EAAE,CACtB,IAAI,CAAA;;oBAEY,IAAI,CAAC,IAAI;oBACT,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC;qBACpB,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC;iCACV,SAAS,CAAC,IAAI,CAAC,iBAAiB,CAAC;sBAC5C,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC;kCAClB,SAAS,CAAC,IAAI,CAAC,iBAAiB,CAAC;;KAE9D,CAAC;AAEN,MAAM,CAAC,MAAM,YAAY,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC9C,YAAY,CAAC,IAAI,GAAG;EAChB,KAAK,EAAE,GAAG;EACV,MAAM,EAAE,GAAG;EACX,iBAAiB,EAAE,kBAAkB;EACrC,OAAO,EAAE,GAAG;EACZ,iBAAiB,EAAE,KAAK;EACxB,IAAI;CACP,CAAC","sourcesContent":["import { html } from \"lit-html\";\nimport { ifDefined } from 'lit-html/directives/if-defined';\nimport { Meta } from \"@storybook/web-components\";\nimport readme from './readme.md';\n\nexport default {\n    title: 'Elements/Image Cropper',\n    component: 'dnn-image-cropper',\n    parameters: {\n        actions: {\n            handles: ['imageCropChanged'],\n        },\n        notes:  readme,\n    },\n    argTypes: {\n        'width': {\n            control: 'number',\n        },\n        'height': {\n            control: 'number',\n        },\n        'allowedExtensions': {\n            control: 'text',\n        },\n        'quality': {\n            options: [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0],\n            control: 'number',\n        },\n        'preventUndersized': {\n            control: 'boolean',\n          },\n        },\n} as Meta;\n\nconst resx:{\n    capture: string;\n    dragAndDropFile: string;\n    or: string;\n    takePicture: string;\n    uploadFile: string;\n    imageTooSmall: string;\n    modalCloseText: string;\n} = {\n    capture: \"Capture\",\n    dragAndDropFile: \"Drag and drop an image\",\n    or: \"or\",\n    takePicture: \"Take a picture\",\n    uploadFile: \"Upload an image\",\n    imageTooSmall: \"The image you are attempting to upload does not meet the minimum size requirement of {width} pixels by {height} pixels. Please upload a larger image.\",\n    modalCloseText: \"Close\",\n}\n\nconst Template = (args) =>\n    html`\n        <dnn-image-cropper\n            .resx=${args.resx}\n            width=${ifDefined(args.width)}\n            height=${ifDefined(args.height)}\n            allowed-extensions=${ifDefined(args.allowedExtensions)}\n            quality=${ifDefined(args.captureQuality)}\n            ?prevent-undersized=${ifDefined(args.preventUndersized)}>\n        </dnn-image-cropper>\n    `;\n\nexport const ImageCropper = Template.bind({});\nImageCropper.args = {\n    width: 600,\n    height: 600,\n    allowedExtensions: 'jpg,jpeg,png,gif',\n    quality: 0.8,\n    preventUndersized: false,\n    resx,\n};"]}