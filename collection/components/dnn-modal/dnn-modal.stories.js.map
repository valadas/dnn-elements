{"version":3,"file":"dnn-modal.stories.js","sourceRoot":"","sources":["../../../src/components/dnn-modal/dnn-modal.stories.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,UAAU,CAAC;AAChC,OAAO,EAAE,SAAS,EAAE,MAAM,gCAAgC,CAAC;AAC3D,OAAO,EAAE,UAAU,EAAE,MAAM,oCAAoC,CAAC;AAEhE,OAAO,MAAM,MAAM,aAAa,CAAC;AAEjC,eAAe;EACX,KAAK,EAAE,gBAAgB;EACvB,SAAS,EAAE,WAAW;EACtB,UAAU,EAAE;IACR,OAAO,EAAE;MACL,OAAO,EAAE,CAAC,WAAW,CAAC;KACzB;IACD,KAAK,EAAG,MAAM;GACjB;EACD,QAAQ,EAAE;IACN,kBAAkB,EAAE;MAChB,OAAO,EAAE,SAAS;KACrB;IACD,YAAY,EAAE;MACV,OAAO,EAAE,MAAM;KAClB;IACD,mBAAmB,EAAE;MACnB,OAAO,EAAE,SAAS;KACnB;IACD,SAAS,EAAE;MACP,OAAO,EAAE,SAAS;KACrB;GACF;CACE,CAAC;AAEV,MAAM,QAAQ,GAAG,CAAC,IAAI,EAAE,EAAE,CACtB,IAAI,CAAA;;gCAEwB,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC;yBACtC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC;iCACjB,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC;uBACzC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC;cAChC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;;KAE9B,CAAC;AAEN,MAAM,CAAC,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACvC,KAAK,CAAC,IAAI,GAAG;EACT,eAAe,EAAE,IAAI;EACrB,SAAS,EAAE,aAAa;EACxB,eAAe,EAAE,IAAI;EACrB,OAAO,EAAE,IAAI;EACb,IAAI,EAAE;0FACgF;CACzF,CAAC","sourcesContent":["import { html } from \"lit-html\";\nimport { ifDefined } from 'lit-html/directives/if-defined';\nimport { unsafeHTML } from 'lit-html/directives/unsafe-html.js';\nimport { Meta } from \"@storybook/web-components\";\nimport readme from './readme.md';\n\nexport default {\n    title: 'Elements/Modal',\n    component: 'dnn-modal',\n    parameters: {\n        actions: {\n            handles: ['dismissed'],\n        },\n        notes:  readme,\n    },\n    argTypes: {\n        'backdrop-dismiss': {\n            control: 'boolean',\n        },\n        'close-text': {\n            control: 'text',\n        },\n        'show-close-button': {\n          control: 'boolean',\n        },\n        'visible': {\n            control: 'boolean',\n        }\n      },\n} as Meta;\n\nconst Template = (args) =>\n    html`\n        <dnn-modal\n            ?backdrop-dismiss=${ifDefined(args.backdropDismiss)}\n            close-text=${ifDefined(args.closeText)}\n            ?show-close-button=${ifDefined(args.showCloseButton)}\n            ?visible=${ifDefined(args.visible)}>\n            ${unsafeHTML(args.slot)}\n        </dnn-modal>\n    `;\n\nexport const Modal = Template.bind({});\nModal.args = {\n    backdropDismiss: true,\n    closeText: 'Close modal',\n    showCloseButton: true,\n    visible: true,\n    slot: `<h1>Welcome to the DNN Modal</h1>\n        <p>This is a modal component that can be used to display content to the user.</p>`\n};\n"]}