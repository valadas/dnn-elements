{"version":3,"sources":["src/components/dnn-button/dnn-button.scss?tag=dnn-button&encapsulation=shadow","src/components/dnn-button/dnn-button.tsx","src/components/dnn-chevron/dnn-chevron.scss?tag=dnn-chevron&encapsulation=shadow","src/components/dnn-chevron/dnn-chevron.tsx","src/components/dnn-collapsible/dnn-collapsible.scss?tag=dnn-collapsible&encapsulation=shadow","src/components/dnn-collapsible/dnn-collapsible.tsx","src/utilities/colorInfo.ts","src/components/dnn-color-picker/dnn-color-picker.scss?tag=dnn-color-picker&encapsulation=shadow","src/components/dnn-color-picker/dnn-color-picker.tsx","src/components/dnn-dropzone/dnn-dropzone.scss?tag=dnn-dropzone&encapsulation=shadow","src/components/dnn-dropzone/dnn-dropzone.tsx","src/components/dnn-image-cropper/CornerType.ts","src/components/dnn-image-cropper/dnn-image-cropper.scss?tag=dnn-image-cropper&encapsulation=shadow","src/components/dnn-image-cropper/dnn-image-cropper.tsx","src/components/dnn-modal/dnn-modal.scss?tag=dnn-modal&encapsulation=shadow","src/components/dnn-modal/dnn-modal.tsx","src/components/dnn-searchbox/dnn-searchbox.scss?tag=dnn-searchbox&encapsulation=shadow","src/components/dnn-searchbox/dnn-searchbox.tsx","src/components/dnn-sort-icon/dnn-sort-icon.scss?tag=dnn-sort-icon&encapsulation=shadow","src/components/dnn-sort-icon/dnn-sort-icon.tsx","src/components/dnn-tab/dnn-tab.scss?tag=dnn-tab&encapsulation=shadow","src/components/dnn-tab/dnn-tab.tsx","src/components/dnn-tabs/dnn-tabs.scss?tag=dnn-tabs&encapsulation=shadow","src/components/dnn-tabs/dnn-tabs.tsx","src/components/dnn-toggle/dnn-toggle.scss?tag=dnn-toggle&encapsulation=shadow","src/components/dnn-toggle/dnn-toggle.tsx"],"names":["dnnButtonCss","DnnButton","[object Object]","hostRef","this","type","reversed","size","confirm","confirmYesText","confirmNoText","confirmMessage","disabled","modalVisible","el","classList","add","modal","shadowRoot","querySelector","hide","confirmed","emit","canceled","show","h","Host","style","pointer-events","class","onClick","handleClick","showCloseButton","backdropDismiss","display","justifyContent","margin","handleConfirm","handleCancel","dnnChevronCss","DnnChevron","expandText","collapseText","expanded","newValue","changed","aria-label","innerHTML","chevronRightIcon","dnnCollapsibleCss","DnnCollapsible","transitionDuration","animating","setTimeout","container","height","scrollHeight","dnnCollapsibleHeightChanged","updateComponentSize","newHeight","assignedElements","forEach","node","mutationList","mutation","target","closest","updateSize","mutationObserver","MutationObserver","handleMutation","childNodes","element","observe","attributes","characterData","childList","subtree","slot","addEventListener","disconnect","id","Debounce","ColorInfo","_hue","_saturation","_lightness","hue","value","saturation","lightness","red","getRGB","setHSL","green","blue","hex","r","getHex","g","b","parseInt","substr","contrastColor","brightness","chroma","Math","abs","quadrant","offset","bias","round","min","max","diff","s","l","toString","length","dnnColorPickerCss","DnnColorPicker","color","colorBoxHeight","rgbDisplay","hslDisplay","hexDisplay","handleSaturationLightnessMouseDown","e","preventDefault","handleDragLightnessSaturation","window","handleSaturationLightnessMouseUp","rect","saturationLightnessBox","getBoundingClientRect","x","clientX","left","width","y","clientY","top","newColor","currentColor","removeEventListener","handleHueMouseDown","handleDragHue","handleHueMouseUp","hueRange","handleComponentValueChange","channel","isNaN","handleHSLChange","component","handleSaturationLightnessKeyDown","shiftKey","key","handleHueKeyDown","colorChanged","colorChangedHandler","handleHexChange","setProperty","getDoublet","valueString","toUpperCase","match","ref","backgroundColor","onMouseDown","bind","role","aria-valuemin","aria-valuemax","aria-valuetext","bottom","onKeyDown","boxShadow","getContrast","aria-valuenow","step","onChange","repeatIcon","switchColorMode","contentCopyIcon","__decorate","dnnDropzoneCss","DnnDropzone","resx","dragAndDropFile","capture","or","takePicture","uploadFile","allowCameraMode","captureQuality","canTakeSnapshots","takingPicture","handleDragOver","event","stopPropagation","dataTransfer","dropEffect","dropzone","handleDrop","dropEvent","files","hasInvalidExtensions","fileList","getFilesFromFileList","filesSelected","checkIfBrowserCanTakeSnapshots","then","result","allowedExtensions","undefined","extensionsWithDots","map","extensionsList","join","fileInput","accept","Promise","resolve","mediaDevices","navigator","enumerateDevices","devices","some","device","kind","index","file","push","hasInvalid","fileIndex","regex","fileExtension","exec","name","includes","getUserMedia","video","audio","stream","videoPreview","srcObject","play","videoSettings","getVideoTracks","getSettings","catch","error","alert","canvas","document","createElement","context","getContext","drawImage","toBlob","blob","File","onDragOver","onDrop","onDragLeave","remove","_a","_b","handleUploadButton","uploadIcon","_c","_d","takeSnapshot","photoCameraIcon","_e","applySnapshot","_f","CornerType","dnnImageCropperCss","DnnImageCropper","quality","handleCropMouseDown","className","handleImageCropFinished","handleCropDrag","handleNwMouseMove","handleNeMouseMove","handleSeMouseMove","handleSwMouseMove","_ev","emitImage","previousTouch","handleCornerDrag","nw","ne","se","sw","corner","isMouseStillInTarget","getCornerLeftTop","newWidth","orientation","wantedRatio","cropRect","crop","imageRect","image","movementX","movementY","getMouvementFromEvent","topOffset","offsetTop","leftOffset","offsetLeft","ev","newLeft","newTop","setView","newView","views","host","querySelectorAll","v","noPictureView","hasPictureView","view","imageRatio","wantedHeight","wantedWidth","src","toDataURL","requestAnimationFrame","initCrop","split","reader","FileReader","onload","readerLoadEvent","img","Image","ctx","setImage","readAsDataURL","naturalWidth","naturalHeight","dataUrl","generateCroppedImage","imageCropChanged","desiredWidth","desiredHeight","clearRect","MouseEvent","TouchEvent","touch","touches","pageX","pageY","mouseX","mouseY","onTouchStart","onFilesSelected","handleNewFile","detail","dnnModalCss","DnnModal","closeText","visible","dismissed","handleDismiss","handleBackdropClick","cancelIcon","dnnSearchboxCss","DnnSearchbox","placeholder","debounced","query","debouncedHandleQueryChanged","handleQueryChanged","queryChanged","onInput","searchIcon","dnnSortIconCss","DnnSortIcon","sortDirection","sortChanged","active","changeSort","xmlns","viewBox","d","dnnTabCss","DnnTab","dnnTabsCss","DnnTabs","tabTitles","selectedTabTitle","updateTitles","showFirstTab","tabs","getTabs","tab","tabTitle","showTab","dnnToggleCss","DnnToggle","checked","isChecked","checkChanged"],"mappings":"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","sourcesContent":[":host {\r\n  --background-color: transparent;\r\n  --color: #333;\r\n  --border-size: 1px;\r\n  --border-color: var(--backround-color);\r\n  --border-radius: var(--dnn-controls-radius, 5px);\r\n  --padding: var(--dnn-controls-padding, 5px);\r\n  display: inline-block;\r\n  width: auto;\r\n}\r\n\r\n:host(.disabled){\r\n  pointer-events: none;\r\n}\r\n\r\n:host(.primary){\r\n  --background-color: var(--dnn-color-primary, blue);\r\n  --color: var(--dnn-color-primary-contrast, white);\r\n  --focus-color: var(--background-color);\r\n}\r\n\r\n:host(.primary.reversed){\r\n  --background-color: var(--dnn-color-primary-contrast, white);\r\n  --color: var(--dnn-color-primary, blue);\r\n  --border-color: var(--dnn-color-primary, blue);\r\n  --focus-color: var(--color);\r\n}\r\n\r\n:host(.secondary){\r\n  --background-color: var(--dnn-color-secondary, green);\r\n  --color: var(--dnn-color-secondary-contrast, white);\r\n  --focus-color: var(--background-color);\r\n}\r\n\r\n:host(.secondary.reversed){\r\n  --background-color: var(--dnn-color-secondary-contrast, white);\r\n  --color: var(--dnn-color-secondary, blue);\r\n  --border-color: var(--dnn-color-secondary, blue);\r\n  --focus-color: var(--color);\r\n}\r\n\r\n:host(.tertiary){\r\n  --background-color: var(--dnn-color-tertiary, yellow);\r\n  --color: var(--dnn-color-tertiary-contrast, black);\r\n  --focus-color: var(--background-color);\r\n}\r\n\r\n:host(.tertiary.reversed){\r\n  --background-color: var(--dnn-color-tertiary-contrast, white);\r\n  --color: var(--dnn-color-tertiary, blue);\r\n  --border-color: var(--dnn-color-tertiary, blue);\r\n  --focus-color: var(--color);\r\n}\r\n\r\n:host(.hydrated){\r\n  button{\r\n    border: var(--border-size) solid var(--border-color);\r\n    border-radius: var(--border-radius);\r\n    padding: var(--padding) calc(var(--padding) * 2);\r\n    background-color: transparent;\r\n    background-color: var(--background-color);\r\n    color: var(--color);\r\n    outline: none;\r\n    &:focus, &:hover{\r\n      box-shadow: 0 0 2px 2px var(--focus-color);\r\n    }\r\n  }\r\n}\r\n\r\n:host(:disabled, [disabled]){\r\n  button{\r\n    pointer-events: none;\r\n    opacity: 0.5;\r\n  }\r\n}\r\n\r\n:host(.small){\r\n  button{\r\n    padding: calc(var(--padding) / 2) var(--padding);\r\n    font-size: 0.7em;\r\n  }\r\n}\r\n\r\n:host(.large){\r\n  button{\r\n    padding: calc(var(--padding) * 1.5) calc(var(--padding) * 3);\r\n    font-size: 1.2em;\r\n  }\r\n}\r\n\r\nbutton{\r\n  height: 100%;\r\n  width: 100%;\r\n  cursor: pointer;\r\n}","import { Component, Element, Host, h, Prop, State, Event, EventEmitter } from '@stencil/core';\r\n\r\n/**\r\n * @slot Content of the button\r\n */\r\n@Component({\r\n  tag: 'dnn-button',\r\n  styleUrl: 'dnn-button.scss',\r\n  shadow: true\r\n})\r\nexport class DnnButton {\r\n\r\n  /**\r\n   * Optional button style,\r\n   * can be either primary, secondary or tertiary and defaults to primary if not specified\r\n   */\r\n  @Prop() type: 'primary' | 'secondary' | 'tertiary' = 'primary';\r\n\r\n  /**\r\n   * Optionally reverses the button style.\r\n   */\r\n  @Prop() reversed: boolean = false;\r\n\r\n  /**\r\n   * Optionally sets the button size, small normal or large, defaults to normal\r\n   */\r\n  @Prop() size?: 'small' | 'normal' | 'large' = 'normal';\r\n\r\n  /**\r\n   * Optionally add a confirmation dialog before firing the action.\r\n   */\r\n  @Prop() confirm?: boolean = false;\r\n\r\n  /**\r\n   * The text of the yes button for confirmation.\r\n   */\r\n  @Prop() confirmYesText?: string = \"Yes\";\r\n\r\n  /**\r\n   * The text of the no button for confirmation.\r\n   */\r\n  @Prop() confirmNoText?: string = \"No\";\r\n\r\n  /**\r\n   * The text of the confirmation message;\r\n   */\r\n  @Prop() confirmMessage?: string = \"Are you sure ?\";\r\n  \r\n  /**\r\n   * Disables the button\r\n   */\r\n  @Prop() disabled: boolean = false;\r\n\r\n  @State() modalVisible: boolean = false;\r\n\r\n  @Element() el!: HTMLDnnButtonElement;\r\n\r\n  private modal!: HTMLDnnModalElement;\r\n\r\n  /** \r\n   * Fires when confirm is true and the user confirms the action.\r\n  */\r\n  @Event({\r\n    eventName: 'confirmed',\r\n    bubbles: false,\r\n    cancelable: true,\r\n    composed: true\r\n  }) confirmed: EventEmitter;\r\n\r\n  /**\r\n   * Fires when confirm is true and the user cancels the action.\r\n   */\r\n  @Event({bubbles: false}) canceled: EventEmitter;\r\n\r\n  componentDidLoad(){\r\n    this.el.classList.add(this.type);\r\n    \r\n    if (this.reversed){\r\n      this.el.classList.add('reversed');\r\n    }\r\n\r\n    if (this.size !== 'normal'){\r\n      this.el.classList.add(this.size);\r\n    }\r\n\r\n    this.modal = this.el.shadowRoot.querySelector('dnn-modal');\r\n  }\r\n\r\n  private handleConfirm(){\r\n    this.modal.hide();\r\n    this.modalVisible = false;\r\n    this.confirmed.emit();\r\n  }\r\n\r\n  private handleCancel(){\r\n    this.modal.hide();\r\n    this.modalVisible = false;\r\n    this.canceled.emit();\r\n  }\r\n  \r\n  private handleClick(): void {\r\n    if (this.confirm && !this.modalVisible){\r\n      this.modal.show();\r\n      this.modalVisible = true;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host disabled={this.disabled} style={{'pointer-events': this.disabled ? 'none' : 'all'}}>\r\n        <button class=\"button\" onClick={() => this.handleClick()} disabled={this.disabled}>\r\n          <slot></slot>\r\n        </button>\r\n        {this.confirm &&\r\n            <dnn-modal showCloseButton={false} backdropDismiss={false}>\r\n              <p>{this.confirmMessage}</p>\r\n              <div style={\r\n                {\r\n                  display: 'flex',\r\n                  justifyContent: 'flex-end'\r\n                }\r\n              }>\r\n                <dnn-button type='primary' style={{margin: '5px'}} onClick={() => this.handleConfirm()}>{this.confirmYesText}</dnn-button>\r\n                <dnn-button type='secondary' style={{margin: '5px'}} onClick={() => this.handleCancel()}>{this.confirmNoText}</dnn-button>\r\n              </div>\r\n            </dnn-modal>\r\n          }\r\n      </Host>\r\n    );\r\n  }\r\n  \r\n\r\n}\r\n",":host {\r\n  display: inline-block;\r\n}\r\nbutton{\r\n  border: none;\r\n  padding: 0px;\r\n  margin: 0px;\r\n  min-width: 15px;\r\n  min-height: 15px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: transparent;\r\n  outline: none;\r\n}\r\nsvg{\r\n  height:2em;\r\n  width:2em;\r\n  transition: all 300ms ease-in-out;\r\n}\r\n\r\n// FOCUS\r\nbutton:focus, button:hover{\r\n  svg{\r\n    color: var(--dnn-color-primary);\r\n  }\r\n}\r\n\r\n// EXPANDED\r\n:host([expanded]){\r\n  svg{\r\n    transform: rotate(90deg);\r\n  }\r\n}","import { Component, Host, h, Prop, Event } from '@stencil/core';\r\nimport { EventEmitter } from '@stencil/core';\r\nimport { Watch } from '@stencil/core';\r\nimport chevronRightIcon from \"@material-design-icons/svg/filled/chevron_right.svg\";\r\n\r\n@Component({\r\n  tag: 'dnn-chevron',\r\n  styleUrl: 'dnn-chevron.scss',\r\n  shadow: true\r\n})\r\nexport class DnnChevron {\r\n\r\n  /** Expand text for screen readers */\r\n  @Prop() expandText?: string = \"expand\";\r\n\r\n  /** Collapse text for screen readers */\r\n  @Prop() collapseText?: string = \"collapse\";\r\n\r\n  /** Is the chevron expanded */\r\n  @Prop({mutable: true, reflect: true}) expanded?: boolean = false;\r\n\r\n  /** Fires up when the expanded status changes */\r\n  @Event() changed: EventEmitter;\r\n\r\n  @Watch('expanded')\r\n  handleExpandedChanged(newValue: boolean) {\r\n    this.changed.emit(newValue);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <button aria-label={this.expanded ? this.collapseText : this.expandText}\r\n          onClick={() => this.expanded = !this.expanded}\r\n        >\r\n          <div innerHTML={chevronRightIcon} />\r\n        </button>\r\n      </Host>\r\n    );\r\n  }\r\n\r\n}\r\n",":host {\r\n  display: block;\r\n  #container{\r\n    height:0;\r\n    overflow: hidden;\r\n    transition: height 300ms ease-in-out;\r\n  }\r\n}","import { Component, Host, h, Prop, Element, Watch, State, Method, Event, EventEmitter, Listen } from '@stencil/core';\r\nimport { Debounce } from '../../utilities/debounce';\r\n\r\n@Component({\r\n  tag: \"dnn-collapsible\",\r\n  styleUrl: \"dnn-collapsible.scss\",\r\n  shadow: true\r\n})\r\nexport class DnnCollapsible {\r\n\r\n  @Element() el: HTMLDnnCollapsibleElement;\r\n\r\n  /** Defines if the panel is expanded or not. */\r\n  @Prop({reflect: true}) expanded: boolean = false;\r\n\r\n  /** Defines the transition time in ms, defaults to 300ms */\r\n  @Prop() transitionDuration?: number = 300;\r\n\r\n  @State() animating: boolean = false;\r\n\r\n  @Watch(\"expanded\")\r\n  handleExpandedChanged(newValue: boolean){\r\n    this.animating = true;\r\n    setTimeout(() => {\r\n      const container = this.el.shadowRoot.querySelector(\"#container\") as HTMLDivElement;\r\n      if (newValue){\r\n        container.style.height = container.scrollHeight + \"px\";\r\n      }\r\n      else{\r\n        container.style.height = \"0px\";\r\n      }\r\n    }, 0);\r\n    \r\n    setTimeout(() => {\r\n      this.animating = false;\r\n      this.dnnCollapsibleHeightChanged.emit();\r\n    }, this.transitionDuration);\r\n  }\r\n\r\n  /** Updates the component height, use to update after a slot content changes. */\r\n  @Debounce()\r\n  @Method()\r\n  async updateSize() {\r\n    this.updateComponentSize();\r\n  }\r\n\r\n  private updateComponentSize(){\r\n    if (this.expanded){\r\n      this.animating = true;\r\n      setTimeout(() => {\r\n        const container = this.el.shadowRoot.querySelector(\"#container\") as HTMLDivElement;\r\n        let newHeight = 0;\r\n        container.querySelector('slot').assignedElements().forEach(node => {\r\n          newHeight += node.scrollHeight;\r\n        });\r\n        container.style.height = newHeight + \"px\";\r\n      }, this.transitionDuration);\r\n    }\r\n  }\r\n\r\n  /** Fires whenever the collapsible height has changed */\r\n  @Event() dnnCollapsibleHeightChanged: EventEmitter<void>;\r\n\r\n  @Listen('dnnCollapsibleHeightChanged')\r\n  handleOtherCollapsibleHeightChanged(){\r\n    setTimeout(() => {\r\n      this.updateComponentSize();\r\n    }, this.transitionDuration);\r\n  }\r\n\r\n  private mutationObserver: MutationObserver;\r\n\r\n  private handleMutation(mutationList){\r\n    mutationList.forEach(mutation => {\r\n      setTimeout(() => {\r\n        mutation.target.closest('dnn-collapsible').updateSize();\r\n      }, this.transitionDuration);\r\n    });\r\n  }\r\n\r\n  componentWillLoad() {\r\n    this.mutationObserver = new MutationObserver((mutationList) => {\r\n      this.handleMutation(mutationList);\r\n    });\r\n  }\r\n\r\n  componentDidLoad(){\r\n    const container = this.el.shadowRoot.querySelector('#container') as HTMLDivElement;\r\n    container.style.transitionDuration = this.transitionDuration + 'ms';\r\n\r\n    // Monitor for content changes and update own height\r\n    const childNodes = [this.el];\r\n    childNodes.forEach(element => {\r\n      this.mutationObserver.observe(element, {attributes: true, characterData: true, childList: true, subtree: true});\r\n    });\r\n\r\n    const slot = this.el.shadowRoot.querySelector('slot');\r\n    slot.addEventListener(\"slotchange\", () => {\r\n      this.updateSize();\r\n    });\r\n  }\r\n\r\n  disconnectedCallback(){\r\n    this.mutationObserver.disconnect();\r\n  }\r\n  /*eslint-enable @stencil/own-methods-must-be-private */\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div id=\"container\">\r\n            <slot></slot>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n\r\n}\r\n","/** Color utility class with hsl and rgb converters\r\n * based on math at https://en.wikipedia.org/wiki/HSL_and_HSV\r\n * @copyright Copyright (c) .NET Foundation. All rights reserved.\r\n * @license MIT \r\n */\r\n\r\nexport class ColorInfo{\r\n\r\n    private _hue: number = 0;\r\n    /** gets the color hue\r\n     * @returns a number between 0 and 359, could contain decimals\r\n     */\r\n    get hue() { return this._hue; }\r\n    set hue(value: number){\r\n        if (value < 0) { value = 0; }\r\n        if (value > 359) { value = 359; }\r\n        this._hue = value;\r\n    }\r\n\r\n    private _saturation: number = 0;\r\n    /** gets the color saturation\r\n     * @returns a number between 0 and 1, could contain decimals\r\n    */\r\n    get saturation() { return this._saturation; }\r\n    set saturation(value: number) {\r\n        if (value < 0) { value = 0; }\r\n        if (value > 1) { value = 1; }\r\n        this._saturation = value;\r\n    }\r\n\r\n    private _lightness: number = 0;\r\n    /** gets the color lightness\r\n     * @returns a number between 0 and 1, could contain decimals\r\n     */\r\n    get lightness() { return this._lightness; }\r\n    set lightness(value: number) {\r\n        if (value < 0) { value = 0; }\r\n        if (value > 1) { value = 1; }\r\n        this._lightness = value;\r\n    }\r\n\r\n    /** gets or sets the red component \r\n     * @returns an integer between 0 and 255\r\n    */\r\n    get red() {\r\n        return this.getRGB().red;\r\n    }\r\n    set red(value) {\r\n        this.setHSL(value, this.green, this.blue);\r\n    }\r\n\r\n    /** gets or sets the green component\r\n     * @returns an integer between 0 and 255\r\n     */\r\n    get green() {\r\n        return this.getRGB().green;\r\n    }\r\n    set green(value: number) {\r\n        this.setHSL(this.red, value, this.blue);\r\n    }\r\n\r\n    /** gets or sets the blue component\r\n     * @returns an integer between 0 and 255\r\n     */\r\n    get blue() {\r\n        return this.getRGB().blue;\r\n    }\r\n    set blue(value: number) {\r\n        this.setHSL(this.red, this.green, value);\r\n    }\r\n\r\n    /** gets or sets the hex color value, expresses as 6 hexadecimal characters.\r\n     * @returns hex representation of the color\r\n     */\r\n    get hex() {\r\n        var r = this.getHex(this.red);\r\n        var g = this.getHex(this.green);\r\n        var b = this.getHex(this.blue);\r\n        return r + g + b;\r\n    }\r\n    set hex(value: string){\r\n        this.red = parseInt(value.substr(0,2));\r\n        this.green = parseInt(value.substr(2,2));\r\n        this.blue = parseInt(value.substr(4,2));\r\n    }\r\n\r\n    /** gets white or black color that is a good oposite to the current color\r\n     * @returns - \"000000\" or \"FFFFFF\"\r\n     */\r\n    get contrastColor() {\r\n        const brightness = (this.red*299 + this.green*587 + this.blue*114) / 1000\r\n        if (brightness > 127){\r\n            return \"000000\";\r\n        }\r\n        return \"FFFFFF\";\r\n    }\r\n\r\n    private getRGB() {\r\n        const chroma = (1 - Math.abs((2 * this._lightness) - 1)) * this.saturation;\r\n        // find the quandrant of the hue\r\n        const quadrant = this._hue / 60;\r\n        // calculate the offset from the quandrant center\r\n        const offset = chroma * (1 - Math.abs(quadrant % 2 - 1));\r\n\r\n        // Apply the chroma to the primary component and the offset to the 2nd most important component\r\n        let r = 0, g = 0, b = 0;\r\n        if (0 <= quadrant && quadrant <= 1) {\r\n            r = chroma; g = offset; // red to yellow\r\n        } else if (1 <= quadrant && quadrant <= 2) {\r\n            g = chroma; r = offset; // yellow to green\r\n        } else if (2 <= quadrant && quadrant <= 3) {\r\n            g = chroma; b = offset; // green to cyan\r\n        } else if (3 <= quadrant && quadrant <= 4) {\r\n            b = chroma; g = offset; // cyan to blue\r\n        } else if (4 <= quadrant && quadrant <= 5) {\r\n            b = chroma; r = offset; // blue to magenta\r\n        } else if (5 <= quadrant && quadrant <= 6) {\r\n            r = chroma; b = offset; // magenta to red\r\n        }\r\n        // calculate the bias to add to all channels to match the lightness\r\n        const bias = this._lightness - (chroma / 2);\r\n\r\n        return {\r\n            red: Math.round((r + bias) * 255),\r\n            green: Math.round((g + bias) * 255),\r\n            blue: Math.round((b + bias) * 255)\r\n        }\r\n    }\r\n\r\n    private setHSL(red: number, green: number, blue: number) {\r\n        // GENERAL DATA\r\n        // all math is based on values from 0 to 1\r\n        const r = red/255, g = green/255, b = blue/255;\r\n        // we need to max, min and the difference between them to derive hsl\r\n        const min = Math.min(r, g, b);\r\n        const max = Math.max(r, g, b);\r\n        const diff = max - min;\r\n        let h = 0, s = 0, l = 0;\r\n\r\n        // HUE\r\n        if (diff === 0) { // neutral\r\n            h = 0;\r\n        } else if (max === r) { // red (magenta to yellow range)\r\n            h = 60 * ((g - b) / diff);\r\n        } else if (max === g) { // green (yellow to cyan range)\r\n            h = 60 * (2 + ((b - r) / diff));\r\n        } else if (max === b) { // blue (cyan to magenta range)\r\n            h = 60 * (4 + ((r - g) / diff));\r\n        }\r\n        if (h < 0) { h = h + 360} // ensures positive hues only\r\n        if (h > 359) { h = 359} // ensures we never return 360 for simplicity since it is the same as 0\r\n\r\n        // LIGHTNESS\r\n        l = (max + min) / 2;\r\n\r\n        // SATURATION\r\n        if (max === 0 || min === 1) { // pure black or white have no saturation\r\n            s = 0;\r\n        } else {\r\n            s = (max - l) / (Math.min(l, 1 - l));\r\n        }\r\n\r\n        this._hue = h;\r\n        this._saturation = s;\r\n        this._lightness = l;\r\n    }\r\n\r\n    private getHex(value: number){\r\n        var hex = value.toString(16);\r\n        if (hex.length < 2){\r\n            hex = \"0\" + hex;\r\n        }\r\n        return hex;\r\n    }\r\n} ",".dnn-color-picker{\r\n    padding: 15px;\r\n    max-width: 400px;\r\n    .dnn-color-sliders{\r\n        display:flex;\r\n        flex-direction: column;\r\n        min-width: 200px;\r\n        .dnn-color-s-b{\r\n            border: 1px solid #ccc;\r\n            padding-bottom: var(--color-box-height, 50%);\r\n            position: relative;\r\n            background-color: red;\r\n            &:before{\r\n                content: '';\r\n                    position: absolute;\r\n                    top:0;\r\n                    left:0;\r\n                    width: 100%;\r\n                    height:100%;\r\n                    z-index:1;\r\n                    background: linear-gradient(to right, white, red);\r\n                    mix-blend-mode: saturation;\r\n            }\r\n            &:after{\r\n                content: '';\r\n                position: absolute;\r\n                top:0;\r\n                left:0;\r\n                width: 100%;\r\n                height:100%;\r\n                z-index:2;\r\n                background: linear-gradient(to bottom, white, black);\r\n                mix-blend-mode: luminosity;\r\n            }\r\n            button{\r\n                position: absolute;\r\n                bottom: calc(50% - 4px);\r\n                left: calc(50% - 4px);\r\n                width: 8px;\r\n                height: 8px;\r\n                z-index: 3;\r\n                display: block;\r\n                background: none;\r\n                border: none;\r\n                margin-left: -4px;\r\n                margin-bottom: -4px;\r\n                padding: 7px;\r\n                background-color: #fff;\r\n                border-radius: 50%;\r\n                &:before{\r\n                    content:'';\r\n                    position: absolute;\r\n                    top: -1px;\r\n                    left: -1px;\r\n                    border-radius: 50%;\r\n                }\r\n                &:after{\r\n                    content:'';\r\n                    position: absolute;\r\n                    top: 0px;\r\n                    left: 0px;\r\n                    border-radius: 50%;\r\n                    width: 10px;\r\n                    height: 10px;\r\n                    border: 2px solid #ccc;\r\n                }\r\n            } \r\n        }\r\n        .dnn-color-bar {\r\n            display: flex;\r\n            align-items: center;\r\n            margin-top: 15px;\r\n            .dnn-color-result {\r\n                flex-direction: column;\r\n                width: 50px;\r\n                height: 50px;\r\n                border-radius: 50%;\r\n                background: red;\r\n            }\r\n            .dnn-color-hue{\r\n                flex: auto;\r\n                margin-left: 10px;\r\n                height: 16px;\r\n                border: 1px solid #ccc;\r\n                position: relative;\r\n                background: linear-gradient(\r\n                    to right, \r\n                    #f00 0, \r\n                    #ff0 17%,\r\n                    #0f0 33%,\r\n                    #0ff 50%,\r\n                    #00f 67%,\r\n                    #f0f 84%,\r\n                    #f00 100%\r\n                );\r\n                button{\r\n                    width: 10px;\r\n                    height: 20px;\r\n                    position: absolute;\r\n                    top: -2px;\r\n                    left: calc(50% - 4px);\r\n                    border: 0;\r\n                    padding: 0;\r\n                    background-color: transparent;\r\n                    padding-left: -8px;\r\n                    &:before{\r\n                        content:'';\r\n                        position: absolute;\r\n                        top: -2px;\r\n                        left: 0px;\r\n                        border-radius: 3px;\r\n                        width: 100%;\r\n                        height: 100%;\r\n                        border: 1px solid #ccc;\r\n                        background-color: #fff;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    .dnn-color-fields{\r\n        display:flex;\r\n        flex-direction: column;\r\n        justify-content: space-between;\r\n        .dnn-color-mode-switch {\r\n            display: flex;\r\n            align-items: flex-end;\r\n            padding: .5em;\r\n            button {\r\n                background-color: transparent;\r\n                border: none;\r\n                svg {\r\n                    width: 3em;\r\n                    height: 3em;\r\n                    pointer-events: none;\r\n                    outline: none;\r\n                }\r\n            }\r\n        }\r\n        .dnn-rgb-color-fields {\r\n            display: flex;\r\n            justify-content: space-evenly;\r\n            .dnn-rgb-color-field {\r\n                display: flex;\r\n                flex-direction: column;\r\n                flex: auto;\r\n                text-align: center;\r\n                padding: .5em;\r\n                label {\r\n                    padding-bottom: .25em;\r\n                }\r\n                input{\r\n                    border-radius: var(--dnn-button-radius, 3px);\r\n                    border: 1px solid #ccc;\r\n                    padding: 0.5em;\r\n                    padding-left: 1.3em;\r\n                    text-align: center;\r\n                    &.red{\r\n                        border-color: red;\r\n                    }\r\n                    &.green{\r\n                        border-color: green;                \r\n                    }\r\n                    &.blue{\r\n                        border-color: blue;\r\n                    }            \r\n                }\r\n            }\r\n        }\r\n        .dnn-hsl-color-fields {\r\n            display: flex;\r\n            justify-content: space-evenly;\r\n            .dnn-hsl-color-field {\r\n                display: flex;\r\n                flex-direction: column;\r\n                flex: auto;\r\n                text-align: center;\r\n                padding: .5em;\r\n                label {\r\n                    padding-bottom: .25em;\r\n                }\r\n                input{\r\n                    border-radius: var(--dnn-button-radius, 3px);\r\n                    border: 1px solid #ccc;\r\n                    padding: 0.5em;\r\n                    padding-left: 1.3em;\r\n                    text-align: center;\r\n                }\r\n            }\r\n        }\r\n        .dnn-hex-color-fields {\r\n            display: flex;\r\n            justify-content: space-evenly;\r\n            .dnn-hex-color-field {\r\n                display: flex;\r\n                flex-direction: column;\r\n                flex: auto;\r\n                text-align: center;\r\n                padding: .5em;\r\n                label {\r\n                    padding-bottom: .25em;\r\n                }\r\n                .hex-input{\r\n                    position: relative;\r\n                    border-radius: var(--dnn-button-radius, 3px);\r\n                    border: 1px solid #ccc;\r\n                    padding: 0.323em;\r\n                    text-align: center;\r\n                    input{\r\n                        border:0;\r\n                        padding:0;\r\n                        margin:0;\r\n                        width:100%;\r\n                        height:100%;\r\n                        text-align:center;\r\n                    }\r\n                    button{\r\n                        position: absolute;\r\n                        height: 100%;\r\n                        top: 0;\r\n                        right: 1em;\r\n                        background-color: transparent;\r\n                        border:0;\r\n                        padding:0;\r\n                        margin:0;\r\n                        svg{\r\n                            min-width: 1em;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n} ","/** Reusable DNN UI component to pick a color\r\n * @copyright Copyright (c) .NET Foundation. All rights reserved.\r\n * @license MIT \r\n */\r\n\r\nimport { Component, h, State, Element, Prop, EventEmitter, Event, Watch } from \"@stencil/core\";\r\nimport { ColorInfo } from '../../utilities/colorInfo';\r\nimport { Debounce } from \"../../utilities/debounce\";\r\nimport repeatIcon from \"@material-design-icons/svg/filled/repeat.svg\";\r\nimport contentCopyIcon from \"@material-design-icons/svg/filled/content_copy.svg\";\r\n\r\n/** Color Picker for Dnn */\r\n@Component({\r\n    tag: 'dnn-color-picker',\r\n    styleUrl: 'dnn-color-picker.scss',\r\n    shadow: true\r\n})\r\nexport class DnnColorPicker {\r\n\r\n    @Element() el: HTMLDnnColorPickerElement;\r\n\r\n    /** Sets the initial color, must be a valid 8 character hexadecimal string without the # sign. */\r\n    @Prop() color: string = \"FFFFFF\";\r\n\r\n    /** Sets the width-height ratio of the color picker saturation-lightness box.\r\n     * @example 100% renders a perfect square\r\n     */\r\n    @Prop() colorBoxHeight: string = \"50%\";\r\n    \r\n    @State() currentColor: ColorInfo;\r\n    @State() rgbDisplay: string = \"flex\";\r\n    @State() hslDisplay: string = \"none\";\r\n    @State() hexDisplay: string = \"none\";\r\n\r\n    /** Fires up when the color is changed and emits a ColorInfo object\r\n     * @see ../../utilities/colorInfo.ts\r\n    */\r\n    @Event() colorChanged: EventEmitter<ColorInfo>;\r\n\r\n    @Debounce(100)\r\n    private colorChangedHandler(color: ColorInfo) {\r\n        this.colorChanged.emit(color);\r\n    }\r\n\r\n    @Watch(\"currentColor\")\r\n    handeCurrentColorChanged(newValue: ColorInfo){\r\n        this.colorChangedHandler(newValue);\r\n    }\r\n    \r\n    private saturationLightnessBox?: HTMLDivElement;\r\n    private hueRange?: HTMLDivElement;\r\n\r\n\r\n    componentWillLoad() {\r\n        this.handleHexChange(this.color);\r\n    }\r\n\r\n    componentDidLoad() {\r\n        (this.el as unknown as HTMLElement).style.setProperty(\"--color-box-height\", this.colorBoxHeight.toString());\r\n    }\r\n    \r\n    private getHex() {\r\n       return this.getDoublet(this.currentColor.red) + this.getDoublet(this.currentColor.green) + this.getDoublet(this.currentColor.blue);\r\n    }\r\n\r\n    private getContrast() {\r\n        return this.currentColor.contrastColor;\r\n    }\r\n\r\n    private getDoublet(value: number){\r\n        const valueString = value.toString(16).toUpperCase();\r\n        if (valueString.length === 1){\r\n            return '0' + valueString;\r\n        }\r\n        return valueString;\r\n    }\r\n\r\n    private handleSaturationLightnessMouseDown = (e) => {\r\n        e.preventDefault();\r\n        this.handleDragLightnessSaturation(e);\r\n        window.addEventListener('mousemove', this.handleDragLightnessSaturation);\r\n        window.addEventListener('mouseup', this.handleSaturationLightnessMouseUp);\r\n    }\r\n\r\n    private handleDragLightnessSaturation = (e) => {\r\n        const rect = this.saturationLightnessBox.getBoundingClientRect();        \r\n\r\n        let x = e.clientX - rect.left;        \r\n        if (x < 0) { x = 0}\r\n        if (x > rect.width) { x = rect.width}\r\n        x = x/rect.width;\r\n\r\n        let y = e.clientY - rect.top;\r\n        if (y < 0) { y = 0}\r\n        if (y > rect.height) { y = rect.height}\r\n        y = 1 - (y/rect.height);\r\n\r\n        const newColor = new ColorInfo();\r\n        newColor.hue = this.currentColor.hue;\r\n        newColor.saturation = x;\r\n        newColor.lightness = y;\r\n        this.currentColor = newColor;\r\n    }\r\n\r\n    private handleSaturationLightnessMouseUp = () => {\r\n        window.removeEventListener('mousemove', this.handleDragLightnessSaturation);\r\n        window.removeEventListener('mouseup', this.handleSaturationLightnessMouseUp);\r\n    }\r\n\r\n    private handleHueMouseDown = (e) => {\r\n        e.preventDefault();\r\n        this.handleDragHue(e);\r\n        window.addEventListener('mousemove', this.handleDragHue);\r\n        window.addEventListener('mouseup', this.handleHueMouseUp);        \r\n    }\r\n\r\n    private handleHueMouseUp = () => {\r\n        window.removeEventListener('mousemove', this.handleDragHue);\r\n        window.removeEventListener('mouseup', this.handleHueMouseUp); \r\n    }\r\n\r\n    private handleDragHue = (e) => {\r\n        const rect = this.hueRange.getBoundingClientRect();        \r\n\r\n        let x = e.clientX - rect.left;\r\n        if (x < 0) { x = 0}\r\n        if (x > rect.width) { x = rect.width}\r\n        x = x/rect.width*360;        \r\n\r\n        const newColor = new ColorInfo();\r\n        newColor.hue = x;\r\n        newColor.saturation = this.currentColor.saturation;\r\n        newColor.lightness = this.currentColor.lightness;\r\n        this.currentColor = newColor;\r\n    }\r\n\r\n    private handleComponentValueChange = (e, channel) => {\r\n        let value = parseInt(e.target.value);\r\n        if (isNaN(value)) { return }\r\n        const newColor = new ColorInfo();\r\n        if (value < 0) { value = 0; }\r\n        if (value > 255) { value = 255; }\r\n        let r = this.currentColor.red;\r\n        let g = this.currentColor.green;\r\n        let b = this.currentColor.blue;\r\n        switch (channel) {\r\n            case 'red':\r\n                r = value;\r\n                break;\r\n            case 'green':\r\n                g = value;\r\n                break;\r\n            case 'blue':\r\n                b = value;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        newColor.green = g;\r\n        newColor.red = r;\r\n        newColor.blue = b;\r\n        this.currentColor = newColor;\r\n    }\r\n\r\n    private handleHSLChange = (e, component) => {        \r\n        let value = parseInt(e.target.value);\r\n        if (isNaN(value)) {return}\r\n        const newColor = new ColorInfo();\r\n        if (value != null) {            \r\n            let h = this.currentColor.hue;\r\n            let s = this.currentColor.saturation;\r\n            let l = this.currentColor.lightness;\r\n            switch (component) {\r\n                case \"hue\":\r\n                    if (value < 0) { value = 0}\r\n                    if (value > 359) { value = 0}\r\n                    h = value;\r\n                    break;\r\n                case \"saturation\":\r\n                    if (value < 0) { value = 0}\r\n                    if (value > 100) { value = 100}\r\n                    s = value / 100;\r\n                    break;\r\n                case \"lightness\":\r\n                    if (value < 0) { value = 0}\r\n                    if (value > 100) { value = 100}\r\n                    l = value / 100;\r\n                    break;            \r\n                default:\r\n                    break;                \r\n            }\r\n            newColor.hue = h;\r\n            newColor.saturation = s;\r\n            newColor.lightness = l;\r\n            this.currentColor = newColor;\r\n        }\r\n    }\r\n\r\n    private handleHexChange(value: string){\r\n        const newColor = new ColorInfo();\r\n        if (value.match(/^(?:[\\da-f]{3}|[\\da-f]{6})$/i).length > 0) {\r\n            if (value.length === 3){\r\n                let expanded = value[0] + value[0] + value[1] + value[1] + value[2] + value [2];\r\n                value = expanded;\r\n            }\r\n            newColor.red = parseInt(value.substr(0,2), 16);\r\n            newColor.green = parseInt(value.substr(2,2), 16);\r\n            newColor.blue = parseInt(value.substr(4,2), 16);\r\n        }\r\n        else{\r\n            newColor.red = this.currentColor.red;\r\n            newColor.green = this.currentColor.green;\r\n            newColor.blue = this.currentColor.blue;\r\n        }\r\n        this.currentColor = newColor;\r\n    }\r\n\r\n    private switchColorMode(e) {\r\n        switch(e.target.id) {\r\n            case \"rgb-switch\":\r\n                this.rgbDisplay = \"none\";\r\n                this.hslDisplay = \"none\";\r\n                this.hexDisplay = \"flex\";\r\n                break;\r\n            case \"hex-switch\":\r\n                this.rgbDisplay = \"none\";\r\n                this.hslDisplay = \"flex\";\r\n                this.hexDisplay = \"none\";\r\n                break;\r\n            case \"hsl-switch\":\r\n                this.rgbDisplay = \"flex\";\r\n                this.hslDisplay = \"none\";\r\n                this.hexDisplay = \"none\";\r\n                break;\r\n            default:\r\n                this.rgbDisplay = \"flex\";\r\n                this.hslDisplay = \"none\";\r\n                this.hexDisplay = \"none\";\r\n        }\r\n    }\r\n\r\n    private handleSaturationLightnessKeyDown = (e) => {        \r\n        let newColor = new ColorInfo();\r\n        newColor.hue = this.currentColor.hue;\r\n        newColor.saturation = this.currentColor.saturation;\r\n        newColor.lightness = this.currentColor.lightness;\r\n\r\n        let value = 0.01;\r\n        if (e.shiftKey) { value = 0.1 ;}\r\n\r\n        switch (e.key) {\r\n            case \"ArrowUp\":\r\n                newColor.lightness += value;\r\n                break;\r\n            case \"ArrowDown\":\r\n                newColor.lightness -= value;\r\n                break;\r\n            case \"ArrowLeft\":\r\n                newColor.saturation -= value;\r\n                break;\r\n            case \"ArrowRight\":\r\n                newColor.saturation += value;\r\n            default:\r\n                break;                \r\n        }\r\n        this.currentColor = newColor;\r\n    }\r\n\r\n    private handleHueKeyDown = (e) => {\r\n        let newColor = new ColorInfo();\r\n        newColor.hue = this.currentColor.hue;\r\n        newColor.saturation = this.currentColor.saturation;\r\n        newColor.lightness = this.currentColor.lightness;\r\n\r\n        let value = 1;\r\n        if (e.shiftKey) { value = 10}\r\n\r\n        switch (e.key) {\r\n            case \"ArrowLeft\":\r\n                newColor.hue -= value;\r\n                break;\r\n            case \"ArrowRight\":\r\n                newColor.hue += value;\r\n            default:\r\n                break;\r\n        }\r\n        this.currentColor = newColor;\r\n    }\r\n\r\n    render() {\r\n        const hue = this.currentColor.hue;\r\n        const saturation = this.currentColor.saturation;\r\n        const lightness = this.currentColor.lightness;\r\n        const red = this.currentColor.red;\r\n        const green = this.currentColor.green;\r\n        const blue = this.currentColor.blue;\r\n\r\n        return (\r\n            <div class=\"dnn-color-picker\">\r\n                <div class=\"dnn-color-sliders\">\r\n                    <div class=\"dnn-color-s-b\" ref={(element) => this.saturationLightnessBox = element as HTMLDivElement}\r\n                        style={{backgroundColor: `hsl(${hue},100%,50%)`}}\r\n                        onMouseDown={this.handleSaturationLightnessMouseDown.bind(this)}\r\n                    >\r\n                        <button class=\"dnn-s-b-picker\"\r\n                            aria-label=\"Press up or down to adjust lightness, left or right to adjust saturation, hold shift to move by 10%\"\r\n                            role=\"slider\"\r\n                            aria-valuemin=\"0\"\r\n                            aria-valuemax=\"100\"\r\n                            aria-valuetext={`Saturation: ${Math.round(this.currentColor.saturation*100)}%, Lightness: ${Math.round(this.currentColor.lightness*100)}%`}\r\n                            style={{\r\n                                left: Math.round(saturation * 100)  + \"%\",\r\n                                bottom: Math.round(lightness * 100)  + \"%\"\r\n                            }}\r\n                            onKeyDown={(e) => this.handleSaturationLightnessKeyDown(e)}\r\n                        />\r\n                    </div>\r\n                    <div class=\"dnn-color-bar\">\r\n                        <div class=\"dnn-color-result\" style={{\r\n                            backgroundColor: '#' + this.getHex(),\r\n                            boxShadow: \"0 0 2px 1px \" + \"#\" + this.getContrast()\r\n                        }} \r\n                        />\r\n                        <div class=\"dnn-color-hue\"\r\n                            ref={(element) => this.hueRange = element as HTMLDivElement}\r\n                            onMouseDown={this.handleHueMouseDown.bind(this)}\r\n                        >\r\n                            <button class=\"dnn-hue-picker\"\r\n                                aria-label=\"Press left or right to adjust hue, hold shift to move by 10 degrees\"\r\n                                role=\"slider\"\r\n                                aria-valuemin=\"0\"\r\n                                aria-valuemax=\"359\"\r\n                                aria-valuenow={Math.round(hue)}\r\n                                style={{left: (hue/359*100).toString() + \"%\"}}\r\n                                onKeyDown={(e) => this.handleHueKeyDown(e)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"dnn-color-fields\">\r\n                    <div class=\"dnn-rgb-color-fields\" style={{display: this.rgbDisplay}}>\r\n                        <div class=\"dnn-rgb-color-field\">\r\n                            <label>R</label>\r\n                            <input type=\"number\" min=\"0\" max=\"255\" step=\"1\" class=\"red\" value={red} aria-label=\"red value\"\r\n                                onChange={(e) => this.handleComponentValueChange(e, 'red')}\r\n                            />\r\n                        </div>\r\n                        <div class=\"dnn-rgb-color-field\">\r\n                            <label>G</label>\r\n                            <input type=\"number\" min=\"0\" max=\"255\" class=\"green\" value={green} aria-label=\"green value\"\r\n                                onChange={(e) => this.handleComponentValueChange(e, 'green')}\r\n                            />\r\n                        </div>\r\n                        <div class=\"dnn-rgb-color-field\">\r\n                            <label>B</label>\r\n                            <input type=\"number\" min=\"0\" max=\"255\" class=\"blue\" value={blue} aria-label=\"blue value\"\r\n                                onChange={(e) => this.handleComponentValueChange(e, 'blue')}\r\n                            />\r\n                        </div>\r\n                        <div class=\"dnn-color-mode-switch\">\r\n                            <button\r\n                                id=\"rgb-switch\"\r\n                                innerHTML={repeatIcon}\r\n                                onClick={this.switchColorMode.bind(this)}\r\n                                aria-label=\"switch to hexadecimal value entry\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"dnn-hsl-color-fields\" style={{display: this.hslDisplay}}>\r\n                        <div class=\"dnn-hsl-color-field\">\r\n                            <label>H</label>\r\n                            <input type=\"number\" min=\"0\" max=\"359\" step={1} value={Math.round(hue)} aria-label=\"Hue\"\r\n                                onChange={(e) => this.handleHSLChange(e, 'hue')}\r\n                            />\r\n                        </div>\r\n                        <div class=\"dnn-hsl-color-field\">\r\n                            <label>S</label>\r\n                            <input type=\"number\" min=\"0\" max=\"100\" step={1} value={Math.round(saturation*100)} aria-label=\"Saturation\"\r\n                                onChange={(e) => this.handleHSLChange(e, 'saturation')}\r\n                            />\r\n                        </div>\r\n                        <div class=\"dnn-hsl-color-field\">\r\n                            <label>L</label>\r\n                            <input type=\"number\" min=\"0\" max=\"100\" step={1} value={Math.round(lightness*100)} aria-label=\"Lightness\"\r\n                                onChange={(e) => this.handleHSLChange(e, 'lightness')}\r\n                            />\r\n                        </div>\r\n                        <div class=\"dnn-color-mode-switch\">\r\n                            <button\r\n                                id=\"hsl-switch\"\r\n                                innerHTML={repeatIcon}\r\n                                onClick={this.switchColorMode.bind(this)}\r\n                                aria-label=\"Switch to red, green, blue entry mode\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"dnn-hex-color-fields\" style={{display: this.hexDisplay}}>\r\n                        <div class=\"dnn-hex-color-field\">\r\n                            <label>HEX</label>\r\n                            <div class=\"hex-input\">\r\n                                <input type=\"text\" aria-label=\"Hexadecimal value\"\r\n                                    value={this.getHex()}\r\n                                    onChange={e => this.handleHexChange((e.target as HTMLInputElement).value)}\r\n                                />\r\n                                <button\r\n                                    class=\"copy\"\r\n                                    innerHTML={contentCopyIcon}\r\n                                    aria-label=\"copy value\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"dnn-color-mode-switch\">\r\n                            <button\r\n                                id=\"hex-switch\"\r\n                                innerHTML={repeatIcon}\r\n                                onClick={this.switchColorMode.bind(this)}\r\n                                aria-label=\"Switch to hue saturation lightness values\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","\r\n:host {\r\n  /** \r\n  * @prop --border-color: The color of the border.\r\n  * @prop --border-radius: The radius of the controls borders.\r\n  * @prop --drop-background-color: The color of the background when a file is dropping.\r\n  */\r\n  --border-color: var(--dnn-color-tertiary-contrast, lightgray);\r\n  --border-radius: var(--dnn-controls-radius, 5px);\r\n  --drop-background-color: var(--dnn-color-tertiary, lightblue);\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n  text-align: center;\r\n  border: 2px dashed var(--border-color);\r\n  border-radius: var(--border-radius);\r\n  padding: 1rem;\r\n  transition: all 300ms ease-in-out;\r\n}\r\n\r\n:host(.dropping){\r\n  background-color: var(--drop-background-color);\r\n}\r\np{\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\nbutton{\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: 0px;\r\n  margin: 0;\r\n  padding: 0;\r\n  background-color: transparent;\r\n  &:hover{\r\n    cursor: pointer;\r\n  }\r\n  svg{\r\n    margin-right: 0.5rem;\r\n  }\r\n}\r\nlabel.upload-file{\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  input{\r\n    display: none;\r\n  }\r\n}\r\n.video-preview{\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  button{\r\n    margin: 1rem;\r\n  }\r\n}\r\n","import { Component, Host, h, Prop, State, Event, EventEmitter } from '@stencil/core';\r\nimport uploadIcon from \"@material-design-icons/svg/filled/upload.svg\";\r\nimport photoCameraIcon from \"@material-design-icons/svg/filled/photo_camera.svg\";\r\n\r\n@Component({\r\n  tag: 'dnn-dropzone',\r\n  styleUrl: 'dnn-dropzone.scss',\r\n  shadow: true,\r\n})\r\nexport class DnnDropzone {\r\n  /** Localization strings */\r\n  @Prop() resx:{\r\n    dragAndDropFile: string;\r\n    capture: string;\r\n    or: string;\r\n    takePicture: string;\r\n    uploadFile: string;\r\n  } = {\r\n    dragAndDropFile: \"Drag and drop a file\",\r\n    capture: \"Capture\",\r\n    or: \"or\",\r\n    takePicture: \"Take a picture\",\r\n    uploadFile: \"Upload a file\",\r\n  }\r\n\r\n  /** A list of allowed file extensions.\r\n   * If not specified, any file is allowed.\r\n   * Ex: [\"jpg\", \"jped\", \"gif\", \"png\"]\r\n   */\r\n  @Prop() allowedExtensions: string[];\r\n\r\n  /**\r\n   * If true, will allow the user to take a snapshot\r\n   * using the device camera. (only works over https).\r\n   */\r\n  @Prop() allowCameraMode: boolean = false;\r\n\r\n  /**\r\n   * Specifies the jpeg quality for when the device\r\n   * camera is used to generate a picture.\r\n   * Needs to be a number between 0 and 1 and defaults to 0.8\r\n   */\r\n  @Prop() captureQuality: number = 0.8;\r\n\r\n  /** Fires when file were selected. */\r\n  @Event() filesSelected: EventEmitter<File[]>;\r\n  \r\n  @State() canTakeSnapshots: boolean = false;\r\n\r\n  @State() takingPicture: boolean = false;\r\n  \r\n  private dropzone: HTMLElement;\r\n  private fileInput: HTMLInputElement;\r\n  private videoPreview: HTMLVideoElement;\r\n  private videoSettings!: MediaTrackSettings;\r\n\r\n\r\n  componentDidLoad() {\r\n    if (this.allowCameraMode){\r\n      this.checkIfBrowserCanTakeSnapshots()\r\n      .then(result => this.canTakeSnapshots = result);\r\n    }\r\n    if (this.allowedExtensions != undefined && this.allowedExtensions.length > 0){\r\n      var extensionsWithDots = this.allowedExtensions.map(e => `.${e}`);\r\n      var extensionsList = extensionsWithDots.join(\",\");\r\n      this.fileInput.accept = extensionsList;\r\n    }\r\n  }\r\n\r\n  private checkIfBrowserCanTakeSnapshots(): Promise<boolean> {\r\n    return new Promise((resolve) => {\r\n      const mediaDevices = navigator.mediaDevices;\r\n      if (mediaDevices == undefined || mediaDevices.enumerateDevices == undefined) {\r\n        resolve(false);\r\n      }\r\n      mediaDevices.enumerateDevices()\r\n        .then(devices => {\r\n          var result = devices.some(device => device.kind == \"videoinput\");\r\n          resolve(result);\r\n        });\r\n    });\r\n  }\r\n\r\n  private getFilesFromFileList(files: FileList) : File[] {\r\n    var fileList: File[] = [];\r\n    for (let index = 0; index < files.length; index++) {\r\n      const file = files[index];\r\n      fileList.push(file);\r\n    }\r\n\r\n    return fileList;\r\n  }\r\n\r\n  private handleUploadButton(element: HTMLInputElement): void {\r\n    let files = this.getFilesFromFileList(element.files);\r\n\r\n    this.filesSelected.emit(files);\r\n  }\r\n\r\n  private handleDragOver = (event: DragEvent) => \r\n  {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    event.dataTransfer.dropEffect = \"copy\";\r\n    this.dropzone.classList.add(\"dropping\");\r\n  };\r\n\r\n  private hasInvalidExtensions(files: FileList): boolean{\r\n    var hasInvalid = false;\r\n    for (let fileIndex = 0; fileIndex < files.length; fileIndex++) {\r\n      const file = files[fileIndex];\r\n      var regex = /(?:\\.([^.]+))?$/;\r\n      const fileExtension = regex.exec(file.name)[1];\r\n      if (fileExtension == undefined){\r\n        hasInvalid = true;\r\n      }\r\n\r\n      if (this.allowedExtensions != undefined && !this.allowedExtensions.includes(fileExtension)){\r\n        hasInvalid = true;\r\n      }\r\n\r\n      return hasInvalid;\r\n    }\r\n  }\r\n\r\n  private handleDrop = (dropEvent: DragEvent) => {\r\n    dropEvent.stopPropagation();\r\n    dropEvent.preventDefault();\r\n    const files = dropEvent.dataTransfer.files;\r\n\r\n    if (this.hasInvalidExtensions(files)){\r\n      return;\r\n    }\r\n    var fileList = this.getFilesFromFileList(files);\r\n    this.filesSelected.emit(fileList);\r\n  };\r\n\r\n  private takeSnapshot(): void {\r\n    this.takingPicture = true;\r\n    navigator.mediaDevices.getUserMedia({video: true, audio: false})\r\n    .then(stream => {\r\n      stream\r\n      this.videoPreview.srcObject = stream;\r\n      this.videoPreview.play()\r\n      .then(() => {\r\n        this.videoSettings = stream.getVideoTracks()[0].getSettings();\r\n      });\r\n    })\r\n    .catch(error => alert(error));\r\n  }\r\n\r\n  private applySnapshot(): void {\r\n    var canvas = document.createElement(\"canvas\");\r\n    const context = canvas.getContext(\"2d\");\r\n    canvas.width = this.videoSettings.width;\r\n    canvas.height = this.videoSettings.height;\r\n    context.drawImage(this.videoPreview, 0, 0);\r\n    canvas.toBlob(blob => {\r\n      var file = new File([blob], \"image.jpeg\", {type:\"image/jpeg\"});\r\n      this.takingPicture = false;\r\n      \r\n      var fileList = [file];\r\n      this.filesSelected.emit(fileList)\r\n    }, \"image/jpeg\", this.captureQuality);\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <Host\r\n        ref={e => this.dropzone = e}\r\n        class=\"dropzone\"\r\n        onDragOver={this.handleDragOver}\r\n        onDrop={this.handleDrop}\r\n        onDragLeave={() => this.dropzone.classList.remove(\"dropping\")}\r\n      >\r\n        {!this.takingPicture &&\r\n          [\r\n            <p>{this.resx?.dragAndDropFile}</p>\r\n          ,\r\n            <p>- {this.resx?.or} -</p>\r\n          ,\r\n            <label class=\"upload-file\">\r\n              <input\r\n                type=\"file\"\r\n                ref={el => this.fileInput = el}\r\n                onChange={e => this.handleUploadButton(e.target as HTMLInputElement)}\r\n              >\r\n              </input>\r\n              <span innerHTML={uploadIcon} />&nbsp;\r\n              {this.resx?.uploadFile}\r\n            </label>\r\n            ,\r\n            this.canTakeSnapshots &&\r\n              [\r\n                <p>- {this.resx?.or} -</p>\r\n                ,\r\n                <button\r\n                  onClick={() => this.takeSnapshot()}\r\n                >\r\n                  <span innerHTML={photoCameraIcon} />&nbsp;\r\n                  {this.resx?.takePicture}\r\n                </button>\r\n              ]\r\n          ]\r\n        }\r\n        {this.takingPicture &&\r\n          <div class=\"video-preview\">\r\n            <video ref={e => this.videoPreview = e} />\r\n            <button\r\n              onClick={() => this.applySnapshot()}\r\n            >\r\n              <span innerHTML={photoCameraIcon} />              \r\n              {this.resx?.capture}\r\n            </button>\r\n          </div>\r\n        }\r\n      </Host>\r\n    );\r\n  }\r\n\r\n}\r\n","export enum CornerType {\r\n    \"nw\",\r\n    \"ne\",\r\n    \"se\",\r\n    \"sw\",\r\n};",":host {\r\n  display: block;\r\n}\r\ncanvas {\r\n  display: none;\r\n}\r\n.view{\r\n  visibility: hidden;\r\n  opacity: 0;\r\n  height: 0;\r\n  overflow: hidden;\r\n  transition: all 300ms ease-in-out;\r\n  &.visible{\r\n    visibility: visible;\r\n    opacity: 1;\r\n    height: initial;\r\n    overflow: visible;\r\n  }\r\n  .cropper{\r\n    position: relative;\r\n    width: 100%;\r\n    img{\r\n      width: 100%;\r\n      display: block;\r\n      margin: 0 auto;\r\n    }\r\n    .backdrop{\r\n      backdrop-filter: saturate(0.5);\r\n      backdrop-filter: brightness(0.5);\r\n      position: absolute;\r\n      left: 0;\r\n      top: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n    .crop{\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n      outline: 2px dashed white;\r\n      box-shadow: black 0 0 0px 2px;\r\n      backdrop-filter: saturate(2);\r\n      backdrop-filter: brightness(2);\r\n      cursor: move;\r\n      >div{\r\n        width: 20px;\r\n        height: 20px;\r\n        background-color: white;\r\n        border: 2px solid rgba(0,0,0,0.5);\r\n        position: absolute;\r\n        &.nw, &.ne{\r\n          top: -17px;\r\n        }\r\n        &.ne, &.se{\r\n          right: -17px;\r\n        }\r\n        &.se, &.sw{\r\n          bottom: -17px;\r\n        }\r\n        &.sw, &.nw{\r\n          left: -17px;\r\n        }\r\n        &.nw, &.se{\r\n          cursor: nwse-resize;\r\n        }\r\n        &.ne, &.sw{\r\n          cursor: nesw-resize;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}","import { Component, Host, h, State, Prop, Event, EventEmitter } from '@stencil/core';\r\nimport { CornerType } from './CornerType';\r\n\r\n/**\r\n * Allows cropping an image in-browser with the option to enforce a specific final size.\r\n * All computation happens in the browser and the final image is emmited\r\n * in an event that has a data-url of the image.\r\n */\r\n@Component({\r\n  tag: 'dnn-image-cropper',\r\n  styleUrl: 'dnn-image-cropper.scss',\r\n  shadow: true,\r\n})\r\nexport class DnnImageCropper {\r\n  /** Sets the desired final image width. */\r\n  @Prop() width: number = 600;\r\n\r\n  /** Sets the desired final image height. */\r\n  @Prop() height: number = 600;\r\n\r\n  /** Can be used to customize controls text. */\r\n  @Prop() resx: {\r\n    capture: string;\r\n    dragAndDropFile: string;\r\n    or: string;\r\n    takePicture: string;\r\n    uploadFile: string;\r\n  } = {\r\n    capture: \"Capture\",\r\n    dragAndDropFile: \"Drag and drop an image\",\r\n    or: \"or\",\r\n    takePicture: \"Take a picture\",\r\n    uploadFile: \"Upload an image\",\r\n  }\r\n\r\n  /** Sets the output quality of the corpped image (number between 0 and 1). */\r\n  @Prop() quality: number = 0.8;\r\n\r\n  /** When the image crop changes, emits the dataurl for the new cropped image. */\r\n  @Event() imageCropChanged: EventEmitter<string>;\r\n\r\n  @State() view: IComponentInterfaces[\"View\"];\r\n  \r\n  private host: HTMLElement;\r\n  private hasPictureView: HTMLDivElement;\r\n  private noPictureView: HTMLDivElement;\r\n  private canvas: HTMLCanvasElement;\r\n  private image: HTMLImageElement;\r\n  private crop: HTMLDivElement;\r\n  private previousTouch: Touch;\r\n\r\n  componentDidLoad() {\r\n    this.setView(\"noPictureView\");\r\n  }\r\n\r\n  private setView(newView: IComponentInterfaces[\"View\"]){\r\n    const views = this.host.shadowRoot.querySelectorAll(\".view\");\r\n    views.forEach(v =>\r\n      v.classList.remove(\"visible\"));\r\n    switch (newView) {\r\n      case \"noPictureView\":\r\n        this.noPictureView.classList.add(\"visible\");\r\n        break;\r\n      case \"hasPictureView\":\r\n        this.hasPictureView.classList.add(\"visible\");\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.view = newView;\r\n  }\r\n\r\n  private initCrop(){\r\n    var wantedRatio = this.width / this.height;\r\n    var imageRect = this.image.getBoundingClientRect();\r\n    var imageRatio = imageRect.width / imageRect.height;\r\n    \r\n    if (wantedRatio > imageRatio){\r\n        var wantedHeight = imageRect.width / wantedRatio;\r\n        var diff = imageRect.height - wantedHeight;\r\n        this.crop.style.top = Math.round(diff/2).toString() + \"px\";\r\n        this.crop.style.height = Math.round(wantedHeight).toString() + \"px\";\r\n    }\r\n    else{\r\n      var wantedWidth = imageRect.height * wantedRatio;\r\n      var diff = imageRect.width - wantedWidth;\r\n        this.crop.style.left = Math.round(diff/2).toString() + \"px\";\r\n        this.crop.style.width = Math.round(wantedWidth).toString() + \"px\";\r\n    }\r\n  }\r\n\r\n  private setImage(){\r\n    this.image.src = this.canvas.toDataURL();\r\n    window.requestAnimationFrame(() => {\r\n      this.initCrop();\r\n      this.emitImage();\r\n    });\r\n  }\r\n\r\n  private handleNewFile(file: File): void {\r\n    if (file.type.split('/')[0] != \"image\"){\r\n      return;\r\n    }\r\n    \r\n    var reader = new FileReader();\r\n    reader.onload = readerLoadEvent => {\r\n      var img = new Image();\r\n      img.onload = () => {\r\n        this.canvas.width = img.width;\r\n        this.canvas.height = img.height;\r\n        var ctx = this.canvas.getContext(\"2d\");\r\n        ctx.drawImage(img,0,0);\r\n        this.setView(\"hasPictureView\");\r\n        this.setImage();\r\n      }\r\n      img.src = readerLoadEvent.target.result.toString();\r\n    }\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  private handleCropMouseDown = (event: MouseEvent | TouchEvent) => {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    const element = event.target as HTMLElement;\r\n    const className = element.classList[0];\r\n\r\n    document.addEventListener(\"mouseup\", this.handleImageCropFinished, false);\r\n    document.addEventListener(\"touchend\", this.handleImageCropFinished, false);\r\n    switch (className) {\r\n      case \"crop\":\r\n        document.addEventListener(\"mousemove\", this.handleCropDrag, false);\r\n        document.addEventListener(\"touchmove\", this.handleCropDrag, false)\r\n        document.addEventListener(\"mouseup\", () => document.removeEventListener(\"mousemove\", this.handleCropDrag));\r\n        document.addEventListener(\"touchend\", () => document.removeEventListener(\"touchmove\", this.handleCropDrag));\r\n        break;\r\n      case \"nw\":\r\n        document.addEventListener(\"mousemove\", this.handleNwMouseMove, false);\r\n        document.addEventListener(\"touchmove\", this.handleNwMouseMove, false)\r\n        document.addEventListener(\"mouseup\", () => document.removeEventListener(\"mousemove\", this.handleNwMouseMove));\r\n        document.addEventListener(\"touchend\", () => document.removeEventListener(\"touchmove\", this.handleNwMouseMove));\r\n        break;\r\n      case \"ne\":\r\n        document.addEventListener(\"mousemove\", this.handleNeMouseMove, false);\r\n        document.addEventListener(\"touchmove\", this.handleNeMouseMove, false)\r\n        document.addEventListener(\"mouseup\", () => document.removeEventListener(\"mousemove\", this.handleNeMouseMove));\r\n        document.addEventListener(\"touchend\", () => document.removeEventListener(\"touchmove\", this.handleNeMouseMove));\r\n        break\r\n      case \"se\":\r\n        document.addEventListener(\"mousemove\", this.handleSeMouseMove, false);\r\n        document.addEventListener(\"touchmove\", this.handleSeMouseMove, false)\r\n        document.addEventListener(\"mouseup\", () => document.removeEventListener(\"mousemove\", this.handleSeMouseMove));\r\n        document.addEventListener(\"touchend\", () => document.removeEventListener(\"touchmove\", this.handleSeMouseMove));\r\n        break;\r\n      case \"sw\":\r\n        document.addEventListener(\"mousemove\", this.handleSwMouseMove, false);\r\n        document.addEventListener(\"touchmove\", this.handleSwMouseMove, false)\r\n        document.addEventListener(\"mouseup\", () => document.removeEventListener(\"mousemove\", this.handleSwMouseMove));\r\n        document.addEventListener(\"touchend\", () => document.removeEventListener(\"touchmove\", this.handleSwMouseMove));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  private handleImageCropFinished = (_ev: MouseEvent) => {\r\n    this.emitImage();\r\n    document.removeEventListener(\"mouseup\", this.handleImageCropFinished);\r\n    this.previousTouch = undefined;\r\n  }\r\n\r\n  private emitImage() {\r\n    var x = this.crop.offsetLeft / this.image.width * this.image.naturalWidth;\r\n    var y = this.crop.offsetTop / this.image.height * this.image.naturalHeight;\r\n\r\n    var cropRect = this.crop.getBoundingClientRect();\r\n    var width = cropRect.width / this.image.width * this.image.naturalWidth;\r\n    var height = cropRect.height / this.image.height * this.image.naturalHeight;\r\n\r\n    if (x < 0)\r\n      x = 0;\r\n    if (x > this.image.naturalWidth)\r\n      x = this.image.naturalWidth;\r\n    if (y < 0)\r\n      y = 0;\r\n    if (y > this.image.naturalWidth)\r\n      y = this.image.naturalWidth;\r\n    if (width > this.image.naturalWidth)\r\n      width = this.image.naturalWidth;\r\n    if (height > this.image.naturalHeight)\r\n      height = this.image.naturalHeight;\r\n\r\n    var dataUrl = this.generateCroppedImage(x, y, width, height, this.width, this.height);\r\n    this.imageCropChanged.emit(dataUrl);\r\n  }\r\n\r\n  private generateCroppedImage(x: number, y: number, width: number, height: number, desiredWidth: number, desiredHeight: number) {\r\n    this.canvas.width = desiredWidth;\r\n    this.canvas.height = desiredHeight;\r\n    const context = this.canvas.getContext(\"2d\");\r\n    context.clearRect(0, 0, desiredWidth, desiredHeight);\r\n    context.drawImage(this.image, x, y, width, height, 0, 0, desiredWidth, desiredHeight);\r\n\r\n    return this.canvas.toDataURL(\"image/jpeg\", this.quality);\r\n  }\r\n\r\n  private handleNwMouseMove = (event: MouseEvent | TouchEvent) => {\r\n    this.handleCornerDrag(event, CornerType.nw);\r\n  }\r\n\r\n  private handleNeMouseMove = (event: MouseEvent | TouchEvent) => {\r\n    this.handleCornerDrag(event, CornerType.ne);\r\n  }\r\n\r\n  private handleSeMouseMove = (event: MouseEvent | TouchEvent) => {\r\n    this.handleCornerDrag(event, CornerType.se);\r\n  }\r\n\r\n  private handleSwMouseMove = (event: MouseEvent | TouchEvent) => {\r\n    this.handleCornerDrag(event, CornerType.sw);\r\n  }\r\n\r\n  private handleCornerDrag = (event: MouseEvent | TouchEvent, corner: CornerType) => {\r\n    if (!this.isMouseStillInTarget(event)){\r\n      return;\r\n    }\r\n    \r\n    let {left, top} = this.getCornerLeftTop(corner);\r\n    let newWidth = 0;\r\n    let newHeight = 0;\r\n    let orientation: \"horizontal\" | \"vertical\" = \"horizontal\";\r\n    const wantedRatio = this.width / this.height;\r\n    const cropRect = this.crop.getBoundingClientRect();\r\n    const imageRect = this.image.getBoundingClientRect();\r\n    let { movementX, movementY } = this.getMouvementFromEvent(event);\r\n    if (Math.abs(movementX) < Math.abs(movementY)){\r\n      orientation = \"vertical\";\r\n    }\r\n\r\n    if (orientation == \"horizontal\"){\r\n      switch (corner) {\r\n        case CornerType.nw:\r\n        case CornerType.sw:\r\n          newWidth = cropRect.width - movementX;\r\n          newHeight = newWidth / wantedRatio;\r\n          break;\r\n        case CornerType.ne:\r\n        case CornerType.se:\r\n          newWidth = cropRect.width + movementX;\r\n          newHeight = newWidth / wantedRatio;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    } else{\r\n      switch (corner) {\r\n        case CornerType.nw:\r\n        case CornerType.ne:\r\n          newHeight = cropRect.height - movementY;\r\n          newWidth = newHeight * wantedRatio;\r\n          break;\r\n        case CornerType.se:\r\n        case CornerType.sw:\r\n          newHeight = cropRect.height + movementY;\r\n          newWidth = newHeight * wantedRatio;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    switch (corner) {\r\n      case CornerType.ne:\r\n      case CornerType.nw:\r\n        const topOffset = cropRect.height - newHeight;\r\n        top = this.crop.offsetTop + topOffset;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    switch (corner) {\r\n      case CornerType.nw:\r\n      case CornerType.sw:\r\n        const leftOffset = cropRect.width - newWidth;\r\n        left = this.crop.offsetLeft + leftOffset;\r\n        if (left < 0) left = 0;\r\n        if (left > imageRect.width) left = imageRect.width;\r\n        if (top < 0) top = 0;\r\n        if (top > imageRect.height) top = imageRect.height;\r\n        if (left + newWidth > imageRect.width) newWidth = imageRect.width - left;\r\n        if (top + newHeight > imageRect.height) newHeight = imageRect.height - top;\r\n        break;\r\n      case CornerType.ne:\r\n      case CornerType.se:\r\n        if (top < 0) top = 0;\r\n        if (top > imageRect.height) top = imageRect.height;\r\n        if (left + newWidth > imageRect.width) newWidth = imageRect.width - left;\r\n        if (top + newHeight > imageRect.height) newHeight = imageRect.height - top;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    if (newWidth / newHeight != wantedRatio){\r\n      return;\r\n    }\r\n\r\n    switch (corner) {\r\n      case CornerType.ne:\r\n        this.crop.style.top = `${top}px`;\r\n        this.crop.style.width = `${newWidth}px`;\r\n        this.crop.style.height = `${newHeight}px`;\r\n        break;\r\n      case CornerType.nw:\r\n        this.crop.style.left = `${left}px`;\r\n        this.crop.style.top = `${top}px`;\r\n        this.crop.style.width = `${newWidth}px`;\r\n        this.crop.style.height = `${newHeight}px`;\r\n        break;\r\n      case CornerType.se:\r\n        this.crop.style.width = `${newWidth}px`;\r\n        this.crop.style.height = `${newHeight}px`;\r\n        break;\r\n      case CornerType.sw:\r\n        this.crop.style.left = `${left}px`;\r\n        this.crop.style.width = `${newWidth}px`;\r\n        this.crop.style.height = `${newHeight}px`;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  private getCornerLeftTop(corner: CornerType): { left: number; top: number; } {\r\n    let left = 0;\r\n    let top = 0;\r\n    switch (corner) {\r\n      case CornerType.se:\r\n        left = this.crop.offsetLeft;\r\n        top = this.crop.offsetTop;\r\n        break;\r\n      case CornerType.sw:\r\n        top = this.crop.offsetTop;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return {top, left};\r\n  }\r\n\r\n  private handleCropDrag = (ev: MouseEvent | TouchEvent) => {\r\n    if (!this.isMouseStillInTarget(ev)){\r\n      return;\r\n    }\r\n    let {movementX, movementY} = this.getMouvementFromEvent(ev);\r\n    let newLeft = this.crop.offsetLeft + movementX;\r\n    let newTop = this.crop.offsetTop + movementY;\r\n    var imageRect = this.image.getBoundingClientRect();\r\n    var cropRect = this.crop.getBoundingClientRect();\r\n    if (newLeft < 0){\r\n      newLeft = 0;\r\n    }\r\n    if (newTop < 0){\r\n      newTop = 0;\r\n    }\r\n    if (newLeft + cropRect.width > imageRect.width){\r\n      newLeft = this.crop.offsetLeft;\r\n    }\r\n    if (newTop + cropRect.height > imageRect.height){\r\n      newTop = this.crop.offsetTop;\r\n    }\r\n    this.crop.style.left = newLeft + \"px\";\r\n    this.crop.style.top = newTop + \"px\";\r\n  };\r\n  \r\n  private getMouvementFromEvent(event: MouseEvent | TouchEvent) {\r\n    let movementX = 0;\r\n    let movementY = 0;\r\n    if (event instanceof MouseEvent) {\r\n      movementX = event.movementX;\r\n      movementY = event.movementY;\r\n    }\r\n    if (typeof TouchEvent !== \"undefined\"){\r\n      if (event instanceof TouchEvent) {\r\n        let touch = event.touches[0];\r\n        if (this.previousTouch != undefined) {\r\n          movementX = touch.pageX - this.previousTouch.pageX;\r\n          movementY = touch.pageY - this.previousTouch.pageY;\r\n        }\r\n        this.previousTouch = touch;\r\n      }\r\n    }\r\n    return { movementX, movementY };\r\n  }\r\n\r\n  private isMouseStillInTarget(event: MouseEvent | TouchEvent) {\r\n    let mouseX: number;\r\n    let mouseY: number;\r\n    const imageRect = this.image.getBoundingClientRect();\r\n    \r\n    if (event instanceof MouseEvent){\r\n      mouseX = event.clientX;\r\n      mouseY = event.clientY;\r\n    }\r\n\r\n    if (event instanceof TouchEvent){\r\n      var touch = event.touches[0];\r\n      mouseX = touch.clientX;\r\n      mouseY = touch.clientY;\r\n    }\r\n    \r\n    if (\r\n      mouseX < imageRect.x ||\r\n      mouseY < imageRect.y ||\r\n      mouseX > imageRect.left + imageRect.width ||\r\n      mouseY > imageRect.top + imageRect.height)\r\n    {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host ref={el => this.host = el}>\r\n        <canvas ref={el => this.canvas = el} />\r\n        <div\r\n          class=\"view\"\r\n          ref={el => this.hasPictureView = el}\r\n        >\r\n          <div class=\"cropper\">\r\n            <img ref={el => this.image = el} />\r\n            <div class=\"backdrop\" />\r\n            <div\r\n              class=\"crop\"\r\n              ref={e => this.crop = e}\r\n              onMouseDown={this.handleCropMouseDown}\r\n              onTouchStart={this.handleCropMouseDown}\r\n            >\r\n              <div class=\"nw\" />\r\n              <div class=\"ne\" />\r\n              <div class=\"se\" />\r\n              <div class=\"sw\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          class=\"view\"\r\n          ref={el => this.noPictureView = el}>\r\n            <dnn-dropzone\r\n              allowCameraMode\r\n              onFilesSelected={e => this.handleNewFile(e.detail[0])}\r\n              resx={\r\n                {\r\n                  capture: this.resx.capture,\r\n                  dragAndDropFile: this.resx.dragAndDropFile,\r\n                  or: this.resx.or,\r\n                  takePicture: this.resx.takePicture,\r\n                  uploadFile: this.resx.uploadFile,\r\n                }\r\n              }\r\n            />\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n\r\ninterface IComponentInterfaces\r\n{\r\n  View: \"noPictureView\" | \"takingPictureView\" | \"hasPictureView\" | \"hasCroppedPictureView\";\r\n}",":host {\r\n  display: block;\r\n  .overlay{\r\n    background-color: rgba(0,0,0,0.5);\r\n    position: fixed;\r\n    top:0;\r\n    left:0;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: 1;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    backdrop-filter: blur(2px);\r\n    transition: all 300ms ease-in-out;\r\n    visibility: hidden;\r\n    opacity: 0;\r\n    .modal{\r\n      background-color: white;\r\n      padding: 30px;\r\n      transform: scale(2);\r\n      transition: all 300ms ease-in-out;\r\n      z-index: 2;\r\n      position: relative;\r\n      margin: 10%;\r\n      max-height: 80%;\r\n      border-radius: var(--dnn-controls-radius, 5px);\r\n      box-shadow: 10px 10px 20px 0 rgba(0,0,0,0.5);\r\n      display: block;\r\n      .close{\r\n        position: absolute;\r\n        background-color:white;\r\n        border: 2px solid white;\r\n        border-radius: 50%;\r\n        padding: 0;\r\n        margin: 0;\r\n        top: -12px;\r\n        right: -12px;\r\n        outline: none;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        &:focus, &:hover{\r\n          box-shadow: 0 0 2px 2px var(--dnn-color-primary, blue);\r\n        }\r\n        svg{\r\n          width: 24px;\r\n          height: 24px;\r\n          color: grey;\r\n        }\r\n      }\r\n    }\r\n    &.visible{\r\n      visibility: visible;\r\n      opacity: 1;\r\n      .modal{\r\n        transform: scale(1);\r\n        box-shadow: 4px 4px 10px 0px rgba(0,0,0,0.5);\r\n        display: block;\r\n      }\r\n    }\r\n  }\r\n}","import { Component, Element, Host, h, Prop, Event, EventEmitter, Method, State } from '@stencil/core';\r\nimport cancelIcon from \"@material-design-icons/svg/filled/cancel.svg\";\r\n\r\n@Component({\r\n  tag: 'dnn-modal',\r\n  styleUrl: 'dnn-modal.scss',\r\n  shadow: true\r\n})\r\nexport class DnnModal {\r\n  \r\n  @Element() el!: HTMLDnnModalElement;\r\n  \r\n  /**\r\n   * Pass false to remove the backdrop click auto-dismiss feature.\r\n   */\r\n  @Prop() backdropDismiss: boolean = true;\r\n\r\n  /**\r\n   * Optionally pass the aria-label text for the close button.\r\n   * Defaults to \"Close modal\" if not provided.\r\n   */\r\n  @Prop() closeText?: string = \"Close modal\";\r\n\r\n  /**\r\n   * Optionally you can pass false to not show the close button.\r\n   * If you decide to do so, you should either not also prevent dismissal by clicking the backdrop\r\n   * or provide your own dismissal logic in the modal content.\r\n   */\r\n  @Prop() showCloseButton?: boolean = true;\r\n\r\n  @State() visible: boolean = false;\r\n\r\n  /**\r\n   * Shows the modal\r\n   */\r\n  @Method()\r\n  async show() {\r\n    this.visible = true;\r\n  }\r\n\r\n  /**\r\n   * Hides the modal\r\n   */\r\n  @Method()\r\n  async hide() {\r\n    this.visible = false;\r\n  }\r\n\r\n  /**\r\n   * Fires when the modal is dismissed.\r\n   */\r\n  @Event() dismissed!: EventEmitter;\r\n\r\n  private handleDismiss(){\r\n    this.visible = false;\r\n    this.dismissed.emit();\r\n  }\r\n\r\n  private handleBackdropClick(e: MouseEvent): void {\r\n    const element = (e.target as HTMLElement);\r\n    if (element.id === \"backdrop\" && this.backdropDismiss){\r\n      this.handleDismiss();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div id=\"backdrop\"\r\n          class={this.visible ? 'overlay visible' : 'overlay'}\r\n          onClick={e => this.handleBackdropClick(e)}\r\n        >\r\n          <div class=\"modal\">\r\n            {this.showCloseButton &&\r\n              <button\r\n                class=\"close\"\r\n                innerHTML={cancelIcon}\r\n                aria-label={this.closeText}\r\n                onClick={() => this.handleDismiss()}\r\n              />\r\n            }\r\n            <slot></slot>\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  --background-color: transparent;\r\n  --color: #333;\r\n  --border-size: 1px;\r\n  --border-color: grey;\r\n  --border-active-color: black;\r\n  --border-radius: var(--dnn-controls-radius, 5px);\r\n  --padding: var(--dnn-controls-padding, 5px);\r\n  --focus-color: var(--dnn-color-primary, blue);\r\n  input {\r\n    width:100%;\r\n    border: var(--border-size) solid var(--border-color);\r\n    outline: none;\r\n    border-radius: var(--border-radius);\r\n    padding: var(--padding);\r\n    padding-right: 32px;\r\n    transition: all 300ms ease-in-out;\r\n    &:focus, &:hover{\r\n      outline: none;\r\n      box-shadow: 0 0 2px 2px var(--focus-color);\r\n    }\r\n  }\r\n  svg{\r\n    position: absolute;\r\n    top:0;\r\n    right:0;\r\n    height: 100%;\r\n    transform: scale(0.7);\r\n    fill: var(--color);\r\n    outline: var(--color);\r\n    color: var(--color);\r\n    transition: all 300ms ease-in-out;\r\n  }\r\n  button{\r\n    background: transparent;\r\n    border: 0;\r\n    margin: 0;\r\n    padding: 0;\r\n    &:focus, &:hover{\r\n      svg{\r\n        fill: var(--focus-color);\r\n      outline: var(--focus-color);\r\n      color: var(--focus-color);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, Host, h, Event, EventEmitter, Watch, Prop } from '@stencil/core';\r\nimport { Debounce } from '../../utilities/debounce';\r\nimport searchIcon from \"@material-design-icons/svg/filled/search.svg\";\r\nimport cancelIcon from \"@material-design-icons/svg/filled/cancel.svg\";\r\n@Component({\r\n  tag: 'dnn-searchbox',\r\n  styleUrl: 'dnn-searchbox.scss',\r\n  shadow: true\r\n})\r\nexport class DnnSearchbox {\r\n\r\n  /**\r\n   * Sets the field placeholder text.\r\n   */\r\n  @Prop() placeholder?: string = \"\";\r\n\r\n  /**\r\n   * Debounces the queryChanged by 500ms.\r\n   */\r\n  @Prop() debounced: boolean = true;\r\n\r\n  /** Sets the query */\r\n  @Prop({mutable: true}) query: string = \"\";\r\n\r\n  /**\r\n   * Fires up each time the search query changes.\r\n   * The data passed is the new query.\r\n   */\r\n  @Event() queryChanged: EventEmitter;\r\n\r\n  @Watch('query')\r\n  fireQueryChanged(){\r\n    if (this.debounced){\r\n      this.debouncedHandleQueryChanged();\r\n    }\r\n    else{\r\n      this.handleQueryChanged();\r\n    }\r\n  }\r\n  \r\n  private handleQueryChanged(){\r\n    this.queryChanged.emit(this.query);\r\n  }\r\n\r\n  @Debounce(500)\r\n  private debouncedHandleQueryChanged(){\r\n    this.handleQueryChanged();\r\n  }\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <input type=\"text\" value={this.query}\r\n          placeholder={this.placeholder}\r\n          onInput={e => this.query = (e.target as HTMLInputElement).value}\r\n        />\r\n        {this.query !== \"\" ?\r\n          <button class=\"svg clear\"\r\n            innerHTML={cancelIcon}\r\n            onClick={() => this.query = \"\"}\r\n          />\r\n        :\r\n        <span innerHTML={searchIcon} />\r\n        }\r\n      </Host>\r\n    );\r\n  }\r\n\r\n}\r\n",":host {\r\n  /**\r\n  * @prop --color: Normal Color of the inactive sort icon.\r\n  * @prop --color-sorted: Color of the sorted sort icon.\r\n  * @prop --color-hover: Color of the icons when hovered.\r\n  */\r\n  display: inline-block;\r\n}\r\n\r\nbutton {\r\n  outline: none;\r\n  border: none;\r\n  margin: 0;\r\n  padding: 0;\r\n  background-color: transparent;\r\n  outline: none;\r\n  display: inline-block;\r\n  line-height: 1em;\r\n  position: relative;\r\n  top: 0.25em;\r\n  svg{\r\n    height: 1.5em;\r\n    width: auto;\r\n    fill: var(--color, #888);\r\n  }\r\n  &.active{\r\n    svg{\r\n      fill: var(--color-sorted, var(--dnn-color-primary, rgb(2,139,255)));\r\n    }\r\n  }\r\n  &:hover, &:focus{\r\n    svg{\r\n      fill: var(--color-hover, var(--dnn-color-primary-light, #36a1ff));\r\n    }\r\n  }\r\n}","import { Component, Host, h, Prop, Event, EventEmitter } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'dnn-sort-icon',\r\n  styleUrl: 'dnn-sort-icon.scss',\r\n  shadow: true\r\n})\r\nexport class DnnSortIcon {\r\n  /** Defines the current sort direction */\r\n  @Prop() sortDirection: \"asc\" | \"desc\" | \"none\" = \"none\";\r\n\r\n  /** Emitted when the sort is changed. */\r\n  @Event() sortChanged!: EventEmitter<\"asc\"|\"desc\"|\"none\">;\r\n  \r\n  private changeSort(): void {\r\n    switch (this.sortDirection) {\r\n      case \"asc\":\r\n        this.sortDirection = \"desc\";\r\n        break;\r\n      case \"desc\":\r\n        this.sortDirection = \"asc\";\r\n        break;\r\n      case \"none\":\r\n        this.sortDirection = \"asc\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.sortChanged.emit(this.sortDirection);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <button\r\n          class={{\"active\": this.sortDirection != \"none\"}}\r\n          onClick={() => this.changeSort()}\r\n        >\r\n          {this.sortDirection == \"none\" &&\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 12 16\"><path d=\"M 0 7 H 12 L 6 0 Z M 0 9 H 12 L 6 16 Z\"></path></svg>\r\n          }\r\n          {this.sortDirection == \"asc\" &&\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 12 16\"><path d=\"M 0 7 H 12 L 6 0 Z\"></path></svg>\r\n          }\r\n          {this.sortDirection == \"desc\" &&\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 12 16\"><path d=\"M 0 9 H 12 L 6 16 Z\"></path></svg>\r\n          }\r\n        </button>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",null,"import { Component, Host, h, Prop, State, Method } from \"@stencil/core\";\r\n\r\n/** Represents a single tab and must be used inside a dnn-tabs element. */\r\n@Component({\r\n    tag: 'dnn-tab',\r\n    styleUrl: 'dnn-tab.scss',\r\n    shadow: true,\r\n})\r\nexport class DnnTab {\r\n    /** Defines the tab title. */\r\n    @Prop() tabTitle!: string;\r\n\r\n    @State() visible: boolean = false;\r\n\r\n    /** Shows the tab. */\r\n    @Method()\r\n    async show(){\r\n        this.visible = true;\r\n    }\r\n\r\n    /** Hides the modal */\r\n    @Method()\r\n    async hide(){\r\n        this.visible = false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Host>\r\n                {this.visible &&\r\n                    <slot></slot>\r\n                }\r\n            </Host>\r\n        );\r\n    }\r\n}",":host {\r\n    /**\r\n    * @prop --color-background: The color of the inactive tabs.\r\n    * @prop --color-text: The color of the text for inactive tabs.\r\n    * @prop --color-visible: The color of the active tab.\r\n    * @prop --color-visible-text: The color of the text for the active tab.\r\n    * @prop --color-focus: outline color when hovering or pre-selecting a tab.\r\n    */\r\n    display: block;\r\n    --color-background: var(--dnn-color-secondary-dark, lightgray);\r\n    --color-text: var(--dnn-color-secondary-contrast, #333);\r\n    --color-visible: var(--dnn-color-primary, #3792ED);\r\n    --color-visible-text: var(--dnn-color-primary-contrast, #FFF);\r\n    --color-focus: var(--dnn-color-primary, #3792ed);\r\n  }\r\n\r\n  .tabTitles{\r\n      display: flex;\r\n      background-color: var(--color-background);\r\n      color: var(--color-text);\r\n      button{\r\n          padding: 0.5rem 1rem;\r\n          border: 0;\r\n          margin: 0;\r\n          background-color: transparent;\r\n          &.visible{\r\n              background-color: var(--color-visible);\r\n              color: var(--color-bisible-text);\r\n          }\r\n          &:focus, &:hover{\r\n            outline: none;\r\n            box-shadow: 0 0 2px 2px var(--color-focus);\r\n          }\r\n      }\r\n  }\r\n\r\n  .currentTab{\r\n      border: 1px solid var(--color-background);\r\n      padding: 1rem;\r\n  }","import { Component, Host, h, State } from \"@stencil/core\";\r\n\r\n@Component({\r\n    tag: 'dnn-tabs',\r\n    styleUrl: 'dnn-tabs.scss',\r\n    shadow: true,\r\n})\r\nexport class DnnTabs {\r\n    private component: HTMLElement;\r\n\r\n    @State() tabTitles: string[] = [];\r\n    @State() selectedTabTitle: string = \"\";\r\n\r\n    componentDidLoad(){\r\n        this.updateTitles();\r\n        this.showFirstTab();\r\n    }\r\n\r\n    private getTabs() {\r\n        return this.component.shadowRoot.querySelector(\"slot\").assignedElements() as HTMLDnnTabElement[];\r\n    }\r\n\r\n    private updateTitles(){\r\n        const tabs = this.getTabs();\r\n        tabs.forEach(tab => this.tabTitles = [...this.tabTitles, tab.tabTitle]);\r\n    }\r\n\r\n    private showFirstTab(){\r\n        const tab = this.getTabs()[0];\r\n        tab.show();\r\n        this.selectedTabTitle = tab.tabTitle;\r\n    }\r\n\r\n    private showTab(tabTitle: string) {\r\n        const tabs = this.getTabs();\r\n        tabs.forEach(tab => {\r\n            if (tab.tabTitle == tabTitle){\r\n                tab.show();\r\n                return;\r\n            }\r\n\r\n            tab.hide();\r\n        });\r\n        this.selectedTabTitle = tabTitle;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Host ref={el => this.component = el}>\r\n                <div class=\"tabTitles\">\r\n                    {this.tabTitles.map(tabTitle =>\r\n                        <button\r\n                            class={this.selectedTabTitle == tabTitle ? \"visible\": \"\"}\r\n                            onClick={() => this.showTab(tabTitle)}\r\n                        >\r\n                            {tabTitle}\r\n                        </button>\r\n                    )}\r\n                </div>\r\n                <div class=\"currentTab\">\r\n                    <slot></slot>\r\n                </div>\r\n            </Host>\r\n        );\r\n    }\r\n}",":host {\r\n    /**\r\n     * @prop --background: Background of the toggle.\r\n     * @prop --background-checked: Background of the toggle when checked.\r\n     * @prop --handle-background:  Background of the handle.\r\n     * @prop --handle-background-checked:  Background of the handle when checked.\r\n     * @prop --border-radius: The radius of the background borders.\r\n     * @prop --handle-border-radius: The radius of the handle.\r\n    */\r\n\r\n    display: inline-block;\r\n    outline: none;\r\n    cursor: pointer;\r\n}\r\n\r\nbutton {\r\n    height: 1.5em;\r\n    width: 2.5em;\r\n    outline: none;\r\n    background-color: var(--background, #888);\r\n    border: 0;\r\n    border-radius: var(--border-radius, var(--dnn-controls-radius, 0.75em));\r\n    padding: 0.1em;\r\n    position: relative;\r\n    margin: 0;\r\n    transition: background-color 300ms ease-in-out;\r\n    position: relative;\r\n    cursor: pointer;\r\n    &:hover, &:focus{\r\n        box-shadow: 0 0 2px 2px var(--dnn-color-primary);\r\n    }\r\n    &.checked{\r\n        background-color: var(--background-checked, var(--dnn-color-primary, blue));\r\n        .handle{\r\n            left: calc(1em + 4px);\r\n        }\r\n    }\r\n    &:disabled{\r\n        opacity: 0.5;\r\n        cursor: not-allowed;\r\n        box-shadow: none;\r\n    }\r\n    .handle{\r\n        transition: all 300ms ease-in-out;\r\n        background-color:white;\r\n        width: 1em;\r\n        height: 1em;\r\n        border-radius: var(--dnn-controls-radius, 50%);\r\n        position: absolute;\r\n        top: calc(50% - 0.5em);\r\n        left: 2px;\r\n    }\r\n}","import { Component, h, Element, Prop, Event, EventEmitter, Watch, Host } from \"@stencil/core\";\r\nimport { DnnToggleChangeEventDetail } from \"./toggle-interface\";\r\n\r\n\r\n@Component({\r\n    tag: \"dnn-toggle\",\r\n    styleUrl: \"dnn-toggle.scss\",\r\n    shadow: true\r\n})\r\nexport class DnnToggle {\r\n\r\n    @Element() element: HTMLDnnToggleElement;\r\n\r\n    /** If 'true' the toggle is checked (on). */\r\n    @Prop({mutable: true}) checked = false;\r\n\r\n    /** If 'true' the toggle is not be interacted with. */\r\n    @Prop() disabled = false;\r\n\r\n    /** Fires when the toggle changed */\r\n    @Event() checkChanged!: EventEmitter<DnnToggleChangeEventDetail>;\r\n\r\n    @Watch(\"checked\")\r\n    checkedChanged(isChecked: boolean){\r\n        this.checkChanged.emit({checked: isChecked});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Host>\r\n                <button disabled={this.disabled} class={{'checked': this.checked}}\r\n                    onClick={() => {\r\n                        if (!this.disabled) {\r\n                            this.checked = !this.checked;\r\n                        }\r\n                    }}\r\n                >\r\n                    <div class=\"handle\"></div>\r\n                </button>\r\n            </Host>\r\n        );\r\n    }\r\n}\r\n"]}