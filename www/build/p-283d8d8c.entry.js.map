{"version":3,"sources":["src/components/dnn-button/dnn-button.scss?tag=dnn-button&encapsulation=shadow","src/components/dnn-button/dnn-button.tsx","src/components/dnn-chevron/dnn-chevron.scss?tag=dnn-chevron&encapsulation=shadow","src/components/dnn-chevron/dnn-chevron.tsx","src/components/dnn-collapsible/dnn-collapsible.scss?tag=dnn-collapsible&encapsulation=shadow","src/components/dnn-collapsible/dnn-collapsible.tsx","src/utilities/colorInfo.ts","src/components/dnn-color-picker/dnn-color-picker.scss?tag=dnn-color-picker&encapsulation=shadow","src/components/dnn-color-picker/dnn-color-picker.tsx","src/components/dnn-dropzone/dnn-dropzone.scss?tag=dnn-dropzone&encapsulation=shadow","src/components/dnn-dropzone/dnn-dropzone.tsx","src/components/dnn-image-cropper/dnn-image-cropper.scss?tag=dnn-image-cropper&encapsulation=shadow","src/components/dnn-image-cropper/dnn-image-cropper.tsx","src/components/dnn-modal/dnn-modal.scss?tag=dnn-modal&encapsulation=shadow","src/components/dnn-modal/dnn-modal.tsx","src/components/dnn-searchbox/dnn-searchbox.scss?tag=dnn-searchbox&encapsulation=shadow","src/components/dnn-searchbox/dnn-searchbox.tsx","src/components/dnn-sort-icon/dnn-sort-icon.scss?tag=dnn-sort-icon&encapsulation=shadow","src/components/dnn-sort-icon/dnn-sort-icon.tsx","src/components/dnn-toggle/dnn-toggle.scss?tag=dnn-toggle&encapsulation=shadow","src/components/dnn-toggle/dnn-toggle.tsx"],"names":["dnnButtonCss","DnnButton","[object Object]","hostRef","this","type","reversed","size","confirm","confirmYesText","confirmNoText","confirmMessage","disabled","modalVisible","el","classList","add","modal","shadowRoot","querySelector","hide","confirmed","emit","canceled","show","h","Host","style","pointer-events","class","onClick","handleClick","showCloseButton","backdropDismiss","display","justifyContent","margin","handleConfirm","handleCancel","dnnChevronCss","DnnChevron","expandText","collapseText","expanded","newValue","changed","aria-label","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","dnnCollapsibleCss","DnnCollapsible","transitionDuration","animating","setTimeout","container","height","scrollHeight","dnnCollapsibleHeightChanged","updateComponentSize","newHeight","assignedElements","forEach","node","mutationList","mutation","target","closest","updateSize","mutationObserver","MutationObserver","handleMutation","childNodes","element","observe","attributes","characterData","childList","subtree","slot","addEventListener","disconnect","id","Debounce","ColorInfo","_hue","_saturation","_lightness","hue","value","saturation","lightness","red","getRGB","setHSL","green","blue","hex","r","getHex","g","b","parseInt","substr","contrastColor","brightness","chroma","Math","abs","quadrant","offset","bias","round","min","max","diff","s","l","toString","length","dnnColorPickerCss","DnnColorPicker","color","colorBoxHeight","rgbDisplay","hslDisplay","hexDisplay","handleSaturationLightnessMouseDown","e","preventDefault","handleDragLightnessSaturation","window","handleSaturationLightnessMouseUp","rect","saturationLightnessBox","getBoundingClientRect","x","clientX","left","width","y","clientY","top","newColor","currentColor","removeEventListener","handleHueMouseDown","handleDragHue","handleHueMouseUp","hueRange","handleComponentValueChange","channel","isNaN","handleHSLChange","component","handleSaturationLightnessKeyDown","shiftKey","key","handleHueKeyDown","colorChanged","colorChangedHandler","handleHexChange","setProperty","getDoublet","valueString","toUpperCase","match","ref","backgroundColor","onMouseDown","bind","aria-valuemin","aria-valuemax","aria-valuetext","bottom","onKeyDown","boxShadow","getContrast","aria-valuenow","step","onChange","switchColorMode","__decorate","dnnDropzoneCss","DnnDropzone","resx","dragAndDropFile","capture","or","takePicture","uploadFile","allowCameraMode","captureQuality","canTakeSnapshots","takingPicture","handleDragOver","event","stopPropagation","dataTransfer","dropEffect","dropzone","handleDrop","dropEvent","files","hasInvalidExtensions","fileList","getFilesFromFileList","filesSelected","checkIfBrowserCanTakeSnapshots","then","result","allowedExtensions","undefined","extensionsWithDots","map","extensionsList","join","fileInput","accept","Promise","resolve","mediaDevices","navigator","enumerateDevices","devices","some","device","kind","index","file","push","hasInvalid","fileIndex","regex","fileExtension","exec","name","includes","getUserMedia","video","audio","stream","videoPreview","srcObject","play","videoSettings","getVideoTracks","getSettings","catch","error","alert","canvas","document","createElement","context","getContext","drawImage","toBlob","blob","File","onDragOver","onDrop","onDragLeave","remove","_a","_b","handleUploadButton","enable-background","_c","_d","takeSnapshot","cx","cy","_e","applySnapshot","_f","dnnImageCropperCss","DnnImageCropper","quality","handleCropMouseDown","className","handleImageCropFinished","handleCropDrag","handleNwMouseMove","handleNeMouseMove","handleSeMouseMove","handleSwMouseMove","_ev","emitImage","newWidth","orientation","wantedRatio","cropRect","crop","imageRect","image","movementX","movementY","leftOffset","offsetLeft","topOffset","offsetTop","ev","newLeft","newTop","setView","newView","views","host","querySelectorAll","v","noPictureView","hasPictureView","view","imageRatio","wantedHeight","wantedWidth","src","toDataURL","requestAnimationFrame","initCrop","split","reader","FileReader","onload","readerLoadEvent","img","Image","ctx","setImage","readAsDataURL","naturalWidth","naturalHeight","dataUrl","generateCroppedImage","imageCropChanged","desiredWidth","desiredHeight","clearRect","onFilesSelected","handleNewFile","detail","dnnModalCss","DnnModal","closeText","visible","dismissed","handleDismiss","handleBackdropClick","dnnSearchboxCss","DnnSearchbox","placeholder","debounced","query","debouncedHandleQueryChanged","handleQueryChanged","queryChanged","onInput","dnnSortIconCss","DnnSortIcon","sortDirection","sortChanged","active","changeSort","dnnToggleCss","DnnToggle","checked","isChecked","checkChanged"],"mappings":"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","sourcesContent":[":host {\r\n  --background-color: transparent;\r\n  --color: #333;\r\n  --border-size: 1px;\r\n  --border-color: var(--backround-color);\r\n  --border-radius: var(--dnn-controls-radius, 5px);\r\n  --padding: var(--dnn-controls-padding, 5px);\r\n  display: inline-block;\r\n  width: auto;\r\n}\r\n\r\n:host(.disabled){\r\n  pointer-events: none;\r\n}\r\n\r\n:host(.primary){\r\n  --background-color: var(--dnn-color-primary, blue);\r\n  --color: var(--dnn-color-primary-contrast, white);\r\n  --focus-color: var(--background-color);\r\n}\r\n\r\n:host(.primary.reversed){\r\n  --background-color: var(--dnn-color-primary-contrast, white);\r\n  --color: var(--dnn-color-primary, blue);\r\n  --border-color: var(--dnn-color-primary, blue);\r\n  --focus-color: var(--color);\r\n}\r\n\r\n:host(.secondary){\r\n  --background-color: var(--dnn-color-secondary, green);\r\n  --color: var(--dnn-color-secondary-contrast, white);\r\n  --focus-color: var(--background-color);\r\n}\r\n\r\n:host(.secondary.reversed){\r\n  --background-color: var(--dnn-color-secondary-contrast, white);\r\n  --color: var(--dnn-color-secondary, blue);\r\n  --border-color: var(--dnn-color-secondary, blue);\r\n  --focus-color: var(--color);\r\n}\r\n\r\n:host(.tertiary){\r\n  --background-color: var(--dnn-color-tertiary, yellow);\r\n  --color: var(--dnn-color-tertiary-contrast, black);\r\n  --focus-color: var(--background-color);\r\n}\r\n\r\n:host(.tertiary.reversed){\r\n  --background-color: var(--dnn-color-tertiary-contrast, white);\r\n  --color: var(--dnn-color-tertiary, blue);\r\n  --border-color: var(--dnn-color-tertiary, blue);\r\n  --focus-color: var(--color);\r\n}\r\n\r\n:host(.hydrated){\r\n  button{\r\n    border: var(--border-size) solid var(--border-color);\r\n    border-radius: var(--border-radius);\r\n    padding: var(--padding) calc(var(--padding) * 2);\r\n    background-color: transparent;\r\n    background-color: var(--background-color);\r\n    color: var(--color);\r\n    outline: none;\r\n    &:focus, &:hover{\r\n      box-shadow: 0 0 2px 2px var(--focus-color);\r\n    }\r\n  }\r\n}\r\n\r\n:host(:disabled, [disabled]){\r\n  button{\r\n    pointer-events: none;\r\n    opacity: 0.5;\r\n  }\r\n}\r\n\r\n:host(.small){\r\n  button{\r\n    padding: calc(var(--padding) / 2) var(--padding);\r\n    font-size: 0.7em;\r\n  }\r\n}\r\n\r\n:host(.large){\r\n  button{\r\n    padding: calc(var(--padding) * 1.5) calc(var(--padding) * 3);\r\n    font-size: 1.2em;\r\n  }\r\n}\r\n\r\nbutton{\r\n  height: 100%;\r\n  width: 100%;\r\n  cursor: pointer;\r\n}","import { Component, Element, Host, h, Prop, State, Event, EventEmitter } from '@stencil/core';\r\n\r\n/**\r\n * @slot Content of the button\r\n */\r\n@Component({\r\n  tag: 'dnn-button',\r\n  styleUrl: 'dnn-button.scss',\r\n  shadow: true\r\n})\r\nexport class DnnButton {\r\n\r\n  /**\r\n   * Optional button style,\r\n   * can be either primary, secondary or tertiary and defaults to primary if not specified\r\n   */\r\n  @Prop() type: 'primary' | 'secondary' | 'tertiary' = 'primary';\r\n\r\n  /**\r\n   * Optionally reverses the button style.\r\n   */\r\n  @Prop() reversed: boolean = false;\r\n\r\n  /**\r\n   * Optionally sets the button size, small normal or large, defaults to normal\r\n   */\r\n  @Prop() size?: 'small' | 'normal' | 'large' = 'normal';\r\n\r\n  /**\r\n   * Optionally add a confirmation dialog before firing the action.\r\n   */\r\n  @Prop() confirm?: boolean = false;\r\n\r\n  /**\r\n   * The text of the yes button for confirmation.\r\n   */\r\n  @Prop() confirmYesText?: string = \"Yes\";\r\n\r\n  /**\r\n   * The text of the no button for confirmation.\r\n   */\r\n  @Prop() confirmNoText?: string = \"No\";\r\n\r\n  /**\r\n   * The text of the confirmation message;\r\n   */\r\n  @Prop() confirmMessage?: string = \"Are you sure ?\";\r\n  \r\n  /**\r\n   * Disables the button\r\n   */\r\n  @Prop() disabled: boolean = false;\r\n\r\n  @State() modalVisible: boolean = false;\r\n\r\n  @Element() el!: HTMLDnnButtonElement;\r\n\r\n  private modal!: HTMLDnnModalElement;\r\n\r\n  /** \r\n   * Fires when confirm is true and the user confirms the action.\r\n  */\r\n  @Event({\r\n    eventName: 'confirmed',\r\n    bubbles: false,\r\n    cancelable: true,\r\n    composed: true\r\n  }) confirmed: EventEmitter;\r\n\r\n  /**\r\n   * Fires when confirm is true and the user cancels the action.\r\n   */\r\n  @Event({bubbles: false}) canceled: EventEmitter;\r\n\r\n  componentDidLoad(){\r\n    this.el.classList.add(this.type);\r\n    \r\n    if (this.reversed){\r\n      this.el.classList.add('reversed');\r\n    }\r\n\r\n    if (this.size !== 'normal'){\r\n      this.el.classList.add(this.size);\r\n    }\r\n\r\n    this.modal = this.el.shadowRoot.querySelector('dnn-modal');\r\n  }\r\n\r\n  private handleConfirm(){\r\n    this.modal.hide();\r\n    this.modalVisible = false;\r\n    this.confirmed.emit();\r\n  }\r\n\r\n  private handleCancel(){\r\n    this.modal.hide();\r\n    this.modalVisible = false;\r\n    this.canceled.emit();\r\n  }\r\n  \r\n  private handleClick(): void {\r\n    if (this.confirm && !this.modalVisible){\r\n      this.modal.show();\r\n      this.modalVisible = true;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host disabled={this.disabled} style={{'pointer-events': this.disabled ? 'none' : 'all'}}>\r\n        <button class=\"button\" onClick={() => this.handleClick()} disabled={this.disabled}>\r\n          <slot></slot>\r\n        </button>\r\n        {this.confirm &&\r\n            <dnn-modal showCloseButton={false} backdropDismiss={false}>\r\n              <p>{this.confirmMessage}</p>\r\n              <div style={\r\n                {\r\n                  display: 'flex',\r\n                  justifyContent: 'flex-end'\r\n                }\r\n              }>\r\n                <dnn-button type='primary' style={{margin: '5px'}} onClick={() => this.handleConfirm()}>{this.confirmYesText}</dnn-button>\r\n                <dnn-button type='secondary' style={{margin: '5px'}} onClick={() => this.handleCancel()}>{this.confirmNoText}</dnn-button>\r\n              </div>\r\n            </dnn-modal>\r\n          }\r\n      </Host>\r\n    );\r\n  }\r\n  \r\n\r\n}\r\n",":host {\r\n  display: inline-block;\r\n}\r\nbutton{\r\n  border: none;\r\n  padding: 0px;\r\n  margin: 0px;\r\n  min-width: 15px;\r\n  min-height: 15px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: transparent;\r\n  outline: none;\r\n}\r\nsvg{\r\n  height:1em;\r\n  transition: all 300ms ease-in-out;\r\n}\r\n\r\n// FOCUS\r\nbutton:focus, button:hover{\r\n  svg{\r\n    color: var(--dnn-color-primary);\r\n  }\r\n}\r\n\r\n// EXPANDED\r\n:host([expanded]){\r\n  svg{\r\n    transform: rotate(90deg);\r\n  }\r\n}","import { Component, Host, h, Prop, Event } from '@stencil/core';\r\nimport { EventEmitter } from '@stencil/core';\r\nimport { Watch } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'dnn-chevron',\r\n  styleUrl: 'dnn-chevron.scss',\r\n  shadow: true\r\n})\r\nexport class DnnChevron {\r\n\r\n  /** Expand text for screen readers */\r\n  @Prop() expandText?: string = \"expand\";\r\n\r\n  /** Collapse text for screen readers */\r\n  @Prop() collapseText?: string = \"collapse\";\r\n\r\n  /** Is the chevron expanded */\r\n  @Prop({mutable: true, reflect: true}) expanded?: boolean = false;\r\n\r\n  /** Fires up when the expanded status changes */\r\n  @Event() changed: EventEmitter;\r\n\r\n  @Watch('expanded')\r\n  handleExpandedChanged(newValue: boolean) {\r\n    this.changed.emit(newValue);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <button aria-label={this.expanded ? this.collapseText : this.expandText}\r\n          onClick={() => this.expanded = !this.expanded}\r\n        >\r\n          <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"chevron-right\" class=\"svg-inline--fa fa-chevron-right fa-w-10\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 320 512\"><path fill=\"currentColor\" d=\"M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z\"></path></svg>\r\n        </button>\r\n      </Host>\r\n    );\r\n  }\r\n\r\n}\r\n",":host {\r\n  display: block;\r\n  #container{\r\n    height:0;\r\n    overflow: hidden;\r\n    transition: height 300ms ease-in-out;\r\n  }\r\n}","import { Component, Host, h, Prop, Element, Watch, State, Method, Event, EventEmitter, Listen } from '@stencil/core';\r\nimport { Debounce } from '../../utilities/debounce';\r\n\r\n@Component({\r\n  tag: \"dnn-collapsible\",\r\n  styleUrl: \"dnn-collapsible.scss\",\r\n  shadow: true\r\n})\r\nexport class DnnCollapsible {\r\n\r\n  @Element() el: HTMLDnnCollapsibleElement;\r\n\r\n  /** Defines if the panel is expanded or not. */\r\n  @Prop({reflect: true}) expanded: boolean = false;\r\n\r\n  /** Defines the transition time in ms, defaults to 300ms */\r\n  @Prop() transitionDuration?: number = 300;\r\n\r\n  @State() animating: boolean = false;\r\n\r\n  @Watch(\"expanded\")\r\n  handleExpandedChanged(newValue: boolean){\r\n    this.animating = true;\r\n    setTimeout(() => {\r\n      const container = this.el.shadowRoot.querySelector(\"#container\") as HTMLDivElement;\r\n      if (newValue){\r\n        container.style.height = container.scrollHeight + \"px\";\r\n      }\r\n      else{\r\n        container.style.height = \"0px\";\r\n      }\r\n    }, 0);\r\n    \r\n    setTimeout(() => {\r\n      this.animating = false;\r\n      this.dnnCollapsibleHeightChanged.emit();\r\n    }, this.transitionDuration);\r\n  }\r\n\r\n  /** Updates the component height, use to update after a slot content changes. */\r\n  @Debounce()\r\n  @Method()\r\n  async updateSize() {\r\n    this.updateComponentSize();\r\n  }\r\n\r\n  private updateComponentSize(){\r\n    if (this.expanded){\r\n      this.animating = true;\r\n      setTimeout(() => {\r\n        const container = this.el.shadowRoot.querySelector(\"#container\") as HTMLDivElement;\r\n        let newHeight = 0;\r\n        container.querySelector('slot').assignedElements().forEach(node => {\r\n          newHeight += node.scrollHeight;\r\n        });\r\n        container.style.height = newHeight + \"px\";\r\n      }, this.transitionDuration);\r\n    }\r\n  }\r\n\r\n  /** Fires whenever the collapsible height has changed */\r\n  @Event() dnnCollapsibleHeightChanged: EventEmitter<void>;\r\n\r\n  @Listen('dnnCollapsibleHeightChanged')\r\n  handleOtherCollapsibleHeightChanged(){\r\n    setTimeout(() => {\r\n      this.updateComponentSize();\r\n    }, this.transitionDuration);\r\n  }\r\n\r\n  private mutationObserver: MutationObserver;\r\n\r\n  private handleMutation(mutationList){\r\n    mutationList.forEach(mutation => {\r\n      setTimeout(() => {\r\n        mutation.target.closest('dnn-collapsible').updateSize();\r\n      }, this.transitionDuration);\r\n    });\r\n  }\r\n\r\n  componentWillLoad() {\r\n    this.mutationObserver = new MutationObserver((mutationList) => {\r\n      this.handleMutation(mutationList);\r\n    });\r\n  }\r\n\r\n  componentDidLoad(){\r\n    const container = this.el.shadowRoot.querySelector('#container') as HTMLDivElement;\r\n    container.style.transitionDuration = this.transitionDuration + 'ms';\r\n\r\n    // Monitor for content changes and update own height\r\n    const childNodes = [this.el];\r\n    childNodes.forEach(element => {\r\n      this.mutationObserver.observe(element, {attributes: true, characterData: true, childList: true, subtree: true});\r\n    });\r\n\r\n    const slot = this.el.shadowRoot.querySelector('slot');\r\n    slot.addEventListener(\"slotchange\", () => {\r\n      this.updateSize();\r\n    });\r\n  }\r\n\r\n  disconnectedCallback(){\r\n    this.mutationObserver.disconnect();\r\n  }\r\n  /*eslint-enable @stencil/own-methods-must-be-private */\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div id=\"container\">\r\n            <slot></slot>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n\r\n}\r\n","/** Color utility class with hsl and rgb converters\r\n * based on math at https://en.wikipedia.org/wiki/HSL_and_HSV\r\n * @copyright Copyright (c) .NET Foundation. All rights reserved.\r\n * @license MIT \r\n */\r\n\r\nexport class ColorInfo{\r\n\r\n    private _hue: number = 0;\r\n    /** gets the color hue\r\n     * @returns a number between 0 and 359, could contain decimals\r\n     */\r\n    get hue() { return this._hue; }\r\n    set hue(value: number){\r\n        if (value < 0) { value = 0; }\r\n        if (value > 359) { value = 359; }\r\n        this._hue = value;\r\n    }\r\n\r\n    private _saturation: number = 0;\r\n    /** gets the color saturation\r\n     * @returns a number between 0 and 1, could contain decimals\r\n    */\r\n    get saturation() { return this._saturation; }\r\n    set saturation(value: number) {\r\n        if (value < 0) { value = 0; }\r\n        if (value > 1) { value = 1; }\r\n        this._saturation = value;\r\n    }\r\n\r\n    private _lightness: number = 0;\r\n    /** gets the color lightness\r\n     * @returns a number between 0 and 1, could contain decimals\r\n     */\r\n    get lightness() { return this._lightness; }\r\n    set lightness(value: number) {\r\n        if (value < 0) { value = 0; }\r\n        if (value > 1) { value = 1; }\r\n        this._lightness = value;\r\n    }\r\n\r\n    /** gets or sets the red component \r\n     * @returns an integer between 0 and 255\r\n    */\r\n    get red() {\r\n        return this.getRGB().red;\r\n    }\r\n    set red(value) {\r\n        this.setHSL(value, this.green, this.blue);\r\n    }\r\n\r\n    /** gets or sets the green component\r\n     * @returns an integer between 0 and 255\r\n     */\r\n    get green() {\r\n        return this.getRGB().green;\r\n    }\r\n    set green(value: number) {\r\n        this.setHSL(this.red, value, this.blue);\r\n    }\r\n\r\n    /** gets or sets the blue component\r\n     * @returns an integer between 0 and 255\r\n     */\r\n    get blue() {\r\n        return this.getRGB().blue;\r\n    }\r\n    set blue(value: number) {\r\n        this.setHSL(this.red, this.green, value);\r\n    }\r\n\r\n    /** gets or sets the hex color value, expresses as 6 hexadecimal characters.\r\n     * @returns hex representation of the color\r\n     */\r\n    get hex() {\r\n        var r = this.getHex(this.red);\r\n        var g = this.getHex(this.green);\r\n        var b = this.getHex(this.blue);\r\n        return r + g + b;\r\n    }\r\n    set hex(value: string){\r\n        this.red = parseInt(value.substr(0,2));\r\n        this.green = parseInt(value.substr(2,2));\r\n        this.blue = parseInt(value.substr(4,2));\r\n    }\r\n\r\n    /** gets white or black color that is a good oposite to the current color\r\n     * @returns - \"000000\" or \"FFFFFF\"\r\n     */\r\n    get contrastColor() {\r\n        const brightness = (this.red*299 + this.green*587 + this.blue*114) / 1000\r\n        if (brightness > 127){\r\n            return \"000000\";\r\n        }\r\n        return \"FFFFFF\";\r\n    }\r\n\r\n    private getRGB() {\r\n        const chroma = (1 - Math.abs((2 * this._lightness) - 1)) * this.saturation;\r\n        // find the quandrant of the hue\r\n        const quadrant = this._hue / 60;\r\n        // calculate the offset from the quandrant center\r\n        const offset = chroma * (1 - Math.abs(quadrant % 2 - 1));\r\n\r\n        // Apply the chroma to the primary component and the offset to the 2nd most important component\r\n        let r = 0, g = 0, b = 0;\r\n        if (0 <= quadrant && quadrant <= 1) {\r\n            r = chroma; g = offset; // red to yellow\r\n        } else if (1 <= quadrant && quadrant <= 2) {\r\n            g = chroma; r = offset; // yellow to green\r\n        } else if (2 <= quadrant && quadrant <= 3) {\r\n            g = chroma; b = offset; // green to cyan\r\n        } else if (3 <= quadrant && quadrant <= 4) {\r\n            b = chroma; g = offset; // cyan to blue\r\n        } else if (4 <= quadrant && quadrant <= 5) {\r\n            b = chroma; r = offset; // blue to magenta\r\n        } else if (5 <= quadrant && quadrant <= 6) {\r\n            r = chroma; b = offset; // magenta to red\r\n        }\r\n        // calculate the bias to add to all channels to match the lightness\r\n        const bias = this._lightness - (chroma / 2);\r\n\r\n        return {\r\n            red: Math.round((r + bias) * 255),\r\n            green: Math.round((g + bias) * 255),\r\n            blue: Math.round((b + bias) * 255)\r\n        }\r\n    }\r\n\r\n    private setHSL(red: number, green: number, blue: number) {\r\n        // GENERAL DATA\r\n        // all math is based on values from 0 to 1\r\n        const r = red/255, g = green/255, b = blue/255;\r\n        // we need to max, min and the difference between them to derive hsl\r\n        const min = Math.min(r, g, b);\r\n        const max = Math.max(r, g, b);\r\n        const diff = max - min;\r\n        let h = 0, s = 0, l = 0;\r\n\r\n        // HUE\r\n        if (diff === 0) { // neutral\r\n            h = 0;\r\n        } else if (max === r) { // red (magenta to yellow range)\r\n            h = 60 * ((g - b) / diff);\r\n        } else if (max === g) { // green (yellow to cyan range)\r\n            h = 60 * (2 + ((b - r) / diff));\r\n        } else if (max === b) { // blue (cyan to magenta range)\r\n            h = 60 * (4 + ((r - g) / diff));\r\n        }\r\n        if (h < 0) { h = h + 360} // ensures positive hues only\r\n        if (h > 359) { h = 359} // ensures we never return 360 for simplicity since it is the same as 0\r\n\r\n        // LIGHTNESS\r\n        l = (max + min) / 2;\r\n\r\n        // SATURATION\r\n        if (max === 0 || min === 1) { // pure black or white have no saturation\r\n            s = 0;\r\n        } else {\r\n            s = (max - l) / (Math.min(l, 1 - l));\r\n        }\r\n\r\n        this._hue = h;\r\n        this._saturation = s;\r\n        this._lightness = l;\r\n    }\r\n\r\n    private getHex(value: number){\r\n        var hex = value.toString(16);\r\n        if (hex.length < 2){\r\n            hex = \"0\" + hex;\r\n        }\r\n        return hex;\r\n    }\r\n} ",".dnn-color-picker{\r\n    padding: 15px;\r\n    max-width: 400px;\r\n    .dnn-color-sliders{\r\n        display:flex;\r\n        flex-direction: column;\r\n        min-width: 200px;\r\n        .dnn-color-s-b{\r\n            border: 1px solid #ccc;\r\n            padding-bottom: var(--color-box-height, 50%);\r\n            position: relative;\r\n            background-color: red;\r\n            &:before{\r\n                content: '';\r\n                    position: absolute;\r\n                    top:0;\r\n                    left:0;\r\n                    width: 100%;\r\n                    height:100%;\r\n                    z-index:1;\r\n                    background: linear-gradient(to right, white, red);\r\n                    mix-blend-mode: saturation;\r\n            }\r\n            &:after{\r\n                content: '';\r\n                position: absolute;\r\n                top:0;\r\n                left:0;\r\n                width: 100%;\r\n                height:100%;\r\n                z-index:2;\r\n                background: linear-gradient(to bottom, white, black);\r\n                mix-blend-mode: luminosity;\r\n            }\r\n            button{\r\n                position: absolute;\r\n                bottom: calc(50% - 4px);\r\n                left: calc(50% - 4px);\r\n                width: 8px;\r\n                height: 8px;\r\n                z-index: 3;\r\n                display: block;\r\n                background: none;\r\n                border: none;\r\n                margin-left: -4px;\r\n                margin-bottom: -4px;\r\n                padding: 7px;\r\n                background-color: #fff;\r\n                border-radius: 50%;\r\n                &:before{\r\n                    content:'';\r\n                    position: absolute;\r\n                    top: -1px;\r\n                    left: -1px;\r\n                    border-radius: 50%;\r\n                }\r\n                &:after{\r\n                    content:'';\r\n                    position: absolute;\r\n                    top: 0px;\r\n                    left: 0px;\r\n                    border-radius: 50%;\r\n                    width: 10px;\r\n                    height: 10px;\r\n                    border: 2px solid #ccc;\r\n                }\r\n            } \r\n        }\r\n        .dnn-color-bar {\r\n            display: flex;\r\n            align-items: center;\r\n            margin-top: 15px;\r\n            .dnn-color-result {\r\n                flex-direction: column;\r\n                width: 50px;\r\n                height: 50px;\r\n                border-radius: 50%;\r\n                background: red;\r\n            }\r\n            .dnn-color-hue{\r\n                flex: auto;\r\n                margin-left: 10px;\r\n                height: 16px;\r\n                border: 1px solid #ccc;\r\n                position: relative;\r\n                background: linear-gradient(\r\n                    to right, \r\n                    #f00 0, \r\n                    #ff0 17%,\r\n                    #0f0 33%,\r\n                    #0ff 50%,\r\n                    #00f 67%,\r\n                    #f0f 84%,\r\n                    #f00 100%\r\n                );\r\n                button{\r\n                    width: 10px;\r\n                    height: 20px;\r\n                    position: absolute;\r\n                    top: -2px;\r\n                    left: calc(50% - 4px);\r\n                    border: 0;\r\n                    padding: 0;\r\n                    background-color: transparent;\r\n                    padding-left: -8px;\r\n                    &:before{\r\n                        content:'';\r\n                        position: absolute;\r\n                        top: -2px;\r\n                        left: 0px;\r\n                        border-radius: 3px;\r\n                        width: 100%;\r\n                        height: 100%;\r\n                        border: 1px solid #ccc;\r\n                        background-color: #fff;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    .dnn-color-fields{\r\n        display:flex;\r\n        flex-direction: column;\r\n        justify-content: space-between;\r\n        .dnn-color-mode-switch {\r\n            display: flex;\r\n            align-items: flex-end;\r\n            padding: .5em;\r\n            button {\r\n                background-color: transparent;\r\n                border: none;\r\n                svg {\r\n                    min-width: 3em;\r\n                    pointer-events: none;\r\n                    outline: none;\r\n                }\r\n            }\r\n        }\r\n        .dnn-rgb-color-fields {\r\n            display: flex;\r\n            justify-content: space-evenly;\r\n            .dnn-rgb-color-field {\r\n                display: flex;\r\n                flex-direction: column;\r\n                flex: auto;\r\n                text-align: center;\r\n                padding: .5em;\r\n                label {\r\n                    padding-bottom: .25em;\r\n                }\r\n                input{\r\n                    border-radius: var(--dnn-button-radius, 3px);\r\n                    border: 1px solid #ccc;\r\n                    padding: 0.5em;\r\n                    padding-left: 1.3em;\r\n                    text-align: center;\r\n                    &.red{\r\n                        border-color: red;\r\n                    }\r\n                    &.green{\r\n                        border-color: green;                \r\n                    }\r\n                    &.blue{\r\n                        border-color: blue;\r\n                    }            \r\n                }\r\n            }\r\n        }\r\n        .dnn-hsl-color-fields {\r\n            display: flex;\r\n            justify-content: space-evenly;\r\n            .dnn-hsl-color-field {\r\n                display: flex;\r\n                flex-direction: column;\r\n                flex: auto;\r\n                text-align: center;\r\n                padding: .5em;\r\n                label {\r\n                    padding-bottom: .25em;\r\n                }\r\n                input{\r\n                    border-radius: var(--dnn-button-radius, 3px);\r\n                    border: 1px solid #ccc;\r\n                    padding: 0.5em;\r\n                    padding-left: 1.3em;\r\n                    text-align: center;\r\n                }\r\n            }\r\n        }\r\n        .dnn-hex-color-fields {\r\n            display: flex;\r\n            justify-content: space-evenly;\r\n            .dnn-hex-color-field {\r\n                display: flex;\r\n                flex-direction: column;\r\n                flex: auto;\r\n                text-align: center;\r\n                padding: .5em;\r\n                label {\r\n                    padding-bottom: .25em;\r\n                }\r\n                .hex-input{\r\n                    position: relative;\r\n                    border-radius: var(--dnn-button-radius, 3px);\r\n                    border: 1px solid #ccc;\r\n                    padding: 0.323em;\r\n                    text-align: center;\r\n                    input{\r\n                        border:0;\r\n                        padding:0;\r\n                        margin:0;\r\n                        width:100%;\r\n                        height:100%;\r\n                        text-align:center;\r\n                    }\r\n                    button{\r\n                        position: absolute;\r\n                        height: 100%;\r\n                        top: 0;\r\n                        right: 1em;\r\n                        background-color: transparent;\r\n                        border:0;\r\n                        padding:0;\r\n                        margin:0;\r\n                        svg{\r\n                            min-width: 1em;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n} ","/** Reusable DNN UI component to pick a color\r\n * @copyright Copyright (c) .NET Foundation. All rights reserved.\r\n * @license MIT \r\n */\r\n\r\nimport { Component, h, State, Element, Prop, EventEmitter, Event, Watch } from \"@stencil/core\";\r\nimport { ColorInfo } from '../../utilities/colorInfo';\r\nimport { Debounce } from \"../../utilities/debounce\";\r\n\r\n/** Color Picker for Dnn */\r\n@Component({\r\n    tag: 'dnn-color-picker',\r\n    styleUrl: 'dnn-color-picker.scss',\r\n    shadow: true\r\n})\r\nexport class DnnColorPicker {\r\n\r\n    @Element() el: HTMLDnnColorPickerElement;\r\n\r\n    /** Sets the initial color, must be a valid 8 character hexadecimal string without the # sign. */\r\n    @Prop() color: string = \"FFFFFF\";\r\n\r\n    /** Sets the width-height ratio of the color picker saturation-lightness box.\r\n     * @example 100% renders a perfect square\r\n     */\r\n    @Prop() colorBoxHeight: string = \"50%\";\r\n    \r\n    @State() currentColor: ColorInfo;\r\n    @State() rgbDisplay: string = \"flex\";\r\n    @State() hslDisplay: string = \"none\";\r\n    @State() hexDisplay: string = \"none\";\r\n\r\n    /** Fires up when the color is changed and emits a ColorInfo object\r\n     * @see ../../utilities/colorInfo.ts\r\n    */\r\n    @Event() colorChanged: EventEmitter<ColorInfo>;\r\n\r\n    @Debounce(100)\r\n    private colorChangedHandler(color: ColorInfo) {\r\n        this.colorChanged.emit(color);\r\n    }\r\n\r\n    @Watch(\"currentColor\")\r\n    handeCurrentColorChanged(newValue: ColorInfo){\r\n        this.colorChangedHandler(newValue);\r\n    }\r\n    \r\n    private saturationLightnessBox?: HTMLDivElement;\r\n    private hueRange?: HTMLDivElement;\r\n\r\n\r\n    componentWillLoad() {\r\n        this.handleHexChange(this.color);\r\n    }\r\n\r\n    componentDidLoad() {\r\n        (this.el as unknown as HTMLElement).style.setProperty(\"--color-box-height\", this.colorBoxHeight.toString());\r\n    }\r\n    \r\n    private getHex() {\r\n       return this.getDoublet(this.currentColor.red) + this.getDoublet(this.currentColor.green) + this.getDoublet(this.currentColor.blue);\r\n    }\r\n\r\n    private getContrast() {\r\n        return this.currentColor.contrastColor;\r\n    }\r\n\r\n    private getDoublet(value: number){\r\n        const valueString = value.toString(16).toUpperCase();\r\n        if (valueString.length === 1){\r\n            return '0' + valueString;\r\n        }\r\n        return valueString;\r\n    }\r\n\r\n    private handleSaturationLightnessMouseDown = (e) => {\r\n        e.preventDefault();\r\n        this.handleDragLightnessSaturation(e);\r\n        window.addEventListener('mousemove', this.handleDragLightnessSaturation);\r\n        window.addEventListener('mouseup', this.handleSaturationLightnessMouseUp);\r\n    }\r\n\r\n    private handleDragLightnessSaturation = (e) => {\r\n        const rect = this.saturationLightnessBox.getBoundingClientRect();        \r\n\r\n        let x = e.clientX - rect.left;        \r\n        if (x < 0) { x = 0}\r\n        if (x > rect.width) { x = rect.width}\r\n        x = x/rect.width;\r\n\r\n        let y = e.clientY - rect.top;\r\n        if (y < 0) { y = 0}\r\n        if (y > rect.height) { y = rect.height}\r\n        y = 1 - (y/rect.height);\r\n\r\n        const newColor = new ColorInfo();\r\n        newColor.hue = this.currentColor.hue;\r\n        newColor.saturation = x;\r\n        newColor.lightness = y;\r\n        this.currentColor = newColor;\r\n    }\r\n\r\n    private handleSaturationLightnessMouseUp = () => {\r\n        window.removeEventListener('mousemove', this.handleDragLightnessSaturation);\r\n        window.removeEventListener('mouseup', this.handleSaturationLightnessMouseUp);\r\n    }\r\n\r\n    private handleHueMouseDown = (e) => {\r\n        e.preventDefault();\r\n        this.handleDragHue(e);\r\n        window.addEventListener('mousemove', this.handleDragHue);\r\n        window.addEventListener('mouseup', this.handleHueMouseUp);        \r\n    }\r\n\r\n    private handleHueMouseUp = () => {\r\n        window.removeEventListener('mousemove', this.handleDragHue);\r\n        window.removeEventListener('mouseup', this.handleHueMouseUp); \r\n    }\r\n\r\n    private handleDragHue = (e) => {\r\n        const rect = this.hueRange.getBoundingClientRect();        \r\n\r\n        let x = e.clientX - rect.left;\r\n        if (x < 0) { x = 0}\r\n        if (x > rect.width) { x = rect.width}\r\n        x = x/rect.width*360;        \r\n\r\n        const newColor = new ColorInfo();\r\n        newColor.hue = x;\r\n        newColor.saturation = this.currentColor.saturation;\r\n        newColor.lightness = this.currentColor.lightness;\r\n        this.currentColor = newColor;\r\n    }\r\n\r\n    private handleComponentValueChange = (e, channel) => {\r\n        let value = parseInt(e.target.value);\r\n        if (isNaN(value)) { return }\r\n        const newColor = new ColorInfo();\r\n        if (value < 0) { value = 0; }\r\n        if (value > 255) { value = 255; }\r\n        let r = this.currentColor.red;\r\n        let g = this.currentColor.green;\r\n        let b = this.currentColor.blue;\r\n        switch (channel) {\r\n            case 'red':\r\n                r = value;\r\n                break;\r\n            case 'green':\r\n                g = value;\r\n                break;\r\n            case 'blue':\r\n                b = value;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        newColor.green = g;\r\n        newColor.red = r;\r\n        newColor.blue = b;\r\n        this.currentColor = newColor;\r\n    }\r\n\r\n    private handleHSLChange = (e, component) => {        \r\n        let value = parseInt(e.target.value);\r\n        if (isNaN(value)) {return}\r\n        const newColor = new ColorInfo();\r\n        if (value != null) {            \r\n            let h = this.currentColor.hue;\r\n            let s = this.currentColor.saturation;\r\n            let l = this.currentColor.lightness;\r\n            switch (component) {\r\n                case \"hue\":\r\n                    if (value < 0) { value = 0}\r\n                    if (value > 359) { value = 0}\r\n                    h = value;\r\n                    break;\r\n                case \"saturation\":\r\n                    if (value < 0) { value = 0}\r\n                    if (value > 100) { value = 100}\r\n                    s = value / 100;\r\n                    break;\r\n                case \"lightness\":\r\n                    if (value < 0) { value = 0}\r\n                    if (value > 100) { value = 100}\r\n                    l = value / 100;\r\n                    break;            \r\n                default:\r\n                    break;                \r\n            }\r\n            newColor.hue = h;\r\n            newColor.saturation = s;\r\n            newColor.lightness = l;\r\n            this.currentColor = newColor;\r\n        }\r\n    }\r\n\r\n    private handleHexChange(value: string){\r\n        const newColor = new ColorInfo();\r\n        if (value.match(/^(?:[\\da-f]{3}|[\\da-f]{6})$/i).length > 0) {\r\n            if (value.length === 3){\r\n                let expanded = value[0] + value[0] + value[1] + value[1] + value[2] + value [2];\r\n                value = expanded;\r\n            }\r\n            newColor.red = parseInt(value.substr(0,2), 16);\r\n            newColor.green = parseInt(value.substr(2,2), 16);\r\n            newColor.blue = parseInt(value.substr(4,2), 16);\r\n        }\r\n        else{\r\n            newColor.red = this.currentColor.red;\r\n            newColor.green = this.currentColor.green;\r\n            newColor.blue = this.currentColor.blue;\r\n        }\r\n        this.currentColor = newColor;\r\n    }\r\n\r\n    private switchColorMode(e) {\r\n        switch(e.target.id) {\r\n            case \"rgb-switch\":\r\n                this.rgbDisplay = \"none\";\r\n                this.hslDisplay = \"none\";\r\n                this.hexDisplay = \"flex\";\r\n                break;\r\n            case \"hex-switch\":\r\n                this.rgbDisplay = \"none\";\r\n                this.hslDisplay = \"flex\";\r\n                this.hexDisplay = \"none\";\r\n                break;\r\n            case \"hsl-switch\":\r\n                this.rgbDisplay = \"flex\";\r\n                this.hslDisplay = \"none\";\r\n                this.hexDisplay = \"none\";\r\n                break;\r\n            default:\r\n                this.rgbDisplay = \"flex\";\r\n                this.hslDisplay = \"none\";\r\n                this.hexDisplay = \"none\";\r\n        }\r\n    }\r\n\r\n    private handleSaturationLightnessKeyDown = (e) => {        \r\n        let newColor = new ColorInfo();\r\n        newColor.hue = this.currentColor.hue;\r\n        newColor.saturation = this.currentColor.saturation;\r\n        newColor.lightness = this.currentColor.lightness;\r\n\r\n        let value = 0.01;\r\n        if (e.shiftKey) { value = 0.1 ;}\r\n\r\n        switch (e.key) {\r\n            case \"ArrowUp\":\r\n                newColor.lightness += value;\r\n                break;\r\n            case \"ArrowDown\":\r\n                newColor.lightness -= value;\r\n                break;\r\n            case \"ArrowLeft\":\r\n                newColor.saturation -= value;\r\n                break;\r\n            case \"ArrowRight\":\r\n                newColor.saturation += value;\r\n            default:\r\n                break;                \r\n        }\r\n        this.currentColor = newColor;\r\n    }\r\n\r\n    private handleHueKeyDown = (e) => {\r\n        let newColor = new ColorInfo();\r\n        newColor.hue = this.currentColor.hue;\r\n        newColor.saturation = this.currentColor.saturation;\r\n        newColor.lightness = this.currentColor.lightness;\r\n\r\n        let value = 1;\r\n        if (e.shiftKey) { value = 10}\r\n\r\n        switch (e.key) {\r\n            case \"ArrowLeft\":\r\n                newColor.hue -= value;\r\n                break;\r\n            case \"ArrowRight\":\r\n                newColor.hue += value;\r\n            default:\r\n                break;\r\n        }\r\n        this.currentColor = newColor;\r\n    }\r\n\r\n    render() {\r\n        const hue = this.currentColor.hue;\r\n        const saturation = this.currentColor.saturation;\r\n        const lightness = this.currentColor.lightness;\r\n        const red = this.currentColor.red;\r\n        const green = this.currentColor.green;\r\n        const blue = this.currentColor.blue;\r\n\r\n        return (\r\n            <div class=\"dnn-color-picker\">\r\n                <div class=\"dnn-color-sliders\">\r\n                    <div class=\"dnn-color-s-b\" ref={(element) => this.saturationLightnessBox = element as HTMLDivElement}\r\n                        style={{backgroundColor: `hsl(${hue},100%,50%)`}}\r\n                        onMouseDown={this.handleSaturationLightnessMouseDown.bind(this)}\r\n                    >\r\n                        <button class=\"dnn-s-b-picker\"\r\n                            aria-label=\"Press up or down to adjust lightness, left or right to adjust saturation, hold shift to move by 10%\"\r\n                            role=\"slider\"\r\n                            aria-valuemin=\"0\"\r\n                            aria-valuemax=\"100\"\r\n                            aria-valuetext={`Saturation: ${Math.round(this.currentColor.saturation*100)}%, Lightness: ${Math.round(this.currentColor.lightness*100)}%`}\r\n                            style={{\r\n                                left: Math.round(saturation * 100)  + \"%\",\r\n                                bottom: Math.round(lightness * 100)  + \"%\"\r\n                            }}\r\n                            onKeyDown={(e) => this.handleSaturationLightnessKeyDown(e)}\r\n                        />\r\n                    </div>\r\n                    <div class=\"dnn-color-bar\">\r\n                        <div class=\"dnn-color-result\" style={{\r\n                            backgroundColor: '#' + this.getHex(),\r\n                            boxShadow: \"0 0 2px 1px \" + \"#\" + this.getContrast()\r\n                        }} \r\n                        />\r\n                        <div class=\"dnn-color-hue\"\r\n                            ref={(element) => this.hueRange = element as HTMLDivElement}\r\n                            onMouseDown={this.handleHueMouseDown.bind(this)}\r\n                        >\r\n                            <button class=\"dnn-hue-picker\"\r\n                                aria-label=\"Press left or right to adjust hue, hold shift to move by 10 degrees\"\r\n                                role=\"slider\"\r\n                                aria-valuemin=\"0\"\r\n                                aria-valuemax=\"359\"\r\n                                aria-valuenow={Math.round(hue)}\r\n                                style={{left: (hue/359*100).toString() + \"%\"}}\r\n                                onKeyDown={(e) => this.handleHueKeyDown(e)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"dnn-color-fields\">\r\n                    <div class=\"dnn-rgb-color-fields\" style={{display: this.rgbDisplay}}>\r\n                        <div class=\"dnn-rgb-color-field\">\r\n                            <label>R</label>\r\n                            <input type=\"number\" min=\"0\" max=\"255\" step=\"1\" class=\"red\" value={red} aria-label=\"red value\"\r\n                                onChange={(e) => this.handleComponentValueChange(e, 'red')}\r\n                            />\r\n                        </div>\r\n                        <div class=\"dnn-rgb-color-field\">\r\n                            <label>G</label>\r\n                            <input type=\"number\" min=\"0\" max=\"255\" class=\"green\" value={green} aria-label=\"green value\"\r\n                                onChange={(e) => this.handleComponentValueChange(e, 'green')}\r\n                            />\r\n                        </div>\r\n                        <div class=\"dnn-rgb-color-field\">\r\n                            <label>B</label>\r\n                            <input type=\"number\" min=\"0\" max=\"255\" class=\"blue\" value={blue} aria-label=\"blue value\"\r\n                                onChange={(e) => this.handleComponentValueChange(e, 'blue')}\r\n                            />\r\n                        </div>\r\n                        <div class=\"dnn-color-mode-switch\">\r\n                            <button id=\"rgb-switch\" onClick={this.switchColorMode.bind(this)} aria-label=\"switch to hexadecimal value entry\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"retweet\" class=\"svg-inline--fa fa-retweet fa-w-20\" role=\"img\" viewBox=\"0 0 640 512\"><path fill=\"currentColor\" d=\"M629.657 343.598L528.971 444.284c-9.373 9.372-24.568 9.372-33.941 0L394.343 343.598c-9.373-9.373-9.373-24.569 0-33.941l10.823-10.823c9.562-9.562 25.133-9.34 34.419.492L480 342.118V160H292.451a24.005 24.005 0 0 1-16.971-7.029l-16-16C244.361 121.851 255.069 96 276.451 96H520c13.255 0 24 10.745 24 24v222.118l40.416-42.792c9.285-9.831 24.856-10.054 34.419-.492l10.823 10.823c9.372 9.372 9.372 24.569-.001 33.941zm-265.138 15.431A23.999 23.999 0 0 0 347.548 352H160V169.881l40.416 42.792c9.286 9.831 24.856 10.054 34.419.491l10.822-10.822c9.373-9.373 9.373-24.569 0-33.941L144.971 67.716c-9.373-9.373-24.569-9.373-33.941 0L10.343 168.402c-9.373 9.373-9.373 24.569 0 33.941l10.822 10.822c9.562 9.562 25.133 9.34 34.419-.491L96 169.881V392c0 13.255 10.745 24 24 24h243.549c21.382 0 32.09-25.851 16.971-40.971l-16.001-16z\"/></svg>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"dnn-hsl-color-fields\" style={{display: this.hslDisplay}}>\r\n                        <div class=\"dnn-hsl-color-field\">\r\n                            <label>H</label>\r\n                            <input type=\"number\" min=\"0\" max=\"359\" step={1} value={Math.round(hue)} aria-label=\"Hue\"\r\n                                onChange={(e) => this.handleHSLChange(e, 'hue')}\r\n                            />\r\n                        </div>\r\n                        <div class=\"dnn-hsl-color-field\">\r\n                            <label>S</label>\r\n                            <input type=\"number\" min=\"0\" max=\"100\" step={1} value={Math.round(saturation*100)} aria-label=\"Saturation\"\r\n                                onChange={(e) => this.handleHSLChange(e, 'saturation')}\r\n                            />\r\n                        </div>\r\n                        <div class=\"dnn-hsl-color-field\">\r\n                            <label>L</label>\r\n                            <input type=\"number\" min=\"0\" max=\"100\" step={1} value={Math.round(lightness*100)} aria-label=\"Lightness\"\r\n                                onChange={(e) => this.handleHSLChange(e, 'lightness')}\r\n                            />\r\n                        </div>\r\n                        <div class=\"dnn-color-mode-switch\">\r\n                            <button id=\"hsl-switch\" onClick={this.switchColorMode.bind(this)} aria-label=\"Sitch to red, green, blue entry mode\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"retweet\" class=\"svg-inline--fa fa-retweet fa-w-20\" role=\"img\" viewBox=\"0 0 640 512\"><path fill=\"currentColor\" d=\"M629.657 343.598L528.971 444.284c-9.373 9.372-24.568 9.372-33.941 0L394.343 343.598c-9.373-9.373-9.373-24.569 0-33.941l10.823-10.823c9.562-9.562 25.133-9.34 34.419.492L480 342.118V160H292.451a24.005 24.005 0 0 1-16.971-7.029l-16-16C244.361 121.851 255.069 96 276.451 96H520c13.255 0 24 10.745 24 24v222.118l40.416-42.792c9.285-9.831 24.856-10.054 34.419-.492l10.823 10.823c9.372 9.372 9.372 24.569-.001 33.941zm-265.138 15.431A23.999 23.999 0 0 0 347.548 352H160V169.881l40.416 42.792c9.286 9.831 24.856 10.054 34.419.491l10.822-10.822c9.373-9.373 9.373-24.569 0-33.941L144.971 67.716c-9.373-9.373-24.569-9.373-33.941 0L10.343 168.402c-9.373 9.373-9.373 24.569 0 33.941l10.822 10.822c9.562 9.562 25.133 9.34 34.419-.491L96 169.881V392c0 13.255 10.745 24 24 24h243.549c21.382 0 32.09-25.851 16.971-40.971l-16.001-16z\"/></svg>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"dnn-hex-color-fields\" style={{display: this.hexDisplay}}>\r\n                        <div class=\"dnn-hex-color-field\">\r\n                            <label>HEX</label>\r\n                            <div class=\"hex-input\">\r\n                                <input type=\"text\" aria-label=\"Hexadecimal value\"\r\n                                    value={this.getHex()}\r\n                                    onChange={e => this.handleHexChange((e.target as HTMLInputElement).value)}\r\n                                />\r\n                                <button class=\"copy\" aria-label=\"copy value\">\r\n                                    <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"copy\" class=\"svg-inline--fa fa-copy fa-w-14\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path fill=\"currentColor\" d=\"M320 448v40c0 13.255-10.745 24-24 24H24c-13.255 0-24-10.745-24-24V120c0-13.255 10.745-24 24-24h72v296c0 30.879 25.121 56 56 56h168zm0-344V0H152c-13.255 0-24 10.745-24 24v368c0 13.255 10.745 24 24 24h272c13.255 0 24-10.745 24-24V128H344c-13.2 0-24-10.8-24-24zm120.971-31.029L375.029 7.029A24 24 0 0 0 358.059 0H352v96h96v-6.059a24 24 0 0 0-7.029-16.97z\"></path></svg>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"dnn-color-mode-switch\">\r\n                            <button id=\"hex-switch\" onClick={this.switchColorMode.bind(this)} aria-label=\"Switch to hue saturation lightness values\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"retweet\" class=\"svg-inline--fa fa-retweet fa-w-20\" role=\"img\" viewBox=\"0 0 640 512\"><path fill=\"currentColor\" d=\"M629.657 343.598L528.971 444.284c-9.373 9.372-24.568 9.372-33.941 0L394.343 343.598c-9.373-9.373-9.373-24.569 0-33.941l10.823-10.823c9.562-9.562 25.133-9.34 34.419.492L480 342.118V160H292.451a24.005 24.005 0 0 1-16.971-7.029l-16-16C244.361 121.851 255.069 96 276.451 96H520c13.255 0 24 10.745 24 24v222.118l40.416-42.792c9.285-9.831 24.856-10.054 34.419-.492l10.823 10.823c9.372 9.372 9.372 24.569-.001 33.941zm-265.138 15.431A23.999 23.999 0 0 0 347.548 352H160V169.881l40.416 42.792c9.286 9.831 24.856 10.054 34.419.491l10.822-10.822c9.373-9.373 9.373-24.569 0-33.941L144.971 67.716c-9.373-9.373-24.569-9.373-33.941 0L10.343 168.402c-9.373 9.373-9.373 24.569 0 33.941l10.822 10.822c9.562 9.562 25.133 9.34 34.419-.491L96 169.881V392c0 13.255 10.745 24 24 24h243.549c21.382 0 32.09-25.851 16.971-40.971l-16.001-16z\"/></svg>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","\r\n:host {\r\n  /** \r\n  * @prop --border-color: The color of the border.\r\n  * @prop --border-radius: The radius of the controls borders.\r\n  * @prop --drop-background-color: The color of the background when a file is dropping.\r\n  */\r\n  --border-color: var(--dnn-color-tertiary-contrast, lightgray);\r\n  --border-radius: var(--dnn-controls-radius, 5px);\r\n  --drop-background-color: var(--dnn-color-tertiary, lightblue);\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n  text-align: center;\r\n  border: 2px dashed var(--border-color);\r\n  border-radius: var(--border-radius);\r\n  padding: 1rem;\r\n  transition: all 300ms ease-in-out;\r\n}\r\n\r\n:host(.dropping){\r\n  background-color: var(--drop-background-color);\r\n}\r\np{\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\nbutton{\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: 0px;\r\n  margin: 0;\r\n  padding: 0;\r\n  background-color: transparent;\r\n  &:hover{\r\n    cursor: pointer;\r\n  }\r\n  svg{\r\n    margin-right: 0.5rem;\r\n  }\r\n}\r\nlabel.upload-file{\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  input{\r\n    display: none;\r\n  }\r\n}\r\n.video-preview{\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  button{\r\n    margin: 1rem;\r\n  }\r\n}\r\n","import { Component, Host, h, Prop, State, Event, EventEmitter } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'dnn-dropzone',\r\n  styleUrl: 'dnn-dropzone.scss',\r\n  shadow: true,\r\n})\r\nexport class DnnDropzone {\r\n  /** Localization strings */\r\n  @Prop() resx:{\r\n    dragAndDropFile: string;\r\n    capture: string;\r\n    or: string;\r\n    takePicture: string;\r\n    uploadFile: string;\r\n  } = {\r\n    dragAndDropFile: \"Drag and drop a file\",\r\n    capture: \"Capture\",\r\n    or: \"or\",\r\n    takePicture: \"Take a picture\",\r\n    uploadFile: \"Upload a file\",\r\n  }\r\n\r\n  /** A list of allowed file extensions.\r\n   * If not specified, any file is allowed.\r\n   * Ex: [\"jpg\", \"jped\", \"gif\", \"png\"]\r\n   */\r\n  @Prop() allowedExtensions: string[];\r\n\r\n  /**\r\n   * If true, will allow the user to take a snapshot\r\n   * using the device camera. (only works over https).\r\n   */\r\n  @Prop() allowCameraMode: boolean = false;\r\n\r\n  /**\r\n   * Specifies the jpeg quality for when the device\r\n   * camera is used to generate a picture.\r\n   * Needs to be a number between 0 and 1 and defaults to 0.8\r\n   */\r\n  @Prop() captureQuality: number = 0.8;\r\n\r\n  @Event() filesSelected: EventEmitter<File[]>;\r\n  \r\n  @State() canTakeSnapshots: boolean = false;\r\n\r\n  @State() takingPicture: boolean = false;\r\n  \r\n  private dropzone: HTMLElement;\r\n  private fileInput: HTMLInputElement;\r\n  private videoPreview: HTMLVideoElement;\r\n  private videoSettings!: MediaTrackSettings;\r\n\r\n\r\n  componentDidLoad() {\r\n    if (this.allowCameraMode){\r\n      this.checkIfBrowserCanTakeSnapshots()\r\n      .then(result => this.canTakeSnapshots = result);\r\n    }\r\n    if (this.allowedExtensions != undefined && this.allowedExtensions.length > 0){\r\n      var extensionsWithDots = this.allowedExtensions.map(e => `.${e}`);\r\n      var extensionsList = extensionsWithDots.join(\",\");\r\n      this.fileInput.accept = extensionsList;\r\n    }\r\n  }\r\n\r\n  private checkIfBrowserCanTakeSnapshots(): Promise<boolean> {\r\n    return new Promise((resolve) => {\r\n      const mediaDevices = navigator.mediaDevices;\r\n      if (mediaDevices == undefined || mediaDevices.enumerateDevices == undefined) {\r\n        resolve(false);\r\n      }\r\n      mediaDevices.enumerateDevices()\r\n        .then(devices => {\r\n          var result = devices.some(device => device.kind == \"videoinput\");\r\n          resolve(result);\r\n        });\r\n    });\r\n  }\r\n\r\n  getFilesFromFileList(files: FileList) : File[] {\r\n    var fileList: File[] = [];\r\n    for (let index = 0; index < files.length; index++) {\r\n      const file = files[index];\r\n      fileList.push(file);\r\n    }\r\n\r\n    return fileList;\r\n  }\r\n\r\n  private handleUploadButton(element: HTMLInputElement): void {\r\n    let files = this.getFilesFromFileList(element.files);\r\n\r\n    this.filesSelected.emit(files);\r\n  }\r\n\r\n  private handleDragOver = (event: DragEvent) => \r\n  {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    event.dataTransfer.dropEffect = \"copy\";\r\n    this.dropzone.classList.add(\"dropping\");\r\n  };\r\n\r\n  private hasInvalidExtensions(files: FileList): boolean{\r\n    var hasInvalid = false;\r\n    for (let fileIndex = 0; fileIndex < files.length; fileIndex++) {\r\n      const file = files[fileIndex];\r\n      var regex = /(?:\\.([^.]+))?$/;\r\n      const fileExtension = regex.exec(file.name)[1];\r\n      if (fileExtension == undefined){\r\n        hasInvalid = true;\r\n      }\r\n\r\n      if (this.allowedExtensions != undefined && !this.allowedExtensions.includes(fileExtension)){\r\n        hasInvalid = true;\r\n      }\r\n\r\n      return hasInvalid;\r\n    }\r\n  }\r\n\r\n  private handleDrop = (dropEvent: DragEvent) => {\r\n    dropEvent.stopPropagation();\r\n    dropEvent.preventDefault();\r\n    const files = dropEvent.dataTransfer.files;\r\n\r\n    if (this.hasInvalidExtensions(files)){\r\n      return;\r\n    }\r\n    var fileList = this.getFilesFromFileList(files);\r\n    this.filesSelected.emit(fileList);\r\n  };\r\n\r\n  private takeSnapshot(): void {\r\n    this.takingPicture = true;\r\n    navigator.mediaDevices.getUserMedia({video: true, audio: false})\r\n    .then(stream => {\r\n      stream\r\n      this.videoPreview.srcObject = stream;\r\n      this.videoPreview.play()\r\n      .then(() => {\r\n        this.videoSettings = stream.getVideoTracks()[0].getSettings();\r\n      });\r\n    })\r\n    .catch(error => alert(error));\r\n  }\r\n\r\n  private applySnapshot(): void {\r\n    var canvas = document.createElement(\"canvas\");\r\n    const context = canvas.getContext(\"2d\");\r\n    canvas.width = this.videoSettings.width;\r\n    canvas.height = this.videoSettings.height;\r\n    context.drawImage(this.videoPreview, 0, 0);\r\n    canvas.toBlob(blob => {\r\n      var file = new File([blob], \"image.jpeg\", {type:\"image/jpeg\"});\r\n      this.takingPicture = false;\r\n      \r\n      var fileList = [file];\r\n      this.filesSelected.emit(fileList)\r\n    }, \"image/jpeg\", this.captureQuality);\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <Host\r\n        ref={e => this.dropzone = e}\r\n        class=\"dropzone\"\r\n        onDragOver={this.handleDragOver}\r\n        onDrop={this.handleDrop}\r\n        onDragLeave={() => this.dropzone.classList.remove(\"dropping\")}\r\n      >\r\n        {!this.takingPicture &&\r\n          [\r\n            <p>{this.resx?.dragAndDropFile}</p>\r\n          ,\r\n            <p>- {this.resx?.or} -</p>\r\n          ,\r\n            <label class=\"upload-file\">\r\n              <input\r\n                type=\"file\"\r\n                ref={el => this.fileInput = el}\r\n                onChange={e => this.handleUploadButton(e.target as HTMLInputElement)}\r\n              >\r\n              </input>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><g><rect fill=\"none\" height=\"24\" width=\"24\" /></g><g><path d=\"M5,20h14v-2H5V20z M5,10h4v6h6v-6h4l-7-7L5,10z\" /></g></svg>\r\n              {this.resx?.uploadFile}\r\n            </label>\r\n            ,\r\n            this.canTakeSnapshots &&\r\n              [\r\n                <p>- {this.resx?.or} -</p>\r\n                ,\r\n                <button\r\n                  onClick={() => this.takeSnapshot()}\r\n                >\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><circle cx=\"12\" cy=\"12\" r=\"3.2\" /><path d=\"M9 2L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z\" /></svg>\r\n                  {this.resx?.takePicture}\r\n                </button>\r\n              ]\r\n          ]\r\n        }\r\n        {this.takingPicture &&\r\n          <div class=\"video-preview\">\r\n            <video ref={e => this.videoPreview = e} />\r\n            <button\r\n              onClick={() => this.applySnapshot()}\r\n            >\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><circle cx=\"12\" cy=\"12\" r=\"3.2\" /><path d=\"M9 2L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z\" /></svg>\r\n              {this.resx?.capture}\r\n            </button>\r\n          </div>\r\n        }\r\n      </Host>\r\n    );\r\n  }\r\n\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\ncanvas {\r\n  display: none;\r\n}\r\n.view{\r\n  visibility: hidden;\r\n  opacity: 0;\r\n  height: 0;\r\n  overflow: hidden;\r\n  transition: all 300ms ease-in-out;\r\n  &.visible{\r\n    visibility: visible;\r\n    opacity: 1;\r\n    height: initial;\r\n  }\r\n  .cropper{\r\n    position: relative;\r\n    width: 100%;\r\n    img{\r\n      width: 100%;\r\n      display: block;\r\n      margin: 0 auto;\r\n    }\r\n    .backdrop{\r\n      backdrop-filter: saturate(0.5);\r\n      backdrop-filter: brightness(0.5);\r\n      position: absolute;\r\n      left: 0;\r\n      top: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n    .crop{\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n      outline: 2px dashed white;\r\n      box-shadow: black 0 0 0px 2px;\r\n      backdrop-filter: saturate(2);\r\n      backdrop-filter: brightness(2);\r\n      cursor: move;\r\n      >div{\r\n        width: 10px;\r\n        height: 10px;\r\n        background-color: white;\r\n        border: 2px solid rgba(0,0,0,0.5);\r\n        position: absolute;\r\n        &.nw, &.ne{\r\n          top: -7px;\r\n        }\r\n        &.ne, &.se{\r\n          right: -7px;\r\n        }\r\n        &.se, &.sw{\r\n          bottom: -7px;\r\n        }\r\n        &.sw, &.nw{\r\n          left: -7px;\r\n        }\r\n        &.nw, &.se{\r\n          cursor: nwse-resize;\r\n        }\r\n        &.ne, &.sw{\r\n          cursor: nesw-resize;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}","import { Component, Host, h, State, Prop, Event, EventEmitter } from '@stencil/core';\r\n\r\n/**\r\n * Allows cropping an image in-browser with the option to enforce a specific final size.\r\n * All computation happens in the browser and the final image is emmited\r\n * in an event that has a data-url of the image.\r\n */\r\n@Component({\r\n  tag: 'dnn-image-cropper',\r\n  styleUrl: 'dnn-image-cropper.scss',\r\n  shadow: true,\r\n})\r\nexport class DnnImageCropper {\r\n  /** Sets the desired final image width. */\r\n  @Prop() width: number = 600;\r\n\r\n  /** Sets the desired final image height. */\r\n  @Prop() height: number = 600;\r\n\r\n  /** Can be used to customize controls text. */\r\n  @Prop() resx: {\r\n    capture: string;\r\n    dragAndDropFile: string;\r\n    or: string;\r\n    takePicture: string;\r\n    uploadFile: string;\r\n  } = {\r\n    capture: \"Capture\",\r\n    dragAndDropFile: \"Drag and drop an image\",\r\n    or: \"or\",\r\n    takePicture: \"Take a picture\",\r\n    uploadFile: \"Upload an image\",\r\n  }\r\n\r\n  /** Sets the output quality of the corpped image (number between 0 and 1). */\r\n  @Prop() quality: number = 0.8;\r\n\r\n  /** When the image crop changes, emits the dataurl for the new cropped image. */\r\n  @Event() imageCropChanged: EventEmitter<string>;\r\n\r\n  @State() view: IComponentInterfaces[\"View\"];\r\n  \r\n  private host: HTMLElement;\r\n  private hasPictureView: HTMLDivElement;\r\n  private noPictureView: HTMLDivElement;\r\n  private canvas: HTMLCanvasElement;\r\n  private image: HTMLImageElement;\r\n  private crop: HTMLDivElement;\r\n\r\n  componentDidLoad() {\r\n    this.setView(\"noPictureView\");\r\n  }\r\n\r\n  private setView(newView: IComponentInterfaces[\"View\"]){\r\n    const views = this.host.shadowRoot.querySelectorAll(\".view\");\r\n    views.forEach(v =>\r\n      v.classList.remove(\"visible\"));\r\n    switch (newView) {\r\n      case \"noPictureView\":\r\n        this.noPictureView.classList.add(\"visible\");\r\n        break;\r\n      case \"hasPictureView\":\r\n        this.hasPictureView.classList.add(\"visible\");\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.view = newView;\r\n  }\r\n\r\n  private initCrop(){\r\n    var wantedRatio = this.width / this.height;\r\n    var imageRect = this.image.getBoundingClientRect();\r\n    var imageRatio = imageRect.width / imageRect.height;\r\n    \r\n    if (wantedRatio > imageRatio){\r\n        var wantedHeight = imageRect.width / wantedRatio;\r\n        var diff = imageRect.height - wantedHeight;\r\n        this.crop.style.top = Math.round(diff/2).toString() + \"px\";\r\n        this.crop.style.height = Math.round(wantedHeight).toString() + \"px\";\r\n    }\r\n    else{\r\n      var wantedWidth = imageRect.height * wantedRatio;\r\n      var diff = imageRect.width - wantedWidth;\r\n        this.crop.style.left = Math.round(diff/2).toString() + \"px\";\r\n        this.crop.style.width = Math.round(wantedWidth).toString() + \"px\";\r\n    }\r\n  }\r\n\r\n  private setImage(){\r\n    this.image.src = this.canvas.toDataURL();\r\n    window.requestAnimationFrame(() => {\r\n      this.initCrop();\r\n      this.emitImage();\r\n    });\r\n  }\r\n\r\n  private handleNewFile(file: File): void {\r\n    if (file.type.split('/')[0] != \"image\"){\r\n      return;\r\n    }\r\n    \r\n    var reader = new FileReader();\r\n    reader.onload = readerLoadEvent => {\r\n      var img = new Image();\r\n      img.onload = () => {\r\n        this.canvas.width = img.width;\r\n        this.canvas.height = img.height;\r\n        var ctx = this.canvas.getContext(\"2d\");\r\n        ctx.drawImage(img,0,0);\r\n        this.setView(\"hasPictureView\");\r\n        this.setImage();\r\n      }\r\n      img.src = readerLoadEvent.target.result.toString();\r\n    }\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  private handleCropMouseDown = (event: MouseEvent) => {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    const element = event.target as HTMLElement;\r\n    const className = element.classList[0];\r\n\r\n    document.addEventListener(\"mouseup\", this.handleImageCropFinished, false);\r\n    switch (className) {\r\n      case \"crop\":\r\n        document.addEventListener(\"mousemove\", this.handleCropDrag, false);\r\n        document.addEventListener(\"mouseup\", () => document.removeEventListener(\"mousemove\", this.handleCropDrag));\r\n        break;\r\n      case \"nw\":\r\n        document.addEventListener(\"mousemove\", this.handleNwMouseMove, false);\r\n        document.addEventListener(\"mouseup\", () => document.removeEventListener(\"mousemove\", this.handleNwMouseMove));\r\n        break;\r\n      case \"ne\":\r\n        document.addEventListener(\"mousemove\", this.handleNeMouseMove, false);\r\n        document.addEventListener(\"mouseup\", () => document.removeEventListener(\"mousemove\", this.handleNeMouseMove));\r\n        break\r\n      case \"se\":\r\n        document.addEventListener(\"mousemove\", this.handleSeMouseMove, false);\r\n        document.addEventListener(\"mouseup\", () => document.removeEventListener(\"mousemove\", this.handleSeMouseMove));\r\n        break;\r\n      case \"sw\":\r\n        document.addEventListener(\"mousemove\", this.handleSwMouseMove, false);\r\n        document.addEventListener(\"mouseup\", () => document.removeEventListener(\"mousemove\", this.handleSwMouseMove));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  private handleImageCropFinished = (_ev: MouseEvent) => {\r\n    this.emitImage();\r\n    document.removeEventListener(\"mouseup\", this.handleImageCropFinished);\r\n  }\r\n\r\n  private emitImage() {\r\n    var x = this.crop.offsetLeft / this.image.width * this.image.naturalWidth;\r\n    var y = this.crop.offsetTop / this.image.height * this.image.naturalHeight;\r\n\r\n    var cropRect = this.crop.getBoundingClientRect();\r\n    var width = cropRect.width / this.image.width * this.image.naturalWidth;\r\n    var height = cropRect.height / this.image.height * this.image.naturalHeight;\r\n\r\n    if (x < 0)\r\n      x = 0;\r\n    if (x > this.image.naturalWidth)\r\n      x = this.image.naturalWidth;\r\n    if (y < 0)\r\n      y = 0;\r\n    if (y > this.image.naturalWidth)\r\n      y = this.image.naturalWidth;\r\n    if (width > this.image.naturalWidth)\r\n      width = this.image.naturalWidth;\r\n    if (height > this.image.naturalHeight)\r\n      height = this.image.naturalHeight;\r\n\r\n    var dataUrl = this.generateCroppedImage(x, y, width, height, this.width, this.height);\r\n    this.imageCropChanged.emit(dataUrl);\r\n  }\r\n\r\n  private generateCroppedImage(x: number, y: number, width: number, height: number, desiredWidth: number, desiredHeight: number) {\r\n    this.canvas.width = desiredWidth;\r\n    this.canvas.height = desiredHeight;\r\n    const context = this.canvas.getContext(\"2d\");\r\n    context.clearRect(0, 0, desiredWidth, desiredHeight);\r\n    context.drawImage(this.image, x, y, width, height, 0, 0, desiredWidth, desiredHeight);\r\n\r\n    return this.canvas.toDataURL(\"image/jpeg\", this.quality);\r\n  }\r\n\r\n  private handleNwMouseMove = (event: MouseEvent) => {\r\n    let left = 0;\r\n    let top = 0;\r\n    let newWidth = 0;\r\n    let newHeight = 0;\r\n    let orientation: \"horizontal\" | \"vertical\" = \"horizontal\";\r\n    const wantedRatio = this.width / this.height;\r\n    const cropRect = this.crop.getBoundingClientRect();\r\n    const imageRect = this.image.getBoundingClientRect();\r\n    \r\n    if (Math.abs(event.movementX) < Math.abs(event.movementY)){\r\n      orientation = \"vertical\";\r\n    }\r\n\r\n    if (orientation == \"horizontal\"){\r\n      newWidth = cropRect.width - event.movementX;\r\n      newHeight = newWidth / wantedRatio;\r\n    }\r\n    else{\r\n      newHeight = cropRect.height - event.movementY;\r\n      newWidth = newHeight * wantedRatio;\r\n    }\r\n\r\n    const leftOffset = cropRect.width - newWidth;\r\n    left = this.crop.offsetLeft + leftOffset;\r\n    const topOffset = cropRect.height - newHeight;\r\n    top = this.crop.offsetTop + topOffset;\r\n\r\n    if (left < 0) left = 0;\r\n    if (left > imageRect.width) left = imageRect.width;\r\n    if (top < 0) top = 0;\r\n    if (top > imageRect.height) top = imageRect.height;\r\n    if (left + newWidth > imageRect.width) newWidth = imageRect.width - left;\r\n    if (top + newHeight > imageRect.height) newHeight = imageRect.height - top;\r\n    this.crop.style.left = left + \"px\";\r\n    this.crop.style.top = top + \"px\";\r\n    this.crop.style.width = newWidth + \"px\";\r\n    this.crop.style.height = newHeight + \"px\";\r\n  }\r\n\r\n  private handleNeMouseMove = (event: MouseEvent) => {\r\n    let left = 0;\r\n    let top = 0;\r\n    let newWidth = 0;\r\n    let newHeight = 0;\r\n    let orientation: \"horizontal\" | \"vertical\" = \"horizontal\";\r\n    const wantedRatio = this.width / this.height;\r\n    const cropRect = this.crop.getBoundingClientRect();\r\n    const imageRect = this.image.getBoundingClientRect();\r\n    \r\n    if (Math.abs(event.movementX) < Math.abs(event.movementY)){\r\n      orientation = \"vertical\";\r\n    }\r\n\r\n    if (orientation == \"horizontal\"){\r\n      newWidth = cropRect.width + event.movementX;\r\n      newHeight = newWidth / wantedRatio;\r\n    }\r\n    else{\r\n      newHeight = cropRect.height - event.movementY;\r\n      newWidth = newHeight * wantedRatio;\r\n    }\r\n\r\n    const topOffset = cropRect.height - newHeight;\r\n    top = this.crop.offsetTop + topOffset;\r\n\r\n    if (top < 0) top = 0;\r\n    if (top > imageRect.height) top = imageRect.height;\r\n    if (left + newWidth > imageRect.width) newWidth = imageRect.width - left;\r\n    if (top + newHeight > imageRect.height) newHeight = imageRect.height - top;\r\n    this.crop.style.top = top + \"px\";\r\n    this.crop.style.width = newWidth + \"px\";\r\n    this.crop.style.height = newHeight + \"px\";\r\n  }\r\n\r\n  private handleSeMouseMove = (event: MouseEvent) => {\r\n    let left = this.crop.offsetLeft;\r\n    let top = this.crop.offsetTop;\r\n    let newWidth = 0;\r\n    let newHeight = 0;\r\n    let orientation: \"horizontal\" | \"vertical\" = \"horizontal\";\r\n    const wantedRatio = this.width / this.height;\r\n    const cropRect = this.crop.getBoundingClientRect();\r\n    const imageRect = this.image.getBoundingClientRect();\r\n    \r\n    if (Math.abs(event.movementX) < Math.abs(event.movementY)){\r\n      orientation = \"vertical\";\r\n    }\r\n\r\n    if (orientation == \"horizontal\"){\r\n      newWidth = cropRect.width + event.movementX;\r\n      newHeight = newWidth / wantedRatio;\r\n    }\r\n    else{\r\n      newHeight = cropRect.height + event.movementY;\r\n      newWidth = newHeight * wantedRatio;\r\n    }\r\n\r\n    if (top < 0) top = 0;\r\n    if (top > imageRect.height) top = imageRect.height;\r\n    if (left + newWidth > imageRect.width) newWidth = imageRect.width - left;\r\n    if (top + newHeight > imageRect.height) newHeight = imageRect.height - top;\r\n    this.crop.style.top = top + \"px\";\r\n    this.crop.style.width = newWidth + \"px\";\r\n    this.crop.style.height = newHeight + \"px\";\r\n  }\r\n\r\n  private handleSwMouseMove = (event: MouseEvent) => {\r\n    let left = 0;\r\n    let top = this.crop.offsetTop;\r\n    let newWidth = 0;\r\n    let newHeight = 0;\r\n    let orientation: \"horizontal\" | \"vertical\" = \"horizontal\";\r\n    const wantedRatio = this.width / this.height;\r\n    const cropRect = this.crop.getBoundingClientRect();\r\n    const imageRect = this.image.getBoundingClientRect();\r\n    \r\n    if (Math.abs(event.movementX) < Math.abs(event.movementY)){\r\n      orientation = \"vertical\";\r\n    }\r\n\r\n    if (orientation == \"horizontal\"){\r\n      newWidth = cropRect.width - event.movementX;\r\n      newHeight = newWidth / wantedRatio;\r\n    }\r\n    else{\r\n      newHeight = cropRect.height + event.movementY;\r\n      newWidth = newHeight * wantedRatio;\r\n    }\r\n\r\n    const leftOffset = cropRect.width - newWidth;\r\n    left = this.crop.offsetLeft + leftOffset;\r\n\r\n    if (left < 0) left = 0;\r\n    if (left > imageRect.width) left = imageRect.width;\r\n    if (top < 0) top = 0;\r\n    if (top > imageRect.height) top = imageRect.height;\r\n    if (left + newWidth > imageRect.width) newWidth = imageRect.width - left;\r\n    if (top + newHeight > imageRect.height) newHeight = imageRect.height - top;\r\n    this.crop.style.left = left + \"px\";\r\n    this.crop.style.top = top + \"px\";\r\n    this.crop.style.width = newWidth + \"px\";\r\n    this.crop.style.height = newHeight + \"px\";\r\n  }\r\n\r\n  private handleCropDrag = (ev: MouseEvent) => {\r\n    let newLeft = this.crop.offsetLeft + ev.movementX;\r\n    let newTop = this.crop.offsetTop + ev.movementY;\r\n    var imageRect = this.image.getBoundingClientRect();\r\n    var cropRect = this.crop.getBoundingClientRect();\r\n    if (newLeft < 0){\r\n      newLeft = 0;\r\n    }\r\n    if (newTop < 0){\r\n      newTop = 0;\r\n    }\r\n    if (newLeft + cropRect.width > imageRect.width){\r\n      newLeft = this.crop.offsetLeft;\r\n    }\r\n    if (newTop + cropRect.height > imageRect.height){\r\n      newTop = this.crop.offsetTop;\r\n    }\r\n    this.crop.style.left = newLeft + \"px\";\r\n    this.crop.style.top = newTop + \"px\";\r\n  };\r\n  \r\n  render() {\r\n    return (\r\n      <Host ref={el => this.host = el}>\r\n        <canvas ref={el => this.canvas = el} />\r\n        <div\r\n          class=\"view\"\r\n          ref={el => this.hasPictureView = el}\r\n        >\r\n          <div class=\"cropper\">\r\n            <img ref={el => this.image = el} />\r\n            <div class=\"backdrop\" />\r\n            <div\r\n              class=\"crop\"\r\n              ref={e => this.crop = e}\r\n              onMouseDown={this.handleCropMouseDown}\r\n            >\r\n              <div class=\"nw\" />\r\n              <div class=\"ne\" />\r\n              <div class=\"se\" />\r\n              <div class=\"sw\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          class=\"view\"\r\n          ref={el => this.noPictureView = el}>\r\n            <dnn-dropzone\r\n              allowCameraMode\r\n              onFilesSelected={e => this.handleNewFile(e.detail[0])}\r\n              resx={\r\n                {\r\n                  capture: this.resx.capture,\r\n                  dragAndDropFile: this.resx.dragAndDropFile,\r\n                  or: this.resx.or,\r\n                  takePicture: this.resx.takePicture,\r\n                  uploadFile: this.resx.uploadFile,\r\n                }\r\n              }\r\n            />\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n\r\ninterface IComponentInterfaces\r\n{\r\n  View: \"noPictureView\" | \"takingPictureView\" | \"hasPictureView\" | \"hasCroppedPictureView\";\r\n}",":host {\r\n  display: block;\r\n  .overlay{\r\n    background-color: rgba(0,0,0,0.5);\r\n    position: fixed;\r\n    top:0;\r\n    left:0;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: 1;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    backdrop-filter: blur(2px);\r\n    transition: all 300ms ease-in-out;\r\n    visibility: hidden;\r\n    opacity: 0;\r\n    .modal{\r\n      background-color: white;\r\n      padding: 30px;\r\n      transform: scale(2);\r\n      transition: all 300ms ease-in-out;\r\n      z-index: 2;\r\n      position: relative;\r\n      margin: 10%;\r\n      max-height: 80%;\r\n      border-radius: var(--dnn-controls-radius, 5px);\r\n      box-shadow: 10px 10px 20px 0 rgba(0,0,0,0.5);\r\n      display: block;\r\n      .close{\r\n        position: absolute;\r\n        background-color:white;\r\n        border: 2px solid white;\r\n        border-radius: 50%;\r\n        padding: 0;\r\n        margin: 0;\r\n        top: -12px;\r\n        right: -12px;\r\n        outline: none;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        &:focus, &:hover{\r\n          box-shadow: 0 0 2px 2px var(--dnn-color-primary, blue);\r\n        }\r\n        svg{\r\n          width: 24px;\r\n          height: 24px;\r\n          color: grey;\r\n        }\r\n      }\r\n    }\r\n    &.visible{\r\n      visibility: visible;\r\n      opacity: 1;\r\n      .modal{\r\n        transform: scale(1);\r\n        box-shadow: 4px 4px 10px 0px rgba(0,0,0,0.5);\r\n        display: block;\r\n      }\r\n    }\r\n  }\r\n}","import { Component, Element, Host, h, Prop, Event, EventEmitter, Method, State } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'dnn-modal',\r\n  styleUrl: 'dnn-modal.scss',\r\n  shadow: true\r\n})\r\nexport class DnnModal {\r\n  \r\n  @Element() el!: HTMLDnnModalElement;\r\n  \r\n  /**\r\n   * Pass false to remove the backdrop click auto-dismiss feature.\r\n   */\r\n  @Prop() backdropDismiss: boolean = true;\r\n\r\n  /**\r\n   * Optionally pass the aria-label text for the close button.\r\n   * Defaults to \"Close modal\" if not provided.\r\n   */\r\n  @Prop() closeText?: string = \"Close modal\";\r\n\r\n  /**\r\n   * Optionally you can pass false to not show the close button.\r\n   * If you decide to do so, you should either not also prevent dismissal by clicking the backdrop\r\n   * or provide your own dismissal logic in the modal content.\r\n   */\r\n  @Prop() showCloseButton?: boolean = true;\r\n\r\n  @State() visible: boolean = false;\r\n\r\n  /**\r\n   * Shows the modal\r\n   */\r\n  @Method()\r\n  async show() {\r\n    this.visible = true;\r\n  }\r\n\r\n  /**\r\n   * Hides the modal\r\n   */\r\n  @Method()\r\n  async hide() {\r\n    this.visible = false;\r\n  }\r\n\r\n  /**\r\n   * Fires when the modal is dismissed.\r\n   */\r\n  @Event() dismissed!: EventEmitter;\r\n\r\n  private handleDismiss(){\r\n    this.visible = false;\r\n    this.dismissed.emit();\r\n  }\r\n\r\n  private handleBackdropClick(e: MouseEvent): void {\r\n    const element = (e.target as HTMLElement);\r\n    if (element.id === \"backdrop\" && this.backdropDismiss){\r\n      this.handleDismiss();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div id=\"backdrop\"\r\n          class={this.visible ? 'overlay visible' : 'overlay'}\r\n          onClick={e => this.handleBackdropClick(e)}\r\n        >\r\n          <div class=\"modal\">\r\n            {this.showCloseButton &&\r\n              <button class=\"close\" aria-label={this.closeText}\r\n                onClick={() => this.handleDismiss()}>\r\n                  <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"times-circle\" class=\"svg-inline--fa fa-times-circle fa-w-16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z\"></path></svg>\r\n              </button>\r\n            }\r\n            <slot></slot>\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  --background-color: transparent;\r\n  --color: #333;\r\n  --border-size: 1px;\r\n  --border-color: grey;\r\n  --border-active-color: black;\r\n  --border-radius: var(--dnn-controls-radius, 5px);\r\n  --padding: var(--dnn-controls-padding, 5px);\r\n  --focus-color: var(--dnn-color-primary, blue);\r\n  input {\r\n    width:100%;\r\n    border: var(--border-size) solid var(--border-color);\r\n    outline: none;\r\n    border-radius: var(--border-radius);\r\n    padding: var(--padding);\r\n    padding-right: 32px;\r\n    transition: all 300ms ease-in-out;\r\n    &:focus, &:hover{\r\n      outline: none;\r\n      box-shadow: 0 0 2px 2px var(--focus-color);\r\n    }\r\n  }\r\n  svg{\r\n    position: absolute;\r\n    top:0;\r\n    right:0;\r\n    height: 100%;\r\n    transform: scale(0.7);\r\n    fill: var(--color);\r\n    outline: var(--color);\r\n    color: var(--color);\r\n    transition: all 300ms ease-in-out;\r\n  }\r\n  button{\r\n    background: transparent;\r\n    border: 0;\r\n    margin: 0;\r\n    padding: 0;\r\n    &:focus, &:hover{\r\n      svg{\r\n        fill: var(--focus-color);\r\n      outline: var(--focus-color);\r\n      color: var(--focus-color);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, Host, h, Event, EventEmitter, Watch, Prop } from '@stencil/core';\r\nimport { Debounce } from '../../utilities/debounce';\r\n\r\n@Component({\r\n  tag: 'dnn-searchbox',\r\n  styleUrl: 'dnn-searchbox.scss',\r\n  shadow: true\r\n})\r\nexport class DnnSearchbox {\r\n\r\n  /**\r\n   * Sets the field placeholder text.\r\n   */\r\n  @Prop() placeholder?: string = \"\";\r\n\r\n  /**\r\n   * Debounces the queryChanged by 500ms.\r\n   */\r\n  @Prop() debounced: boolean = true;\r\n\r\n  /** Sets the query */\r\n  @Prop({mutable: true}) query: string = \"\";\r\n\r\n  /**\r\n   * Fires up each time the search query changes.\r\n   * The data passed is the new query.\r\n   */\r\n  @Event() queryChanged: EventEmitter;\r\n\r\n  @Watch('query')\r\n  fireQueryChanged(){\r\n    if (this.debounced){\r\n      this.debouncedHandleQueryChanged();\r\n    }\r\n    else{\r\n      this.handleQueryChanged();\r\n    }\r\n  }\r\n  \r\n  private handleQueryChanged(){\r\n    this.queryChanged.emit(this.query);\r\n  }\r\n\r\n  @Debounce(500)\r\n  private debouncedHandleQueryChanged(){\r\n    this.handleQueryChanged();\r\n  }\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <input type=\"text\" value={this.query}\r\n          placeholder={this.placeholder}\r\n          onInput={e => this.query = (e.target as HTMLInputElement).value}\r\n        />\r\n        {this.query !== \"\" ?\r\n          <button class=\"svg clear\"\r\n            onClick={() => this.query = \"\"}\r\n          >\r\n            <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"times-circle\" class=\"svg-inline--fa fa-times-circle fa-w-16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z\"></path></svg>\r\n          </button>\r\n        :\r\n        <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"search\" class=\"svg-inline--fa fa-search fa-w-16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z\"></path></svg>\r\n        }\r\n      </Host>\r\n    );\r\n  }\r\n\r\n}\r\n",":host {\r\n  /**\r\n  * @prop --color: Normal Color of the inactive sort icon.\r\n  * @prop --color-sorted: Color of the sorted sort icon.\r\n  * @prop --color-hover: Color of the icons when hovered.\r\n  */\r\n  display: inline-block;\r\n}\r\n\r\nbutton {\r\n  outline: none;\r\n  border: none;\r\n  margin: 0;\r\n  padding: 0;\r\n  background-color: transparent;\r\n  outline: none;\r\n  display: inline-block;\r\n  line-height: 1em;\r\n  position: relative;\r\n  top: 0.25em;\r\n  svg{\r\n    height: 1.5em;\r\n    width: auto;\r\n    fill: var(--color, #888);\r\n  }\r\n  &.active{\r\n    svg{\r\n      fill: var(--color-sorted, var(--dnn-color-primary, rgb(2,139,255)));\r\n    }\r\n  }\r\n  &:hover, &:focus{\r\n    svg{\r\n      fill: var(--color-hover, var(--dnn-color-primary-light, #36a1ff));\r\n    }\r\n  }\r\n}","import { Component, Host, h, Prop, Event, EventEmitter } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'dnn-sort-icon',\r\n  styleUrl: 'dnn-sort-icon.scss',\r\n  shadow: true\r\n})\r\nexport class DnnSortIcon {\r\n  /** Defines the current sort direction */\r\n  @Prop() sortDirection: \"asc\" | \"desc\" | \"none\" = \"none\";\r\n\r\n  /** Emitted when the sort is changed. */\r\n  @Event() sortChanged!: EventEmitter<\"asc\"|\"desc\"|\"none\">;\r\n  \r\n  private changeSort(): void {\r\n    switch (this.sortDirection) {\r\n      case \"asc\":\r\n        this.sortDirection = \"desc\";\r\n        break;\r\n      case \"desc\":\r\n        this.sortDirection = \"asc\";\r\n        break;\r\n      case \"none\":\r\n        this.sortDirection = \"asc\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.sortChanged.emit(this.sortDirection);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <button\r\n          class={{\"active\": this.sortDirection != \"none\"}}\r\n          onClick={() => this.changeSort()}\r\n        >\r\n          {this.sortDirection == \"none\" &&\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 12 16\"><path d=\"M 0 7 H 12 L 6 0 Z M 0 9 H 12 L 6 16 Z\"></path></svg>\r\n          }\r\n          {this.sortDirection == \"asc\" &&\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 12 16\"><path d=\"M 0 7 H 12 L 6 0 Z\"></path></svg>\r\n          }\r\n          {this.sortDirection == \"desc\" &&\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 12 16\"><path d=\"M 0 9 H 12 L 6 16 Z\"></path></svg>\r\n          }\r\n        </button>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n    /**\r\n     * @prop --background: Background of the toggle.\r\n     * @prop --background-checked: Background of the toggle when checked.\r\n     * @prop --handle-background:  Background of the handle.\r\n     * @prop --handle-background-checked:  Background of the handle when checked.\r\n     * @prop --border-radius: The radius of the background borders.\r\n     * @prop --handle-border-radius: The radius of the handle.\r\n    */\r\n\r\n    display: inline-block;\r\n    outline: none;\r\n    cursor: pointer;\r\n}\r\n\r\nbutton {\r\n    height: 1.5em;\r\n    width: 2.5em;\r\n    outline: none;\r\n    background-color: var(--background, #888);\r\n    border: 0;\r\n    border-radius: var(--border-radius, var(--dnn-controls-radius, 0.75em));\r\n    padding: 0.1em;\r\n    position: relative;\r\n    top: 0.25em;\r\n    margin: 0;\r\n    transition: background-color 300ms ease-in-out;\r\n    position: relative;\r\n    cursor: pointer;\r\n    &:hover, &:focus{\r\n        box-shadow: 0 0 2px 2px var(--dnn-color-primary);\r\n    }\r\n    &.checked{\r\n        background-color: var(--background-checked, var(--dnn-color-primary, blue));\r\n        .handle{\r\n            left: calc(1em + 4px);\r\n        }\r\n    }\r\n    &:disabled{\r\n        opacity: 0.5;\r\n        cursor: not-allowed;\r\n        box-shadow: none;\r\n    }\r\n    .handle{\r\n        transition: all 300ms ease-in-out;\r\n        background-color:white;\r\n        width: 1em;\r\n        height: 1em;\r\n        border-radius: var(--dnn-controls-radius, 50%);\r\n        position: absolute;\r\n        top: calc(50% - 0.5em);\r\n        left: 2px;\r\n    }\r\n}","import { Component, h, Element, Prop, Event, EventEmitter, Watch, Host } from \"@stencil/core\";\r\nimport { DnnToggleChangeEventDetail } from \"./toggle-interface\";\r\n\r\n\r\n@Component({\r\n    tag: \"dnn-toggle\",\r\n    styleUrl: \"dnn-toggle.scss\",\r\n    shadow: true\r\n})\r\nexport class DnnToggle {\r\n\r\n    @Element() element: HTMLDnnToggleElement;\r\n\r\n    /** If 'true' the toggle is checked (on). */\r\n    @Prop({mutable: true}) checked = false;\r\n\r\n    /** If 'true' the toggle is not be interacted with. */\r\n    @Prop() disabled = false;\r\n\r\n    /** Fires when the toggle changed */\r\n    @Event() checkChanged!: EventEmitter<DnnToggleChangeEventDetail>;\r\n\r\n    @Watch(\"checked\")\r\n    checkedChanged(isChecked: boolean){\r\n        this.checkChanged.emit({checked: isChecked});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Host>\r\n                <button disabled={this.disabled} class={{'checked': this.checked}}\r\n                    onClick={() => {\r\n                        if (!this.disabled) {\r\n                            this.checked = !this.checked;\r\n                        }\r\n                    }}\r\n                >\r\n                    <div class=\"handle\"></div>\r\n                </button>\r\n            </Host>\r\n        );\r\n    }\r\n}\r\n"]}