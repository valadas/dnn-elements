{"file":"dnn-button.entry.esm.js","mappings":";;AAAA,MAAM,YAAY,GAAG,+8DAA+8D;;MCUv9D,SAAS;EALtB;;;;;;;;IAWU,SAAI,GAAyC,SAAS,CAAC;;;;IAKvD,aAAQ,GAAY,KAAK,CAAC;;;;IAK1B,SAAI,GAAkC,QAAQ,CAAC;;;;IAK/C,YAAO,GAAa,KAAK,CAAC;;;;IAK1B,mBAAc,GAAY,KAAK,CAAC;;;;IAKhC,kBAAa,GAAY,IAAI,CAAC;;;;IAK9B,mBAAc,GAAY,gBAAgB,CAAC;;;;IAK3C,aAAQ,GAAY,KAAK,CAAC;IAEzB,iBAAY,GAAY,KAAK,CAAC;GA8ExC;EA1DC,gBAAgB;IACd,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;GAC5D;EAEO,aAAa;IACnB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IAClB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;GACvB;EAEO,YAAY;IAClB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IAClB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;GACtB;EAEO,WAAW;IACjB,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,YAAY,EAAC;MACrC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;MAClB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;KAC1B;GACF;EAEO,iBAAiB;IACvB,MAAM,OAAO,GAAa,EAAE,CAAC;IAC7B,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACxB,IAAI,IAAI,CAAC,QAAQ,EAAC;MAChB,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KAC1B;IACD,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,EAAC;MACzB,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACzB;IACD,OAAO,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;GAC1B;EAED,MAAM;IACJ,QACE,EAAC,IAAI,IAAC,KAAK,EAAE,IAAI,CAAC,iBAAiB,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,EAAC,gBAAgB,EAAE,IAAI,CAAC,QAAQ,GAAG,MAAM,GAAG,KAAK,EAAC,IACvH,cAAQ,KAAK,EAAC,QAAQ,EAAC,OAAO,EAAE,MAAM,IAAI,CAAC,WAAW,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,IAC/E,eAAa,CACN,EACR,IAAI,CAAC,OAAO;MACT,iBAAW,eAAe,EAAE,KAAK,EAAE,eAAe,EAAE,KAAK,IACvD,aAAI,IAAI,CAAC,cAAc,CAAK,EAC5B,WAAK,KAAK,EACR;UACE,OAAO,EAAE,MAAM;UACf,cAAc,EAAE,UAAU;SAC3B,IAED,kBAAY,IAAI,EAAC,SAAS,EAAC,KAAK,EAAE,EAAC,MAAM,EAAE,KAAK,EAAC,EAAE,OAAO,EAAE,MAAM,IAAI,CAAC,aAAa,EAAE,IAAG,IAAI,CAAC,cAAc,CAAc,EAC1H,kBAAY,IAAI,EAAC,WAAW,EAAC,KAAK,EAAE,EAAC,MAAM,EAAE,KAAK,EAAC,EAAE,OAAO,EAAE,MAAM,IAAI,CAAC,YAAY,EAAE,IAAG,IAAI,CAAC,aAAa,CAAc,CACtH,CACI,CAEX,EACP;GACH;;;;;;;","names":[],"sources":["./src/components/dnn-button/dnn-button.scss?tag=dnn-button&encapsulation=shadow","./src/components/dnn-button/dnn-button.tsx"],"sourcesContent":[":host {\n  --background-color: transparent;\n  --color: #333;\n  --border-size: 1px;\n  --border-color: var(--backround-color);\n  --border-radius: var(--dnn-controls-radius, 5px);\n  --padding: var(--dnn-controls-padding, 5px);\n  display: inline-block;\n  width: auto;\n}\n\n:host(.disabled){\n  pointer-events: none;\n}\n\n:host(.primary){\n  --background-color: var(--dnn-color-primary, blue);\n  --color: var(--dnn-color-primary-contrast, white);\n  --focus-color: var(--background-color);\n}\n\n:host(.primary.reversed){\n  --background-color: var(--dnn-color-primary-contrast, white);\n  --color: var(--dnn-color-primary, blue);\n  --border-color: var(--dnn-color-primary, blue);\n  --focus-color: var(--color);\n}\n\n:host(.secondary){\n  --background-color: var(--dnn-color-secondary, green);\n  --color: var(--dnn-color-secondary-contrast, white);\n  --focus-color: var(--background-color);\n}\n\n:host(.secondary.reversed){\n  --background-color: var(--dnn-color-secondary-contrast, white);\n  --color: var(--dnn-color-secondary, blue);\n  --border-color: var(--dnn-color-secondary, blue);\n  --focus-color: var(--color);\n}\n\n:host(.tertiary){\n  --background-color: var(--dnn-color-tertiary, yellow);\n  --color: var(--dnn-color-tertiary-contrast, black);\n  --focus-color: var(--background-color);\n}\n\n:host(.tertiary.reversed){\n  --background-color: var(--dnn-color-tertiary-contrast, white);\n  --color: var(--dnn-color-tertiary, blue);\n  --border-color: var(--dnn-color-tertiary, blue);\n  --focus-color: var(--color);\n}\n\n:host(.hydrated){\n  button{\n    border: var(--border-size) solid var(--border-color);\n    border-radius: var(--border-radius);\n    padding: var(--padding) calc(var(--padding) * 2);\n    background-color: transparent;\n    background-color: var(--background-color);\n    color: var(--color);\n    outline: none;\n    &:focus, &:hover{\n      box-shadow: 0 0 2px 2px var(--focus-color);\n    }\n  }\n}\n\n:host(:disabled, [disabled]){\n  button{\n    pointer-events: none;\n    opacity: 0.5;\n  }\n}\n\n:host(.small){\n  button{\n    padding: calc(var(--padding) / 2) var(--padding);\n    font-size: 0.7em;\n  }\n}\n\n:host(.large){\n  button{\n    padding: calc(var(--padding) * 1.5) calc(var(--padding) * 3);\n    font-size: 1.2em;\n  }\n}\n\nbutton{\n  height: 100%;\n  width: 100%;\n  cursor: pointer;\n}","import { Component, Element, Host, h, Prop, State, Event, EventEmitter } from '@stencil/core';\n\n/**\n * @slot Content of the button\n */\n@Component({\n  tag: 'dnn-button',\n  styleUrl: 'dnn-button.scss',\n  shadow: true\n})\nexport class DnnButton {\n\n  /**\n   * Optional button style,\n   * can be either primary, secondary or tertiary and defaults to primary if not specified\n   */\n  @Prop() type: 'primary' | 'secondary' | 'tertiary' = 'primary';\n\n  /**\n   * Optionally reverses the button style.\n   */\n  @Prop() reversed: boolean = false;\n\n  /**\n   * Optionally sets the button size, small normal or large, defaults to normal\n   */\n  @Prop() size?: 'small' | 'normal' | 'large' = 'normal';\n\n  /**\n   * Optionally add a confirmation dialog before firing the action.\n   */\n  @Prop() confirm?: boolean = false;\n\n  /**\n   * The text of the yes button for confirmation.\n   */\n  @Prop() confirmYesText?: string = \"Yes\";\n\n  /**\n   * The text of the no button for confirmation.\n   */\n  @Prop() confirmNoText?: string = \"No\";\n\n  /**\n   * The text of the confirmation message;\n   */\n  @Prop() confirmMessage?: string = \"Are you sure ?\";\n  \n  /**\n   * Disables the button\n   */\n  @Prop() disabled: boolean = false;\n\n  @State() modalVisible: boolean = false;\n\n  @Element() el!: HTMLDnnButtonElement;\n\n  private modal!: HTMLDnnModalElement;\n\n  /** \n   * Fires when confirm is true and the user confirms the action.\n  */\n  @Event({\n    bubbles: true,\n    cancelable: true,\n    composed: true\n  }) confirmed: EventEmitter;\n\n  /**\n   * Fires when confirm is true and the user cancels the action.\n   */\n  @Event({bubbles: true}) canceled: EventEmitter;\n\n  componentDidLoad(){\n    this.modal = this.el.shadowRoot.querySelector('dnn-modal');\n  }\n\n  private handleConfirm(){\n    this.modal.hide();\n    this.modalVisible = false;\n    this.confirmed.emit();\n  }\n\n  private handleCancel(){\n    this.modal.hide();\n    this.modalVisible = false;\n    this.canceled.emit();\n  }\n  \n  private handleClick(): void {\n    if (this.confirm && !this.modalVisible){\n      this.modal.show();\n      this.modalVisible = true;\n    }\n  }\n\n  private getElementClasses(): string | { [className: string]: boolean; } {\n    const classes: string[] = [];\n    classes.push(this.type);\n    if (this.reversed){\n      classes.push('reversed');\n    }\n    if (this.size !== 'normal'){\n      classes.push(this.size);\n    }\n    return classes.join(' ');\n  }\n\n  render() {\n    return (\n      <Host class={this.getElementClasses()} disabled={this.disabled} style={{'pointer-events': this.disabled ? 'none' : 'all'}}>\n        <button class=\"button\" onClick={() => this.handleClick()} disabled={this.disabled}>\n          <slot></slot>\n        </button>\n        {this.confirm &&\n            <dnn-modal showCloseButton={false} backdropDismiss={false}>\n              <p>{this.confirmMessage}</p>\n              <div style={\n                {\n                  display: 'flex',\n                  justifyContent: 'flex-end'\n                }\n              }>\n                <dnn-button type='primary' style={{margin: '5px'}} onClick={() => this.handleConfirm()}>{this.confirmYesText}</dnn-button>\n                <dnn-button type='secondary' style={{margin: '5px'}} onClick={() => this.handleCancel()}>{this.confirmNoText}</dnn-button>\n              </div>\n            </dnn-modal>\n          }\n      </Host>\n    );\n  }\n}\n"],"version":3}