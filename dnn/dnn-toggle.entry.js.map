{"file":"dnn-toggle.entry.esm.js","mappings":";;AAAA,MAAM,YAAY,GAAG,8zBAA8zB;;MCSt0B,SAAS;EALtB;;;;IAU2B,YAAO,GAAG,KAAK,CAAC;;IAG/B,aAAQ,GAAG,KAAK,CAAC;GAyB5B;EAnBG,cAAc,CAAC,SAAkB;IAC7B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,OAAO,EAAE,SAAS,EAAC,CAAC,CAAC;GAChD;EAED,MAAM;IACF,QACI,EAAC,IAAI,QACD,cAAQ,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,EAAC,SAAS,EAAE,IAAI,CAAC,OAAO,EAAC,EAC7D,OAAO,EAAE;QACL,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;UAChB,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;SAChC;OACJ,IAED,WAAK,KAAK,EAAC,QAAQ,GAAO,CACrB,CACN,EACT;GACL;;;;;;;;;;","names":[],"sources":["./src/components/dnn-toggle/dnn-toggle.scss?tag=dnn-toggle&encapsulation=shadow","./src/components/dnn-toggle/dnn-toggle.tsx"],"sourcesContent":[":host {\n    /**\n     * @prop --background: Background of the toggle.\n     * @prop --background-checked: Background of the toggle when checked.\n     * @prop --handle-background:  Background of the handle.\n     * @prop --handle-background-checked:  Background of the handle when checked.\n     * @prop --border-radius: The radius of the background borders.\n     * @prop --handle-border-radius: The radius of the handle.\n    */\n\n    display: inline-block;\n    outline: none;\n    cursor: pointer;\n}\n\nbutton {\n    height: 1.5em;\n    width: 2.5em;\n    outline: none;\n    background-color: var(--background, #888);\n    border: 0;\n    border-radius: var(--border-radius, var(--dnn-controls-radius, 0.75em));\n    padding: 0.1em;\n    position: relative;\n    margin: 0;\n    transition: background-color 300ms ease-in-out;\n    position: relative;\n    cursor: pointer;\n    &:hover, &:focus{\n        box-shadow: 0 0 2px 2px var(--dnn-color-primary);\n    }\n    &.checked{\n        background-color: var(--background-checked, var(--dnn-color-primary, blue));\n        .handle{\n            left: calc(1em + 4px);\n        }\n    }\n    &:disabled{\n        opacity: 0.5;\n        cursor: not-allowed;\n        box-shadow: none;\n    }\n    .handle{\n        transition: all 300ms ease-in-out;\n        background-color:white;\n        width: 1em;\n        height: 1em;\n        border-radius: var(--handle-border-radius, var(--dnn-controls-radius, 50%));\n        position: absolute;\n        top: calc(50% - 0.5em);\n        left: 2px;\n    }\n}","import { Component, h, Element, Prop, Event, EventEmitter, Watch, Host } from \"@stencil/core\";\nimport { DnnToggleChangeEventDetail } from \"./toggle-interface\";\n\n\n@Component({\n    tag: \"dnn-toggle\",\n    styleUrl: \"dnn-toggle.scss\",\n    shadow: true\n})\nexport class DnnToggle {\n\n    @Element() element: HTMLDnnToggleElement;\n\n    /** If 'true' the toggle is checked (on). */\n    @Prop({mutable: true}) checked = false;\n\n    /** If 'true' the toggle is not be interacted with. */\n    @Prop() disabled = false;\n\n    /** Fires when the toggle changed */\n    @Event() checkChanged!: EventEmitter<DnnToggleChangeEventDetail>;\n\n    @Watch(\"checked\")\n    checkedChanged(isChecked: boolean){\n        this.checkChanged.emit({checked: isChecked});\n    }\n\n    render() {\n        return (\n            <Host>\n                <button disabled={this.disabled} class={{'checked': this.checked}}\n                    onClick={() => {\n                        if (!this.disabled) {\n                            this.checked = !this.checked;\n                        }\n                    }}\n                >\n                    <div class=\"handle\"></div>\n                </button>\n            </Host>\n        );\n    }\n}\n"],"version":3}