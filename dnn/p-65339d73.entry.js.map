{"version":3,"sources":["src/components/dnn-button/dnn-button.scss?tag=dnn-button&encapsulation=shadow","src/components/dnn-button/dnn-button.tsx","src/components/dnn-checkbox/dnn-checkbox.scss?tag=dnn-checkbox&encapsulation=shadow","src/components/dnn-checkbox/dnn-checkbox.tsx","src/components/dnn-chevron/dnn-chevron.scss?tag=dnn-chevron&encapsulation=shadow","src/components/dnn-chevron/dnn-chevron.tsx","src/components/dnn-collapsible/dnn-collapsible.scss?tag=dnn-collapsible&encapsulation=shadow","src/components/dnn-collapsible/dnn-collapsible.tsx","src/utilities/colorInfo.ts","src/components/dnn-color-picker/dnn-color-picker.scss?tag=dnn-color-picker&encapsulation=shadow","src/components/dnn-color-picker/dnn-color-picker.tsx","src/components/dnn-dropzone/dnn-dropzone.scss?tag=dnn-dropzone&encapsulation=shadow","src/components/dnn-dropzone/dnn-dropzone.tsx","src/components/dnn-image-cropper/CornerType.ts","src/utilities/mouseUtilities.ts","src/components/dnn-image-cropper/dnn-image-cropper.scss?tag=dnn-image-cropper&encapsulation=shadow","src/components/dnn-image-cropper/dnn-image-cropper.tsx","src/components/dnn-modal/dnn-modal.scss?tag=dnn-modal&encapsulation=shadow","src/components/dnn-modal/dnn-modal.tsx","src/components/dnn-permissions-grid/dnn-permissions-grid.scss?tag=dnn-permissions-grid&encapsulation=shadow","src/components/dnn-permissions-grid/dnn-permissions-grid.tsx","src/components/dnn-searchbox/dnn-searchbox.scss?tag=dnn-searchbox&encapsulation=shadow","src/components/dnn-searchbox/dnn-searchbox.tsx","src/components/dnn-sort-icon/dnn-sort-icon.scss?tag=dnn-sort-icon&encapsulation=shadow","src/components/dnn-sort-icon/dnn-sort-icon.tsx","src/components/dnn-tab/dnn-tab.scss?tag=dnn-tab&encapsulation=shadow","src/components/dnn-tab/dnn-tab.tsx","src/components/dnn-tabs/dnn-tabs.scss?tag=dnn-tabs&encapsulation=shadow","src/components/dnn-tabs/dnn-tabs.tsx","src/components/dnn-toggle/dnn-toggle.scss?tag=dnn-toggle&encapsulation=shadow","src/components/dnn-toggle/dnn-toggle.tsx","src/components/dnn-treeview-item/dnn-treeview-item.scss?tag=dnn-treeview-item&encapsulation=shadow","src/components/dnn-treeview-item/dnn-treeview-item.tsx","src/components/dnn-vertical-overflow-menu/dnn-vertical-overflow-menu.scss?tag=dnn-vertical-overflow-menu&encapsulation=shadow","src/components/dnn-vertical-overflow-menu/dnn-vertical-overflow-menu.tsx","src/components/dnn-vertical-splitview/dnn-vertical-splitview.scss?tag=dnn-vertical-splitview&encapsulation=shadow","src/components/dnn-vertical-splitview/dnn-vertical-splitview.tsx"],"names":["dnnButtonCss","DnnButton","[object Object]","hostRef","this","type","reversed","size","confirm","confirmYesText","confirmNoText","confirmMessage","disabled","modalVisible","modal","el","shadowRoot","querySelector","hide","confirmed","emit","canceled","show","classes","push","join","h","Host","class","getElementClasses","style","pointer-events","onClick","handleClick","showCloseButton","backdropDismiss","display","justifyContent","margin","handleConfirm","handleCancel","dnnCheckboxCss","DnnCheckbox","checked","useIntermediate","checkedchange","changeState","name","xmlns","height","viewBox","width","fill","d","enable-background","htmlFor","id","dnnChevronCss","DnnChevron","expandText","collapseText","expanded","newValue","changed","aria-label","dnnCollapsibleCss","DnnCollapsible","transitionDuration","requestAnimationFrame","updateSize","container","maxHeight","scrollHeight","setTimeout","dnnCollapsibleHeightChanged","transition","ref","ColorInfo","_hue","_saturation","_lightness","hue","value","saturation","lightness","red","getRGB","setHSL","green","blue","hex","r","getHex","g","b","parseInt","substr","contrastColor","brightness","chroma","Math","abs","quadrant","offset","bias","round","min","max","diff","s","l","toString","length","dnnColorPickerCss","DnnColorPicker","color","colorBoxHeight","rgbDisplay","hslDisplay","hexDisplay","handleSaturationLightnessMouseDown","e","preventDefault","handleDragLightnessSaturation","window","addEventListener","handleSaturationLightnessMouseUp","rect","saturationLightnessBox","getBoundingClientRect","x","clientX","left","y","clientY","top","newColor","currentColor","removeEventListener","handleHueMouseDown","handleDragHue","handleHueMouseUp","hueRange","handleComponentValueChange","channel","target","isNaN","handleHSLChange","component","handleSaturationLightnessKeyDown","shiftKey","key","handleHueKeyDown","colorChanged","colorChangedHandler","handleHexChange","setProperty","getDoublet","valueString","toUpperCase","match","element","backgroundColor","onMouseDown","bind","role","aria-valuemin","aria-valuemax","aria-valuetext","bottom","onKeyDown","boxShadow","getContrast","aria-valuenow","step","onChange","switchColorMode","__decorate","Debounce","dnnDropzoneCss","DnnDropzone","resx","dragAndDropFile","capture","or","takePicture","uploadFile","allowCameraMode","captureQuality","canTakeSnapshots","takingPicture","handleDragOver","event","stopPropagation","dataTransfer","dropEffect","dropzone","classList","add","handleDrop","dropEvent","files","hasInvalidExtensions","fileList","getFilesFromFileList","filesSelected","checkIfBrowserCanTakeSnapshots","then","result","allowedExtensions","undefined","extensionsWithDots","map","extensionsList","fileInput","accept","Promise","resolve","mediaDevices","navigator","enumerateDevices","devices","some","device","kind","index","file","hasInvalid","fileIndex","regex","fileExtension","exec","includes","getUserMedia","video","audio","stream","videoPreview","srcObject","play","videoSettings","getVideoTracks","getSettings","catch","error","alert","canvas","document","createElement","context","getContext","drawImage","toBlob","blob","File","onDragOver","onDrop","onDragLeave","remove","_a","_b","handleUploadButton","_c","_d","takeSnapshot","cx","cy","_e","applySnapshot","_f","CornerType","getMovementFromEvent","previousTouch","movementX","movementY","MouseEvent","TouchEvent","touch","touches","pageX","pageY","dnnImageCropperCss","DnnImageCropper","imageTooSmall","modalCloseText","quality","preventUndersized","handleCropMouseDown","className","handleImageCropFinished","handleCropDrag","handleNwMouseMove","handleNeMouseMove","handleSeMouseMove","handleSwMouseMove","_ev","emitImage","handleCornerDrag","nw","ne","se","sw","corner","isMouseStillInTarget","getCornerLeftTop","newWidth","newHeight","orientation","wantedRatio","cropRect","crop","imageRect","image","topOffset","offsetTop","leftOffset","offsetLeft","zoomRatio","naturalWidth","ev","newLeft","newTop","setView","newView","views","host","querySelectorAll","forEach","v","noPictureView","hasPictureView","view","imageRatio","wantedHeight","wantedWidth","initCrop","src","toDataURL","split","reader","FileReader","onload","readerLoadEvent","img","Image","imageTooSmallModal","ctx","setImage","readAsDataURL","naturalHeight","dataUrl","generateCroppedImage","imageCropChanged","desiredWidth","desiredHeight","clearRect","inside","mouseX","mouseY","corners","cornerRect","onTouchStart","onFilesSelected","handleNewFile","detail","close-text","replace","dnnModalCss","DnnModal","closeText","visible","dismissed","handleDismiss","handleBackdropClick","dnnPermissionsGridCss","DnnPermissionsGrid","Add","AllRoles","FilterByGroup","GlobalRoles","Role","RolePermissions","SelectRole","User","UserPermissions","foundUsers","selectedRoleGroupId","userCollapsible","dismissUserResults","disconnectedCallback","dropdownRect","roleDropDown","right","dropdown","selectedIndex","Number","options","roleId","roles","filter","RoleId","permissions","Object","assign","rolePermissions","default","locked","roleName","RoleName","permissionsChanged","pickedUser","userPermissions","displayName","userId","userQuery","filteredRoles","rp","IsSystemRole","RoleGroupId","rolePermission","permissionDefinition","item","permission","permissionId","opacity","allowAccess","use-intermediate","onCheckedchange","handleRoleChanged","slot","permissionName","userPermission","handleUserChanged","newRolePermission","p","fullControl","permissionCode","permissionKey","u","newUserPermission","up","query","userSearchQueryChanged","firstButton","focus","button","nextButton","nextElementSibling","previousButton","previousElementSibling","searchedUser","fu","getRoles","handleRoleGroupChanged","selected","roleGroups","roleGroup","addRole","permissionDefinitions","renderRoleCheckBox","removeRole","placeholder","debounced","onQueryChanged","handleQueryChanged","handleSearchUserFieldKeyDown","getFilteredUsers","handleSearchedUserKeyDown","handleUserPicked","addUser","renderUserCheckBox","removeUser","dnnSearchboxCss","DnnSearchbox","debouncedHandleQueryChanged","queryChanged","onInput","dnnSortIconCss","DnnSortIcon","sortDirection","sortChanged","active","changeSort","dnnTabCss","DnnTab","dnnTabsCss","DnnTabs","tabTitles","selectedTabTitle","updateTitles","showFirstTab","assignedElements","tabs","getTabs","tab","tabTitle","showTab","dnnToggleCss","DnnToggle","isChecked","checkChanged","dnnTreeviewItemCss","DnnTreeviewItem","hasChildren","expander","collapsible","child","childElement","children","count","userExpanded","userCollapsed","toggleCollapse","dnnVerticalOverflowMenuCss","DnnVerticalOverflowMenu","showDropdownButton","showDropdownMenu","previousMenuWidth","moveItemsToDropDownIfNecessery","resizeObserver","ResizeObserver","entries","entry","contentRect","moveItemsToMenuIfPossible","observe","menuItems","Array","from","menu","availableWidth","neededWidth","parseFloat","getComputedStyle","fontSize","getFullWidth","lastItem","hasChildNodes","firstItem","styles","marginLeft","marginRight","paddingLeft","paddingRight","contentHeight","items","emHeight","gapsHeight","marginHeight","dismissMenu","buttonRect","toggleOverflowMenu","dnnVerticalSplitviewCss","DnnVerticalSplitview","splitterWidth","splitWidthPercentage","leftWidth","rightWidth","panes","pane","splitter","fullWidth","widthChanged","handleDrag","handleDragFinished","newPercentage","handleMouseDown","handleKeyDown","minWidth"],"mappings":"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","sourcesContent":[":host {\n  --background-color: transparent;\n  --color: #333;\n  --border-size: 1px;\n  --border-color: var(--backround-color);\n  --border-radius: var(--dnn-controls-radius, 5px);\n  --padding: var(--dnn-controls-padding, 5px);\n  display: inline-block;\n  width: auto;\n}\n\n:host(.disabled){\n  pointer-events: none;\n}\n\n:host(.primary){\n  --background-color: var(--dnn-color-primary, blue);\n  --color: var(--dnn-color-primary-contrast, white);\n  --focus-color: var(--background-color);\n}\n\n:host(.primary.reversed){\n  --background-color: var(--dnn-color-primary-contrast, white);\n  --color: var(--dnn-color-primary, blue);\n  --border-color: var(--dnn-color-primary, blue);\n  --focus-color: var(--color);\n}\n\n:host(.secondary){\n  --background-color: var(--dnn-color-secondary, green);\n  --color: var(--dnn-color-secondary-contrast, white);\n  --focus-color: var(--background-color);\n}\n\n:host(.secondary.reversed){\n  --background-color: var(--dnn-color-secondary-contrast, white);\n  --color: var(--dnn-color-secondary, blue);\n  --border-color: var(--dnn-color-secondary, blue);\n  --focus-color: var(--color);\n}\n\n:host(.tertiary){\n  --background-color: var(--dnn-color-tertiary, yellow);\n  --color: var(--dnn-color-tertiary-contrast, black);\n  --focus-color: var(--background-color);\n}\n\n:host(.tertiary.reversed){\n  --background-color: var(--dnn-color-tertiary-contrast, white);\n  --color: var(--dnn-color-tertiary, blue);\n  --border-color: var(--dnn-color-tertiary, blue);\n  --focus-color: var(--color);\n}\n\n:host(.hydrated){\n  button{\n    border: var(--border-size) solid var(--border-color);\n    border-radius: var(--border-radius);\n    padding: var(--padding) calc(var(--padding) * 2);\n    background-color: transparent;\n    background-color: var(--background-color);\n    color: var(--color);\n    outline: none;\n    &:focus, &:hover{\n      box-shadow: 0 0 2px 2px var(--focus-color);\n    }\n  }\n}\n\n:host(:disabled, [disabled]){\n  button{\n    pointer-events: none;\n    opacity: 0.5;\n  }\n}\n\n:host(.small){\n  button{\n    padding: calc(var(--padding) / 2) var(--padding);\n    font-size: 0.7em;\n  }\n}\n\n:host(.large){\n  button{\n    padding: calc(var(--padding) * 1.5) calc(var(--padding) * 3);\n    font-size: 1.2em;\n  }\n}\n\nbutton{\n  height: 100%;\n  width: 100%;\n  cursor: pointer;\n}","import { Component, Element, Host, h, Prop, State, Event, EventEmitter } from '@stencil/core';\n\n/**\n * @slot Content of the button\n */\n@Component({\n  tag: 'dnn-button',\n  styleUrl: 'dnn-button.scss',\n  shadow: true\n})\nexport class DnnButton {\n\n  /**\n   * Optional button style,\n   * can be either primary, secondary or tertiary and defaults to primary if not specified\n   */\n  @Prop() type: 'primary' | 'secondary' | 'tertiary' = 'primary';\n\n  /**\n   * Optionally reverses the button style.\n   */\n  @Prop() reversed: boolean = false;\n\n  /**\n   * Optionally sets the button size, small normal or large, defaults to normal\n   */\n  @Prop() size?: 'small' | 'normal' | 'large' = 'normal';\n\n  /**\n   * Optionally add a confirmation dialog before firing the action.\n   */\n  @Prop() confirm?: boolean = false;\n\n  /**\n   * The text of the yes button for confirmation.\n   */\n  @Prop() confirmYesText?: string = \"Yes\";\n\n  /**\n   * The text of the no button for confirmation.\n   */\n  @Prop() confirmNoText?: string = \"No\";\n\n  /**\n   * The text of the confirmation message;\n   */\n  @Prop() confirmMessage?: string = \"Are you sure ?\";\n  \n  /**\n   * Disables the button\n   */\n  @Prop() disabled: boolean = false;\n\n  @State() modalVisible: boolean = false;\n\n  @Element() el!: HTMLDnnButtonElement;\n\n  private modal!: HTMLDnnModalElement;\n\n  /** \n   * Fires when confirm is true and the user confirms the action.\n  */\n  @Event({\n    bubbles: true,\n    cancelable: true,\n    composed: true\n  }) confirmed: EventEmitter;\n\n  /**\n   * Fires when confirm is true and the user cancels the action.\n   */\n  @Event({bubbles: true}) canceled: EventEmitter;\n\n  componentDidLoad(){\n    this.modal = this.el.shadowRoot.querySelector('dnn-modal');\n  }\n\n  private handleConfirm(){\n    this.modal.hide();\n    this.modalVisible = false;\n    this.confirmed.emit();\n  }\n\n  private handleCancel(){\n    this.modal.hide();\n    this.modalVisible = false;\n    this.canceled.emit();\n  }\n  \n  private handleClick(): void {\n    if (this.confirm && !this.modalVisible){\n      this.modal.show();\n      this.modalVisible = true;\n    }\n  }\n\n  private getElementClasses(): string | { [className: string]: boolean; } {\n    const classes: string[] = [];\n    classes.push(this.type);\n    if (this.reversed){\n      classes.push('reversed');\n    }\n    if (this.size !== 'normal'){\n      classes.push(this.size);\n    }\n    return classes.join(' ');\n  }\n\n  render() {\n    return (\n      <Host class={this.getElementClasses()} disabled={this.disabled} style={{'pointer-events': this.disabled ? 'none' : 'all'}}>\n        <button class=\"button\" onClick={() => this.handleClick()} disabled={this.disabled}>\n          <slot></slot>\n        </button>\n        {this.confirm &&\n            <dnn-modal showCloseButton={false} backdropDismiss={false}>\n              <p>{this.confirmMessage}</p>\n              <div style={\n                {\n                  display: 'flex',\n                  justifyContent: 'flex-end'\n                }\n              }>\n                <dnn-button type='primary' style={{margin: '5px'}} onClick={() => this.handleConfirm()}>{this.confirmYesText}</dnn-button>\n                <dnn-button type='secondary' style={{margin: '5px'}} onClick={() => this.handleCancel()}>{this.confirmNoText}</dnn-button>\n              </div>\n            </dnn-modal>\n          }\n      </Host>\n    );\n  }\n}\n",":host {\n    /**\n    * @prop --focus-color: The color to outline the checkbox when hovered or focused, default to the dnn primary color.\n    */\n  --focus-color: var(--dnn-color-primary, #3792ED);\n  display: inline-flex;\n  align-items: center;\n  gap: 0.25rem;\n  margin: 3px;\n}\nbutton{\n  background-color: transparent;\n  border: 0;\n  padding: 0;\n  margin: 0;\n  outline: none;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  .unchecked, .checked, .intermediate{\n    display: none;\n  }\n  &.checked .checked, &.unchecked .unchecked, &.intermediate .intermediate{\n    display: block;\n  }\n  svg.undefined{\n    opacity: 0.45;\n  }\n  &:focus{\n    box-shadow: 0 0 2px 2px var(--focus-color);\n  }\n}","import { Component, Element, Host, h, Prop, Event, EventEmitter } from '@stencil/core';\n\n/**\n * @slot - The label for the checkbox.\n * @slot checkedicon - Allows overriding the default checked icon.\n * @slot uncheckedicon - Allows overriding the unchecked icon.\n * @slot intermediateicon - If intermadiate state is used, allows overriding its icon.\n */\n@Component({\n  tag: 'dnn-checkbox',\n  styleUrl: 'dnn-checkbox.scss',\n  shadow: true,\n})\nexport class DnnCheckbox {\n  @Element() el: HTMLDnnCheckboxElement;\n\n  /** Defines if the checkbox is checked (true) or unchecked (false) or in an intermediate state (undefined) */\n  @Prop({mutable: true}) checked: \"checked\" | \"unchecked\" | \"intermediate\" = \"unchecked\";\n\n  /** Defines if clicking the checkbox will go through the intermediate state between checked and unchecked (tri-state) */\n  @Prop() useIntermediate: boolean = false;\n\n  /** The value for this checkbox (not to be confused with its checked state). */\n  @Prop() value: string;\n\n  /** Fires up when the checkbox checked property changes. */\n  @Event() checkedchange: EventEmitter<\"checked\" | \"unchecked\" | \"intermediate\">;\n\n  private changeState(): void {\n    if (!this.useIntermediate){\n      switch (this.checked) {\n        case \"checked\":\n          this.checked = \"unchecked\";\n          break;\n        case \"unchecked\":\n        case \"intermediate\":\n          this.checked = \"checked\";\n          break;\n        default:\n          break;\n      }\n      this.checkedchange.emit(this.checked);\n      return;\n    }\n    switch (this.checked) {\n      case \"checked\":\n        this.checked = \"intermediate\";\n        break;\n      case \"intermediate\":\n        this.checked = \"unchecked\";\n        break;\n      case \"unchecked\":\n        this.checked = \"checked\";\n        break;\n      default:\n        break;\n    }\n    this.checkedchange.emit(this.checked);\n  }\n\n  render() {\n    return (\n      <Host>\n        <button\n          class={`icon ${this.checked}`}\n          onClick={() => this.changeState()}\n        >\n          <div class=\"unchecked\">\n            <slot name=\"uncheckedicon\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"/></svg>\n            </slot>\n          </div>\n          <div class=\"checked\">\n            <slot name=\"checkedicon\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"/></svg>\n            </slot>\n          </div>\n          <div class=\"intermediate\">\n            <slot name=\"intermediateicon\">\n              <svg class=\"undefined\" xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><g><rect fill=\"none\" height=\"24\" width=\"24\"/></g><g><g><g><path d=\"M19,3H5C3.9,3,3,3.9,3,5v14c0,1.1,0.9,2,2,2h14c1.1,0,2-0.9,2-2V5C21,3.9,20.1,3,19,3z M17,13H7v-2h10V13z\"/></g></g></g></svg>\n            </slot>\n          </div>\n        </button>\n        <label htmlFor={this.el.id} onClick={() => this.changeState()}><slot></slot></label>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: inline-block;\n}\nbutton{\n  border: none;\n  padding: 0px;\n  margin: 0px;\n  min-width: 15px;\n  min-height: 15px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: transparent;\n  outline: none;\n}\nsvg{\n  height:2em;\n  width:2em;\n  transition: all 300ms ease-in-out;\n}\n\n// FOCUS\nbutton:focus, button:hover{\n  svg{\n    color: var(--dnn-color-primary);\n  }\n}\n\n// EXPANDED\n:host([expanded]){\n  svg{\n    transform: rotate(90deg);\n  }\n}","import { Component, Host, h, Prop, Event } from '@stencil/core';\nimport { EventEmitter } from '@stencil/core';\nimport { Watch } from '@stencil/core';\n\n@Component({\n  tag: 'dnn-chevron',\n  styleUrl: 'dnn-chevron.scss',\n  shadow: true\n})\nexport class DnnChevron {\n\n  /** Expand text for screen readers */\n  @Prop() expandText?: string = \"expand\";\n\n  /** Collapse text for screen readers */\n  @Prop() collapseText?: string = \"collapse\";\n\n  /** Is the chevron expanded */\n  @Prop({mutable: true, reflect: true}) expanded?: boolean = false;\n\n  /** Fires up when the expanded status changes */\n  @Event() changed: EventEmitter;\n\n  @Watch('expanded')\n  handleExpandedChanged(newValue: boolean) {\n    this.changed.emit(newValue);\n  }\n\n  render() {\n    return (\n      <Host>\n        <button aria-label={this.expanded ? this.collapseText : this.expandText}\n          onClick={() => this.expanded = !this.expanded}\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"/></svg>\n        </button>\n      </Host>\n    );\n  }\n\n}\n",":host {\n  display: block;\n}\n#container{\n  max-height:0;\n  overflow: hidden;\n  transition: max-height 300ms ease-in-out;\n}","import { Component, Host, h, Prop, Element, Event, EventEmitter, Watch, Listen, Method } from '@stencil/core';\n\n@Component({\n  tag: \"dnn-collapsible\",\n  styleUrl: \"dnn-collapsible.scss\",\n  shadow: true\n})\nexport class DnnCollapsible {\n\n  @Element() el: HTMLDnnCollapsibleElement;\n\n  /** Defines if the panel is expanded or not. */\n  @Prop({reflect: true}) expanded: boolean = false;\n\n  /** Defines the transition time in ms, defaults to 150ms */\n  @Prop() transitionDuration?: number = 150;\n\n  /** Fires whenever the collapsible height has changed */\n  @Event({bubbles: true, composed: true}) dnnCollapsibleHeightChanged: EventEmitter<void>;\n\n  @Listen(\"dnnCollapsibleHeightChanged\")\n  handleHeightChanged(){\n    requestAnimationFrame(() => {\n      this.updateSize();\n    })\n  }\n\n  /**\n   * Updates the component height, use to update after a slot content changes.\n   */\n  @Method()\n  async updateSize() {\n    if (this.expanded){\n        requestAnimationFrame(() => {\n          this.container.style.maxHeight = `${this.container.scrollHeight}px`;\n        });\n        setTimeout(() => {\n          this.container.style.maxHeight = \"none\";\n        }, this.transitionDuration);\n    }\n  }\n  \n  @Watch(\"expanded\")\n  handledExpandedChanged(expanded: boolean){\n    if (expanded){\n      this.updateSize();\n    }\n    else{\n      requestAnimationFrame(() => {\n        this.container.style.maxHeight = `${this.container.scrollHeight}px`;\n        requestAnimationFrame(() => {\n          this.container.style.maxHeight = \"0px\";\n        });\n      });\n    }\n    setTimeout(() => {\n      requestAnimationFrame(() => {\n        this.dnnCollapsibleHeightChanged.emit();\n      });\n    }, this.transitionDuration);\n  }\n  \n  private container: HTMLDivElement;\n\n  componentDidLoad() {\n    this.container.style.transition = `max-height ${this.transitionDuration}ms ease-in-out`;\n  }\n\n  render() {\n    return (\n      <Host>\n        <div\n          id=\"container\"\n          class={this.expanded && \"expanded\"}\n          ref={el => this.container = el}\n          style={{transition: `max-height ${this.transitionDuration}ms ease-in-out`}}\n        >\n            <slot></slot>\n        </div>\n      </Host>\n    );\n  }\n\n}\n","/** Color utility class with hsl and rgb converters\r\n * based on math at https://en.wikipedia.org/wiki/HSL_and_HSV\r\n * @copyright Copyright (c) .NET Foundation. All rights reserved.\r\n * @license MIT \r\n */\r\n\r\nexport class ColorInfo{\r\n\r\n    private _hue: number = 0;\r\n    /** gets the color hue\r\n     * @returns a number between 0 and 359, could contain decimals\r\n     */\r\n    get hue() { return this._hue; }\r\n    set hue(value: number){\r\n        if (value < 0) { value = 0; }\r\n        if (value > 359) { value = 359; }\r\n        this._hue = value;\r\n    }\r\n\r\n    private _saturation: number = 0;\r\n    /** gets the color saturation\r\n     * @returns a number between 0 and 1, could contain decimals\r\n    */\r\n    get saturation() { return this._saturation; }\r\n    set saturation(value: number) {\r\n        if (value < 0) { value = 0; }\r\n        if (value > 1) { value = 1; }\r\n        this._saturation = value;\r\n    }\r\n\r\n    private _lightness: number = 0;\r\n    /** gets the color lightness\r\n     * @returns a number between 0 and 1, could contain decimals\r\n     */\r\n    get lightness() { return this._lightness; }\r\n    set lightness(value: number) {\r\n        if (value < 0) { value = 0; }\r\n        if (value > 1) { value = 1; }\r\n        this._lightness = value;\r\n    }\r\n\r\n    /** gets or sets the red component \r\n     * @returns an integer between 0 and 255\r\n    */\r\n    get red() {\r\n        return this.getRGB().red;\r\n    }\r\n    set red(value) {\r\n        this.setHSL(value, this.green, this.blue);\r\n    }\r\n\r\n    /** gets or sets the green component\r\n     * @returns an integer between 0 and 255\r\n     */\r\n    get green() {\r\n        return this.getRGB().green;\r\n    }\r\n    set green(value: number) {\r\n        this.setHSL(this.red, value, this.blue);\r\n    }\r\n\r\n    /** gets or sets the blue component\r\n     * @returns an integer between 0 and 255\r\n     */\r\n    get blue() {\r\n        return this.getRGB().blue;\r\n    }\r\n    set blue(value: number) {\r\n        this.setHSL(this.red, this.green, value);\r\n    }\r\n\r\n    /** gets or sets the hex color value, expresses as 6 hexadecimal characters.\r\n     * @returns hex representation of the color\r\n     */\r\n    get hex() {\r\n        var r = this.getHex(this.red);\r\n        var g = this.getHex(this.green);\r\n        var b = this.getHex(this.blue);\r\n        return r + g + b;\r\n    }\r\n    set hex(value: string){\r\n        this.red = parseInt(value.substr(0,2));\r\n        this.green = parseInt(value.substr(2,2));\r\n        this.blue = parseInt(value.substr(4,2));\r\n    }\r\n\r\n    /** gets white or black color that is a good oposite to the current color\r\n     * @returns - \"000000\" or \"FFFFFF\"\r\n     */\r\n    get contrastColor() {\r\n        const brightness = (this.red*299 + this.green*587 + this.blue*114) / 1000\r\n        if (brightness > 127){\r\n            return \"000000\";\r\n        }\r\n        return \"FFFFFF\";\r\n    }\r\n\r\n    private getRGB() {\r\n        const chroma = (1 - Math.abs((2 * this._lightness) - 1)) * this.saturation;\r\n        // find the quandrant of the hue\r\n        const quadrant = this._hue / 60;\r\n        // calculate the offset from the quandrant center\r\n        const offset = chroma * (1 - Math.abs(quadrant % 2 - 1));\r\n\r\n        // Apply the chroma to the primary component and the offset to the 2nd most important component\r\n        let r = 0, g = 0, b = 0;\r\n        if (0 <= quadrant && quadrant <= 1) {\r\n            r = chroma; g = offset; // red to yellow\r\n        } else if (1 <= quadrant && quadrant <= 2) {\r\n            g = chroma; r = offset; // yellow to green\r\n        } else if (2 <= quadrant && quadrant <= 3) {\r\n            g = chroma; b = offset; // green to cyan\r\n        } else if (3 <= quadrant && quadrant <= 4) {\r\n            b = chroma; g = offset; // cyan to blue\r\n        } else if (4 <= quadrant && quadrant <= 5) {\r\n            b = chroma; r = offset; // blue to magenta\r\n        } else if (5 <= quadrant && quadrant <= 6) {\r\n            r = chroma; b = offset; // magenta to red\r\n        }\r\n        // calculate the bias to add to all channels to match the lightness\r\n        const bias = this._lightness - (chroma / 2);\r\n\r\n        return {\r\n            red: Math.round((r + bias) * 255),\r\n            green: Math.round((g + bias) * 255),\r\n            blue: Math.round((b + bias) * 255)\r\n        }\r\n    }\r\n\r\n    private setHSL(red: number, green: number, blue: number) {\r\n        // GENERAL DATA\r\n        // all math is based on values from 0 to 1\r\n        const r = red/255, g = green/255, b = blue/255;\r\n        // we need to max, min and the difference between them to derive hsl\r\n        const min = Math.min(r, g, b);\r\n        const max = Math.max(r, g, b);\r\n        const diff = max - min;\r\n        let h = 0, s = 0, l = 0;\r\n\r\n        // HUE\r\n        if (diff === 0) { // neutral\r\n            h = 0;\r\n        } else if (max === r) { // red (magenta to yellow range)\r\n            h = 60 * ((g - b) / diff);\r\n        } else if (max === g) { // green (yellow to cyan range)\r\n            h = 60 * (2 + ((b - r) / diff));\r\n        } else if (max === b) { // blue (cyan to magenta range)\r\n            h = 60 * (4 + ((r - g) / diff));\r\n        }\r\n        if (h < 0) { h = h + 360} // ensures positive hues only\r\n        if (h > 359) { h = 359} // ensures we never return 360 for simplicity since it is the same as 0\r\n\r\n        // LIGHTNESS\r\n        l = (max + min) / 2;\r\n\r\n        // SATURATION\r\n        if (max === 0 || min === 1) { // pure black or white have no saturation\r\n            s = 0;\r\n        } else {\r\n            s = (max - l) / (Math.min(l, 1 - l));\r\n        }\r\n\r\n        this._hue = h;\r\n        this._saturation = s;\r\n        this._lightness = l;\r\n    }\r\n\r\n    private getHex(value: number){\r\n        var hex = value.toString(16);\r\n        if (hex.length < 2){\r\n            hex = \"0\" + hex;\r\n        }\r\n        return hex;\r\n    }\r\n} ",".dnn-color-picker{\r\n    padding: 15px;\r\n    max-width: 400px;\r\n    .dnn-color-sliders{\r\n        display:flex;\r\n        flex-direction: column;\r\n        min-width: 200px;\r\n        .dnn-color-s-b{\r\n            border: 1px solid #ccc;\r\n            padding-bottom: var(--color-box-height, 50%);\r\n            position: relative;\r\n            background-color: red;\r\n            &:before{\r\n                content: '';\r\n                    position: absolute;\r\n                    top:0;\r\n                    left:0;\r\n                    width: 100%;\r\n                    height:100%;\r\n                    z-index:1;\r\n                    background: linear-gradient(to right, white, red);\r\n                    mix-blend-mode: saturation;\r\n            }\r\n            &:after{\r\n                content: '';\r\n                position: absolute;\r\n                top:0;\r\n                left:0;\r\n                width: 100%;\r\n                height:100%;\r\n                z-index:2;\r\n                background: linear-gradient(to bottom, white, black);\r\n                mix-blend-mode: luminosity;\r\n            }\r\n            button{\r\n                position: absolute;\r\n                bottom: calc(50% - 4px);\r\n                left: calc(50% - 4px);\r\n                width: 8px;\r\n                height: 8px;\r\n                z-index: 3;\r\n                display: block;\r\n                background: none;\r\n                border: none;\r\n                margin-left: -4px;\r\n                margin-bottom: -4px;\r\n                padding: 7px;\r\n                background-color: #fff;\r\n                border-radius: 50%;\r\n                &:before{\r\n                    content:'';\r\n                    position: absolute;\r\n                    top: -1px;\r\n                    left: -1px;\r\n                    border-radius: 50%;\r\n                }\r\n                &:after{\r\n                    content:'';\r\n                    position: absolute;\r\n                    top: 0px;\r\n                    left: 0px;\r\n                    border-radius: 50%;\r\n                    width: 10px;\r\n                    height: 10px;\r\n                    border: 2px solid #ccc;\r\n                }\r\n            } \r\n        }\r\n        .dnn-color-bar {\r\n            display: flex;\r\n            align-items: center;\r\n            margin-top: 15px;\r\n            .dnn-color-result {\r\n                flex-direction: column;\r\n                width: 50px;\r\n                height: 50px;\r\n                border-radius: 50%;\r\n                background: red;\r\n            }\r\n            .dnn-color-hue{\r\n                flex: auto;\r\n                margin-left: 10px;\r\n                height: 16px;\r\n                border: 1px solid #ccc;\r\n                position: relative;\r\n                background: linear-gradient(\r\n                    to right, \r\n                    #f00 0, \r\n                    #ff0 17%,\r\n                    #0f0 33%,\r\n                    #0ff 50%,\r\n                    #00f 67%,\r\n                    #f0f 84%,\r\n                    #f00 100%\r\n                );\r\n                button{\r\n                    width: 10px;\r\n                    height: 20px;\r\n                    position: absolute;\r\n                    top: -2px;\r\n                    left: calc(50% - 4px);\r\n                    border: 0;\r\n                    padding: 0;\r\n                    background-color: transparent;\r\n                    padding-left: -8px;\r\n                    &:before{\r\n                        content:'';\r\n                        position: absolute;\r\n                        top: -2px;\r\n                        left: 0px;\r\n                        border-radius: 3px;\r\n                        width: 100%;\r\n                        height: 100%;\r\n                        border: 1px solid #ccc;\r\n                        background-color: #fff;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    .dnn-color-fields{\r\n        display:flex;\r\n        flex-direction: column;\r\n        justify-content: space-between;\r\n        .dnn-color-mode-switch {\r\n            display: flex;\r\n            align-items: flex-end;\r\n            padding: .5em;\r\n            button {\r\n                background-color: transparent;\r\n                border: none;\r\n                svg {\r\n                    width: 3em;\r\n                    height: 3em;\r\n                    pointer-events: none;\r\n                    outline: none;\r\n                }\r\n            }\r\n        }\r\n        .dnn-rgb-color-fields {\r\n            display: flex;\r\n            justify-content: space-evenly;\r\n            .dnn-rgb-color-field {\r\n                display: flex;\r\n                flex-direction: column;\r\n                flex: auto;\r\n                text-align: center;\r\n                padding: .5em;\r\n                label {\r\n                    padding-bottom: .25em;\r\n                }\r\n                input{\r\n                    border-radius: var(--dnn-button-radius, 3px);\r\n                    border: 1px solid #ccc;\r\n                    padding: 0.5em;\r\n                    padding-left: 1.3em;\r\n                    text-align: center;\r\n                    &.red{\r\n                        border-color: red;\r\n                    }\r\n                    &.green{\r\n                        border-color: green;                \r\n                    }\r\n                    &.blue{\r\n                        border-color: blue;\r\n                    }            \r\n                }\r\n            }\r\n        }\r\n        .dnn-hsl-color-fields {\r\n            display: flex;\r\n            justify-content: space-evenly;\r\n            .dnn-hsl-color-field {\r\n                display: flex;\r\n                flex-direction: column;\r\n                flex: auto;\r\n                text-align: center;\r\n                padding: .5em;\r\n                label {\r\n                    padding-bottom: .25em;\r\n                }\r\n                input{\r\n                    border-radius: var(--dnn-button-radius, 3px);\r\n                    border: 1px solid #ccc;\r\n                    padding: 0.5em;\r\n                    padding-left: 1.3em;\r\n                    text-align: center;\r\n                }\r\n            }\r\n        }\r\n        .dnn-hex-color-fields {\r\n            display: flex;\r\n            justify-content: space-evenly;\r\n            .dnn-hex-color-field {\r\n                display: flex;\r\n                flex-direction: column;\r\n                flex: auto;\r\n                text-align: center;\r\n                padding: .5em;\r\n                label {\r\n                    padding-bottom: .25em;\r\n                }\r\n                .hex-input{\r\n                    position: relative;\r\n                    border-radius: var(--dnn-button-radius, 3px);\r\n                    border: 1px solid #ccc;\r\n                    padding: 0.323em;\r\n                    text-align: center;\r\n                    input{\r\n                        border:0;\r\n                        padding:0;\r\n                        margin:0;\r\n                        width:100%;\r\n                        height:100%;\r\n                        text-align:center;\r\n                    }\r\n                    button{\r\n                        position: absolute;\r\n                        height: 100%;\r\n                        top: 0;\r\n                        right: 1em;\r\n                        background-color: transparent;\r\n                        border:0;\r\n                        padding:0;\r\n                        margin:0;\r\n                        svg{\r\n                            min-width: 1em;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n} ","/** Reusable DNN UI component to pick a color\r\n * @copyright Copyright (c) .NET Foundation. All rights reserved.\r\n * @license MIT \r\n */\r\n\r\nimport { Component, h, State, Element, Prop, EventEmitter, Event, Watch } from \"@stencil/core\";\r\nimport { ColorInfo } from '../../utilities/colorInfo';\r\nimport { Debounce } from \"../../utilities/debounce\";\r\n\r\n/** Color Picker for Dnn */\r\n@Component({\r\n    tag: 'dnn-color-picker',\r\n    styleUrl: 'dnn-color-picker.scss',\r\n    shadow: true\r\n})\r\nexport class DnnColorPicker {\r\n\r\n    @Element() el: HTMLDnnColorPickerElement;\r\n\r\n    /** Sets the initial color, must be a valid 8 character hexadecimal string without the # sign. */\r\n    @Prop() color: string = \"FFFFFF\";\r\n\r\n    /** Sets the width-height ratio of the color picker saturation-lightness box.\r\n     * @example 100% renders a perfect square\r\n     */\r\n    @Prop() colorBoxHeight: string = \"50%\";\r\n    \r\n    @State() currentColor: ColorInfo;\r\n    @State() rgbDisplay: string = \"flex\";\r\n    @State() hslDisplay: string = \"none\";\r\n    @State() hexDisplay: string = \"none\";\r\n\r\n    /** Fires up when the color is changed and emits a ColorInfo object\r\n     * @see ../../utilities/colorInfo.ts\r\n    */\r\n    @Event() colorChanged: EventEmitter<ColorInfo>;\r\n\r\n    @Debounce(100)\r\n    private colorChangedHandler(color: ColorInfo) {\r\n        this.colorChanged.emit(color);\r\n    }\r\n\r\n    @Watch(\"currentColor\")\r\n    handeCurrentColorChanged(newValue: ColorInfo){\r\n        this.colorChangedHandler(newValue);\r\n    }\r\n    \r\n    private saturationLightnessBox?: HTMLDivElement;\r\n    private hueRange?: HTMLDivElement;\r\n\r\n\r\n    componentWillLoad() {\r\n        this.handleHexChange(this.color);\r\n    }\r\n\r\n    componentDidLoad() {\r\n        (this.el as unknown as HTMLElement).style.setProperty(\"--color-box-height\", this.colorBoxHeight.toString());\r\n    }\r\n    \r\n    private getHex() {\r\n       return this.getDoublet(this.currentColor.red) + this.getDoublet(this.currentColor.green) + this.getDoublet(this.currentColor.blue);\r\n    }\r\n\r\n    private getContrast() {\r\n        return this.currentColor.contrastColor;\r\n    }\r\n\r\n    private getDoublet(value: number){\r\n        const valueString = value.toString(16).toUpperCase();\r\n        if (valueString.length === 1){\r\n            return '0' + valueString;\r\n        }\r\n        return valueString;\r\n    }\r\n\r\n    private handleSaturationLightnessMouseDown = (e) => {\r\n        e.preventDefault();\r\n        this.handleDragLightnessSaturation(e);\r\n        window.addEventListener('mousemove', this.handleDragLightnessSaturation);\r\n        window.addEventListener('mouseup', this.handleSaturationLightnessMouseUp);\r\n    }\r\n\r\n    private handleDragLightnessSaturation = (e) => {\r\n        const rect = this.saturationLightnessBox.getBoundingClientRect();        \r\n\r\n        let x = e.clientX - rect.left;        \r\n        if (x < 0) { x = 0}\r\n        if (x > rect.width) { x = rect.width}\r\n        x = x/rect.width;\r\n\r\n        let y = e.clientY - rect.top;\r\n        if (y < 0) { y = 0}\r\n        if (y > rect.height) { y = rect.height}\r\n        y = 1 - (y/rect.height);\r\n\r\n        const newColor = new ColorInfo();\r\n        newColor.hue = this.currentColor.hue;\r\n        newColor.saturation = x;\r\n        newColor.lightness = y;\r\n        this.currentColor = newColor;\r\n    }\r\n\r\n    private handleSaturationLightnessMouseUp = () => {\r\n        window.removeEventListener('mousemove', this.handleDragLightnessSaturation);\r\n        window.removeEventListener('mouseup', this.handleSaturationLightnessMouseUp);\r\n    }\r\n\r\n    private handleHueMouseDown = (e) => {\r\n        e.preventDefault();\r\n        this.handleDragHue(e);\r\n        window.addEventListener('mousemove', this.handleDragHue);\r\n        window.addEventListener('mouseup', this.handleHueMouseUp);        \r\n    }\r\n\r\n    private handleHueMouseUp = () => {\r\n        window.removeEventListener('mousemove', this.handleDragHue);\r\n        window.removeEventListener('mouseup', this.handleHueMouseUp); \r\n    }\r\n\r\n    private handleDragHue = (e) => {\r\n        const rect = this.hueRange.getBoundingClientRect();        \r\n\r\n        let x = e.clientX - rect.left;\r\n        if (x < 0) { x = 0}\r\n        if (x > rect.width) { x = rect.width}\r\n        x = x/rect.width*360;        \r\n\r\n        const newColor = new ColorInfo();\r\n        newColor.hue = x;\r\n        newColor.saturation = this.currentColor.saturation;\r\n        newColor.lightness = this.currentColor.lightness;\r\n        this.currentColor = newColor;\r\n    }\r\n\r\n    private handleComponentValueChange = (e, channel) => {\r\n        let value = parseInt(e.target.value);\r\n        if (isNaN(value)) { return }\r\n        const newColor = new ColorInfo();\r\n        if (value < 0) { value = 0; }\r\n        if (value > 255) { value = 255; }\r\n        let r = this.currentColor.red;\r\n        let g = this.currentColor.green;\r\n        let b = this.currentColor.blue;\r\n        switch (channel) {\r\n            case 'red':\r\n                r = value;\r\n                break;\r\n            case 'green':\r\n                g = value;\r\n                break;\r\n            case 'blue':\r\n                b = value;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        newColor.green = g;\r\n        newColor.red = r;\r\n        newColor.blue = b;\r\n        this.currentColor = newColor;\r\n    }\r\n\r\n    private handleHSLChange = (e, component) => {        \r\n        let value = parseInt(e.target.value);\r\n        if (isNaN(value)) {return}\r\n        const newColor = new ColorInfo();\r\n        if (value != null) {            \r\n            let h = this.currentColor.hue;\r\n            let s = this.currentColor.saturation;\r\n            let l = this.currentColor.lightness;\r\n            switch (component) {\r\n                case \"hue\":\r\n                    if (value < 0) { value = 0}\r\n                    if (value > 359) { value = 0}\r\n                    h = value;\r\n                    break;\r\n                case \"saturation\":\r\n                    if (value < 0) { value = 0}\r\n                    if (value > 100) { value = 100}\r\n                    s = value / 100;\r\n                    break;\r\n                case \"lightness\":\r\n                    if (value < 0) { value = 0}\r\n                    if (value > 100) { value = 100}\r\n                    l = value / 100;\r\n                    break;            \r\n                default:\r\n                    break;                \r\n            }\r\n            newColor.hue = h;\r\n            newColor.saturation = s;\r\n            newColor.lightness = l;\r\n            this.currentColor = newColor;\r\n        }\r\n    }\r\n\r\n    private handleHexChange(value: string){\r\n        const newColor = new ColorInfo();\r\n        if (value.match(/^(?:[\\da-f]{3}|[\\da-f]{6})$/i).length > 0) {\r\n            if (value.length === 3){\r\n                let expanded = value[0] + value[0] + value[1] + value[1] + value[2] + value [2];\r\n                value = expanded;\r\n            }\r\n            newColor.red = parseInt(value.substr(0,2), 16);\r\n            newColor.green = parseInt(value.substr(2,2), 16);\r\n            newColor.blue = parseInt(value.substr(4,2), 16);\r\n        }\r\n        else{\r\n            newColor.red = this.currentColor.red;\r\n            newColor.green = this.currentColor.green;\r\n            newColor.blue = this.currentColor.blue;\r\n        }\r\n        this.currentColor = newColor;\r\n    }\r\n\r\n    private switchColorMode(e) {\r\n        switch(e.target.id) {\r\n            case \"rgb-switch\":\r\n                this.rgbDisplay = \"none\";\r\n                this.hslDisplay = \"none\";\r\n                this.hexDisplay = \"flex\";\r\n                break;\r\n            case \"hex-switch\":\r\n                this.rgbDisplay = \"none\";\r\n                this.hslDisplay = \"flex\";\r\n                this.hexDisplay = \"none\";\r\n                break;\r\n            case \"hsl-switch\":\r\n                this.rgbDisplay = \"flex\";\r\n                this.hslDisplay = \"none\";\r\n                this.hexDisplay = \"none\";\r\n                break;\r\n            default:\r\n                this.rgbDisplay = \"flex\";\r\n                this.hslDisplay = \"none\";\r\n                this.hexDisplay = \"none\";\r\n        }\r\n    }\r\n\r\n    private handleSaturationLightnessKeyDown = (e) => {        \r\n        let newColor = new ColorInfo();\r\n        newColor.hue = this.currentColor.hue;\r\n        newColor.saturation = this.currentColor.saturation;\r\n        newColor.lightness = this.currentColor.lightness;\r\n\r\n        let value = 0.01;\r\n        if (e.shiftKey) { value = 0.1 ;}\r\n\r\n        switch (e.key) {\r\n            case \"ArrowUp\":\r\n                newColor.lightness += value;\r\n                break;\r\n            case \"ArrowDown\":\r\n                newColor.lightness -= value;\r\n                break;\r\n            case \"ArrowLeft\":\r\n                newColor.saturation -= value;\r\n                break;\r\n            case \"ArrowRight\":\r\n                newColor.saturation += value;\r\n            default:\r\n                break;                \r\n        }\r\n        this.currentColor = newColor;\r\n    }\r\n\r\n    private handleHueKeyDown = (e) => {\r\n        let newColor = new ColorInfo();\r\n        newColor.hue = this.currentColor.hue;\r\n        newColor.saturation = this.currentColor.saturation;\r\n        newColor.lightness = this.currentColor.lightness;\r\n\r\n        let value = 1;\r\n        if (e.shiftKey) { value = 10}\r\n\r\n        switch (e.key) {\r\n            case \"ArrowLeft\":\r\n                newColor.hue -= value;\r\n                break;\r\n            case \"ArrowRight\":\r\n                newColor.hue += value;\r\n            default:\r\n                break;\r\n        }\r\n        this.currentColor = newColor;\r\n    }\r\n\r\n    render() {\r\n        const hue = this.currentColor.hue;\r\n        const saturation = this.currentColor.saturation;\r\n        const lightness = this.currentColor.lightness;\r\n        const red = this.currentColor.red;\r\n        const green = this.currentColor.green;\r\n        const blue = this.currentColor.blue;\r\n\r\n        return (\r\n            <div class=\"dnn-color-picker\">\r\n                <div class=\"dnn-color-sliders\">\r\n                    <div class=\"dnn-color-s-b\" ref={(element) => this.saturationLightnessBox = element as HTMLDivElement}\r\n                        style={{backgroundColor: `hsl(${hue},100%,50%)`}}\r\n                        onMouseDown={this.handleSaturationLightnessMouseDown.bind(this)}\r\n                    >\r\n                        <button class=\"dnn-s-b-picker\"\r\n                            aria-label=\"Press up or down to adjust lightness, left or right to adjust saturation, hold shift to move by 10%\"\r\n                            role=\"slider\"\r\n                            aria-valuemin=\"0\"\r\n                            aria-valuemax=\"100\"\r\n                            aria-valuetext={`Saturation: ${Math.round(this.currentColor.saturation*100)}%, Lightness: ${Math.round(this.currentColor.lightness*100)}%`}\r\n                            style={{\r\n                                left: Math.round(saturation * 100)  + \"%\",\r\n                                bottom: Math.round(lightness * 100)  + \"%\"\r\n                            }}\r\n                            onKeyDown={(e) => this.handleSaturationLightnessKeyDown(e)}\r\n                        />\r\n                    </div>\r\n                    <div class=\"dnn-color-bar\">\r\n                        <div class=\"dnn-color-result\" style={{\r\n                            backgroundColor: '#' + this.getHex(),\r\n                            boxShadow: \"0 0 2px 1px \" + \"#\" + this.getContrast()\r\n                        }} \r\n                        />\r\n                        <div class=\"dnn-color-hue\"\r\n                            ref={(element) => this.hueRange = element as HTMLDivElement}\r\n                            onMouseDown={this.handleHueMouseDown.bind(this)}\r\n                        >\r\n                            <button class=\"dnn-hue-picker\"\r\n                                aria-label=\"Press left or right to adjust hue, hold shift to move by 10 degrees\"\r\n                                role=\"slider\"\r\n                                aria-valuemin=\"0\"\r\n                                aria-valuemax=\"359\"\r\n                                aria-valuenow={Math.round(hue)}\r\n                                style={{left: (hue/359*100).toString() + \"%\"}}\r\n                                onKeyDown={(e) => this.handleHueKeyDown(e)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"dnn-color-fields\">\r\n                    <div class=\"dnn-rgb-color-fields\" style={{display: this.rgbDisplay}}>\r\n                        <div class=\"dnn-rgb-color-field\">\r\n                            <label>R</label>\r\n                            <input type=\"number\" min=\"0\" max=\"255\" step=\"1\" class=\"red\" value={red} aria-label=\"red value\"\r\n                                onChange={(e) => this.handleComponentValueChange(e, 'red')}\r\n                            />\r\n                        </div>\r\n                        <div class=\"dnn-rgb-color-field\">\r\n                            <label>G</label>\r\n                            <input type=\"number\" min=\"0\" max=\"255\" class=\"green\" value={green} aria-label=\"green value\"\r\n                                onChange={(e) => this.handleComponentValueChange(e, 'green')}\r\n                            />\r\n                        </div>\r\n                        <div class=\"dnn-rgb-color-field\">\r\n                            <label>B</label>\r\n                            <input type=\"number\" min=\"0\" max=\"255\" class=\"blue\" value={blue} aria-label=\"blue value\"\r\n                                onChange={(e) => this.handleComponentValueChange(e, 'blue')}\r\n                            />\r\n                        </div>\r\n                        <div class=\"dnn-color-mode-switch\">\r\n                            <button\r\n                                id=\"rgb-switch\"\r\n                                onClick={this.switchColorMode.bind(this)}\r\n                                aria-label=\"switch to hexadecimal value entry\"\r\n                            >\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M7 7h10v3l4-4-4-4v3H5v6h2V7zm10 10H7v-3l-4 4 4 4v-3h12v-6h-2v4z\"/></svg>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"dnn-hsl-color-fields\" style={{display: this.hslDisplay}}>\r\n                        <div class=\"dnn-hsl-color-field\">\r\n                            <label>H</label>\r\n                            <input type=\"number\" min=\"0\" max=\"359\" step={1} value={Math.round(hue)} aria-label=\"Hue\"\r\n                                onChange={(e) => this.handleHSLChange(e, 'hue')}\r\n                            />\r\n                        </div>\r\n                        <div class=\"dnn-hsl-color-field\">\r\n                            <label>S</label>\r\n                            <input type=\"number\" min=\"0\" max=\"100\" step={1} value={Math.round(saturation*100)} aria-label=\"Saturation\"\r\n                                onChange={(e) => this.handleHSLChange(e, 'saturation')}\r\n                            />\r\n                        </div>\r\n                        <div class=\"dnn-hsl-color-field\">\r\n                            <label>L</label>\r\n                            <input type=\"number\" min=\"0\" max=\"100\" step={1} value={Math.round(lightness*100)} aria-label=\"Lightness\"\r\n                                onChange={(e) => this.handleHSLChange(e, 'lightness')}\r\n                            />\r\n                        </div>\r\n                        <div class=\"dnn-color-mode-switch\">\r\n                            <button\r\n                                id=\"hsl-switch\"\r\n                                onClick={this.switchColorMode.bind(this)}\r\n                                aria-label=\"Switch to red, green, blue entry mode\"\r\n                            >\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M7 7h10v3l4-4-4-4v3H5v6h2V7zm10 10H7v-3l-4 4 4 4v-3h12v-6h-2v4z\"/></svg>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"dnn-hex-color-fields\" style={{display: this.hexDisplay}}>\r\n                        <div class=\"dnn-hex-color-field\">\r\n                            <label>HEX</label>\r\n                            <div class=\"hex-input\">\r\n                                <input type=\"text\" aria-label=\"Hexadecimal value\"\r\n                                    value={this.getHex()}\r\n                                    onChange={e => this.handleHexChange((e.target as HTMLInputElement).value)}\r\n                                />\r\n                                <button\r\n                                    class=\"copy\"\r\n                                    aria-label=\"copy value\"\r\n                                >\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\"/></svg>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"dnn-color-mode-switch\">\r\n                            <button\r\n                                id=\"hex-switch\"\r\n                                onClick={this.switchColorMode.bind(this)}\r\n                                aria-label=\"Switch to hue saturation lightness values\"\r\n                            >\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M7 7h10v3l4-4-4-4v3H5v6h2V7zm10 10H7v-3l-4 4 4 4v-3h12v-6h-2v4z\"/></svg>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","\n:host {\n  /** \n  * @prop --border-color: The color of the border.\n  * @prop --border-radius: The radius of the controls borders.\n  * @prop --drop-background-color: The color of the background when a file is dropping.\n  */\n  --border-color: var(--dnn-color-tertiary-contrast, lightgray);\n  --border-radius: var(--dnn-controls-radius, 5px);\n  --drop-background-color: var(--dnn-color-tertiary, lightblue);\n\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  text-align: center;\n  border: 2px dashed var(--border-color);\n  border-radius: var(--border-radius);\n  padding: 1rem;\n  transition: all 300ms ease-in-out;\n}\n\n:host(.dropping){\n  background-color: var(--drop-background-color);\n}\np{\n  margin: 0;\n  padding: 0;\n}\nbutton{\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 0px;\n  margin: 0;\n  padding: 0;\n  background-color: transparent;\n  &:hover{\n    cursor: pointer;\n  }\n  svg{\n    margin-right: 0.5rem;\n  }\n}\nlabel.upload-file{\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  input{\n    display: none;\n  }\n}\n.video-preview{\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  button{\n    margin: 1rem;\n  }\n}\n","import { Component, Host, h, Prop, State, Event, EventEmitter } from '@stencil/core';\n\n@Component({\n  tag: 'dnn-dropzone',\n  styleUrl: 'dnn-dropzone.scss',\n  shadow: true,\n})\nexport class DnnDropzone {\n  /** Localization strings */\n  @Prop() resx:{\n    dragAndDropFile: string;\n    capture: string;\n    or: string;\n    takePicture: string;\n    uploadFile: string;\n  } = {\n    dragAndDropFile: \"Drag and drop a file\",\n    capture: \"Capture\",\n    or: \"or\",\n    takePicture: \"Take a picture\",\n    uploadFile: \"Upload a file\",\n  }\n\n  /** A list of allowed file extensions.\n   * If not specified, any file is allowed.\n   * Ex: [\"jpg\", \"jped\", \"gif\", \"png\"]\n   */\n  @Prop() allowedExtensions: string[];\n\n  /**\n   * If true, will allow the user to take a snapshot\n   * using the device camera. (only works over https).\n   */\n  @Prop() allowCameraMode: boolean = false;\n\n  /**\n   * Specifies the jpeg quality for when the device\n   * camera is used to generate a picture.\n   * Needs to be a number between 0 and 1 and defaults to 0.8\n   */\n  @Prop() captureQuality: number = 0.8;\n\n  /** Fires when file were selected. */\n  @Event() filesSelected: EventEmitter<File[]>;\n  \n  @State() canTakeSnapshots: boolean = false;\n\n  @State() takingPicture: boolean = false;\n  \n  private dropzone: HTMLElement;\n  private fileInput: HTMLInputElement;\n  private videoPreview: HTMLVideoElement;\n  private videoSettings!: MediaTrackSettings;\n\n\n  componentDidLoad() {\n    if (this.allowCameraMode){\n      this.checkIfBrowserCanTakeSnapshots()\n      .then(result => this.canTakeSnapshots = result);\n    }\n    if (this.allowedExtensions != undefined && this.allowedExtensions.length > 0){\n      var extensionsWithDots = this.allowedExtensions.map(e => `.${e}`);\n      var extensionsList = extensionsWithDots.join(\",\");\n      this.fileInput.accept = extensionsList;\n    }\n  }\n\n  private checkIfBrowserCanTakeSnapshots(): Promise<boolean> {\n    return new Promise((resolve) => {\n      const mediaDevices = navigator.mediaDevices;\n      if (mediaDevices == undefined || mediaDevices.enumerateDevices == undefined) {\n        resolve(false);\n      }\n      mediaDevices.enumerateDevices()\n        .then(devices => {\n          var result = devices.some(device => device.kind == \"videoinput\");\n          resolve(result);\n        });\n    });\n  }\n\n  private getFilesFromFileList(files: FileList) : File[] {\n    var fileList: File[] = [];\n    for (let index = 0; index < files.length; index++) {\n      const file = files[index];\n      fileList.push(file);\n    }\n\n    return fileList;\n  }\n\n  private handleUploadButton(element: HTMLInputElement): void {\n    let files = this.getFilesFromFileList(element.files);\n\n    this.filesSelected.emit(files);\n  }\n\n  private handleDragOver = (event: DragEvent) => \n  {\n    event.stopPropagation();\n    event.preventDefault();\n    event.dataTransfer.dropEffect = \"copy\";\n    this.dropzone.classList.add(\"dropping\");\n  };\n\n  private hasInvalidExtensions(files: FileList): boolean{\n    var hasInvalid = false;\n    for (let fileIndex = 0; fileIndex < files.length; fileIndex++) {\n      const file = files[fileIndex];\n      var regex = /(?:\\.([^.]+))?$/;\n      const fileExtension = regex.exec(file.name)[1];\n      if (fileExtension == undefined){\n        hasInvalid = true;\n      }\n\n      if (this.allowedExtensions != undefined && !this.allowedExtensions.includes(fileExtension)){\n        hasInvalid = true;\n      }\n\n      return hasInvalid;\n    }\n  }\n\n  private handleDrop = (dropEvent: DragEvent) => {\n    dropEvent.stopPropagation();\n    dropEvent.preventDefault();\n    const files = dropEvent.dataTransfer.files;\n\n    if (this.hasInvalidExtensions(files)){\n      return;\n    }\n    var fileList = this.getFilesFromFileList(files);\n    this.filesSelected.emit(fileList);\n  };\n\n  private takeSnapshot(): void {\n    this.takingPicture = true;\n    navigator.mediaDevices.getUserMedia({video: true, audio: false})\n    .then(stream => {\n      stream\n      this.videoPreview.srcObject = stream;\n      this.videoPreview.play()\n      .then(() => {\n        this.videoSettings = stream.getVideoTracks()[0].getSettings();\n      });\n    })\n    .catch(error => alert(error));\n  }\n\n  private applySnapshot(): void {\n    var canvas = document.createElement(\"canvas\");\n    const context = canvas.getContext(\"2d\");\n    canvas.width = this.videoSettings.width;\n    canvas.height = this.videoSettings.height;\n    context.drawImage(this.videoPreview, 0, 0);\n    canvas.toBlob(blob => {\n      var file = new File([blob], \"image.jpeg\", {type:\"image/jpeg\"});\n      this.takingPicture = false;\n      \n      var fileList = [file];\n      this.filesSelected.emit(fileList)\n    }, \"image/jpeg\", this.captureQuality);\n  }\n  \n  render() {\n    return (\n      <Host\n        ref={e => this.dropzone = e}\n        class=\"dropzone\"\n        onDragOver={this.handleDragOver}\n        onDrop={this.handleDrop}\n        onDragLeave={() => this.dropzone.classList.remove(\"dropping\")}\n      >\n        {!this.takingPicture &&\n          [\n            <p>{this.resx?.dragAndDropFile}</p>\n          ,\n            <p>- {this.resx?.or} -</p>\n          ,\n            <label class=\"upload-file\">\n              <input\n                type=\"file\"\n                ref={el => this.fileInput = el}\n                onChange={e => this.handleUploadButton(e.target as HTMLInputElement)}\n              >\n              </input>\n              <span>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><g><rect fill=\"none\" height=\"24\" width=\"24\"/></g><g><path d=\"M5,20h14v-2H5V20z M5,10h4v6h6v-6h4l-7-7L5,10z\"/></g></svg>\n              </span>\n              &nbsp;\n              {this.resx?.uploadFile}\n            </label>\n            ,\n            this.canTakeSnapshots &&\n              [\n                <p>- {this.resx?.or} -</p>\n                ,\n                <button\n                  onClick={() => this.takeSnapshot()}\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><circle cx=\"12\" cy=\"12\" r=\"3.2\"/><path d=\"M9 2L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z\"/></svg>\n                  {this.resx?.takePicture}\n                </button>\n              ]\n          ]\n        }\n        {this.takingPicture &&\n          <div class=\"video-preview\">\n            <video ref={e => this.videoPreview = e} />\n            <button\n              onClick={() => this.applySnapshot()}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><circle cx=\"12\" cy=\"12\" r=\"3.2\"/><path d=\"M9 2L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z\"/></svg>&nbsp;\n              {this.resx?.capture}\n            </button>\n          </div>\n        }\n      </Host>\n    );\n  }\n\n}\n","export enum CornerType {\r\n    \"nw\",\r\n    \"ne\",\r\n    \"se\",\r\n    \"sw\",\r\n};","export function getMovementFromEvent(\r\n    event: MouseEvent | TouchEvent,\r\n    previousTouch: Touch\r\n) {\r\n    let movementX = 0;\r\n    let movementY = 0;\r\n    if (event instanceof MouseEvent) {\r\n      movementX = event.movementX;\r\n      movementY = event.movementY;\r\n    }\r\n    if (typeof TouchEvent !== \"undefined\"){\r\n      if (event instanceof TouchEvent) {\r\n        let touch = event.touches[0];\r\n        if (previousTouch != undefined) {\r\n          movementX = touch.pageX - this.previousTouch.pageX;\r\n          movementY = touch.pageY - this.previousTouch.pageY;\r\n        }\r\n        previousTouch = touch;\r\n      }\r\n    }\r\n    return { movementX, movementY };\r\n  }",":host {\n  display: block;\n}\ncanvas {\n  display: none;\n}\n.view{\n  visibility: hidden;\n  opacity: 0;\n  height: 0;\n  overflow: hidden;\n  transition: all 300ms ease-in-out;\n  &.visible{\n    visibility: visible;\n    opacity: 1;\n    height: initial;\n    overflow: visible;\n  }\n  .cropper{\n    position: relative;\n    width: 100%;\n    img{\n      width: 100%;\n      display: block;\n      margin: 0 auto;\n    }\n    .backdrop{\n      backdrop-filter: saturate(0.5);\n      backdrop-filter: brightness(0.5);\n      position: absolute;\n      left: 0;\n      top: 0;\n      width: 100%;\n      height: 100%;\n    }\n    .crop{\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      outline: 2px dashed white;\n      box-shadow: black 0 0 0px 2px;\n      backdrop-filter: saturate(2);\n      backdrop-filter: brightness(2);\n      cursor: move;\n      >div{\n        width: 20px;\n        height: 20px;\n        background-color: white;\n        border: 2px solid rgba(0,0,0,0.5);\n        position: absolute;\n        &.nw, &.ne{\n          top: -17px;\n        }\n        &.ne, &.se{\n          right: -17px;\n        }\n        &.se, &.sw{\n          bottom: -17px;\n        }\n        &.sw, &.nw{\n          left: -17px;\n        }\n        &.nw, &.se{\n          cursor: nwse-resize;\n        }\n        &.ne, &.sw{\n          cursor: nesw-resize;\n        }\n      }\n    }\n  }\n}\ndnn-modal{\n  --max-width: 512px;\n}","import { Component, Host, h, State, Prop, Event, EventEmitter } from '@stencil/core';\nimport { CornerType } from './CornerType';\nimport { getMovementFromEvent } from \"../../utilities/mouseUtilities\";\n\n/**\n * Allows cropping an image in-browser with the option to enforce a specific final size.\n * All computation happens in the browser and the final image is emmited\n * in an event that has a data-url of the image.\n */\n@Component({\n  tag: 'dnn-image-cropper',\n  styleUrl: 'dnn-image-cropper.scss',\n  shadow: true,\n})\nexport class DnnImageCropper {\n  /** Sets the desired final image width. */\n  @Prop() width: number = 600;\n\n  /** Sets the desired final image height. */\n  @Prop() height: number = 600;\n\n  /** Can be used to customize controls text.\n   * Some values support tokens, see default values for examples.\n  */\n  @Prop() resx: {\n    capture: string;\n    dragAndDropFile: string;\n    or: string;\n    takePicture: string;\n    uploadFile: string;\n    imageTooSmall: string;\n    modalCloseText: string;\n  } = {\n    capture: \"Capture\",\n    dragAndDropFile: \"Drag and drop an image\",\n    or: \"or\",\n    takePicture: \"Take a picture\",\n    uploadFile: \"Upload an image\",\n    imageTooSmall: \"The image you are attempting to upload does not meet the minimum size requirement of {width} pixels by {height} pixels. Please upload a larger image.\",\n    modalCloseText: \"Close\",\n  }\n\n  /** Sets the output quality of the corpped image (number between 0 and 1). */\n  @Prop() quality: number = 0.8;\n\n  /** When set to true, prevents cropping an image smaller than the required size, which would blow pixel and make the final picture look blurry. */\n  @Prop() preventUndersized: boolean = false;\n\n  /** When the image crop changes, emits the dataurl for the new cropped image. */\n  @Event() imageCropChanged: EventEmitter<string>;\n\n  @State() view: IComponentInterfaces[\"View\"];\n  \n  private host: HTMLElement;\n  private hasPictureView: HTMLDivElement;\n  private noPictureView: HTMLDivElement;\n  private canvas: HTMLCanvasElement;\n  private image: HTMLImageElement;\n  private crop: HTMLDivElement;\n  private previousTouch: Touch;\n  private imageTooSmallModal!: HTMLDnnModalElement;\n\n  componentDidLoad() {\n    requestAnimationFrame(() => {\n      this.setView(\"noPictureView\");\n    })\n  }\n\n  private setView(newView: IComponentInterfaces[\"View\"]){\n    const views = this.host.shadowRoot.querySelectorAll(\".view\");\n    views.forEach(v =>\n      v.classList.remove(\"visible\"));\n    switch (newView) {\n      case \"noPictureView\":\n        this.noPictureView.classList.add(\"visible\");\n        break;\n      case \"hasPictureView\":\n        this.hasPictureView.classList.add(\"visible\");\n        break;\n      default:\n        break;\n    }\n    this.view = newView;\n  }\n\n  private initCrop(){\n    var wantedRatio = this.width / this.height;\n    var imageRect = this.image.getBoundingClientRect();\n    var imageRatio = imageRect.width / imageRect.height;\n    \n    if (wantedRatio > imageRatio){\n        var wantedHeight = imageRect.width / wantedRatio;\n        var diff = imageRect.height - wantedHeight;\n        this.crop.style.top = Math.round(diff/2).toString() + \"px\";\n        this.crop.style.height = Math.round(wantedHeight).toString() + \"px\";\n    }\n    else{\n      var wantedWidth = imageRect.height * wantedRatio;\n      var diff = imageRect.width - wantedWidth;\n        this.crop.style.left = Math.round(diff/2).toString() + \"px\";\n        this.crop.style.width = Math.round(wantedWidth).toString() + \"px\";\n    }\n  }\n\n  private setImage(){\n    this.image.addEventListener('load', () => {\n      this.initCrop();\n      this.emitImage();\n    })\n    this.image.src = this.canvas.toDataURL();\n  }\n\n  private handleNewFile(file: File): void {\n    if (file.type.split('/')[0] != \"image\"){\n      return;\n    }\n    \n    var reader = new FileReader();\n    reader.onload = readerLoadEvent => {\n      var img = new Image();\n      img.onload = () => {\n        this.canvas.width = img.width;\n        this.canvas.height = img.height;\n        if (this.preventUndersized && (img.width < this.width || img.height< this.height)){\n          this.imageTooSmallModal.show();\n          return;\n        }\n        var ctx = this.canvas.getContext(\"2d\");\n        ctx.drawImage(img,0,0);\n        this.setView(\"hasPictureView\");\n        this.setImage();\n      }\n      img.src = readerLoadEvent.target.result.toString();\n    }\n    reader.readAsDataURL(file);\n  }\n\n  private handleCropMouseDown = (event: MouseEvent | TouchEvent) => {\n    event.stopPropagation();\n    event.preventDefault();\n    const element = event.target as HTMLElement;\n    const className = element.classList[0];\n\n    document.addEventListener(\"mouseup\", this.handleImageCropFinished, false);\n    document.addEventListener(\"touchend\", this.handleImageCropFinished, false);\n    switch (className) {\n      case \"crop\":\n        document.addEventListener(\"mousemove\", this.handleCropDrag, false);\n        document.addEventListener(\"touchmove\", this.handleCropDrag, false)\n        document.addEventListener(\"mouseup\", () => document.removeEventListener(\"mousemove\", this.handleCropDrag));\n        document.addEventListener(\"touchend\", () => document.removeEventListener(\"touchmove\", this.handleCropDrag));\n        break;\n      case \"nw\":\n        document.addEventListener(\"mousemove\", this.handleNwMouseMove, false);\n        document.addEventListener(\"touchmove\", this.handleNwMouseMove, false)\n        document.addEventListener(\"mouseup\", () => document.removeEventListener(\"mousemove\", this.handleNwMouseMove));\n        document.addEventListener(\"touchend\", () => document.removeEventListener(\"touchmove\", this.handleNwMouseMove));\n        break;\n      case \"ne\":\n        document.addEventListener(\"mousemove\", this.handleNeMouseMove, false);\n        document.addEventListener(\"touchmove\", this.handleNeMouseMove, false)\n        document.addEventListener(\"mouseup\", () => document.removeEventListener(\"mousemove\", this.handleNeMouseMove));\n        document.addEventListener(\"touchend\", () => document.removeEventListener(\"touchmove\", this.handleNeMouseMove));\n        break\n      case \"se\":\n        document.addEventListener(\"mousemove\", this.handleSeMouseMove, false);\n        document.addEventListener(\"touchmove\", this.handleSeMouseMove, false)\n        document.addEventListener(\"mouseup\", () => document.removeEventListener(\"mousemove\", this.handleSeMouseMove));\n        document.addEventListener(\"touchend\", () => document.removeEventListener(\"touchmove\", this.handleSeMouseMove));\n        break;\n      case \"sw\":\n        document.addEventListener(\"mousemove\", this.handleSwMouseMove, false);\n        document.addEventListener(\"touchmove\", this.handleSwMouseMove, false)\n        document.addEventListener(\"mouseup\", () => document.removeEventListener(\"mousemove\", this.handleSwMouseMove));\n        document.addEventListener(\"touchend\", () => document.removeEventListener(\"touchmove\", this.handleSwMouseMove));\n        break;\n      default:\n        break;\n    }\n  };\n\n  private handleImageCropFinished = (_ev: MouseEvent) => {\n    this.emitImage();\n    document.removeEventListener(\"mouseup\", this.handleImageCropFinished);\n    this.previousTouch = undefined;\n  }\n\n  private emitImage() {\n    var x = this.crop.offsetLeft / this.image.width * this.image.naturalWidth;\n    var y = this.crop.offsetTop / this.image.height * this.image.naturalHeight;\n\n    var cropRect = this.crop.getBoundingClientRect();\n    var width = cropRect.width / this.image.width * this.image.naturalWidth;\n    var height = cropRect.height / this.image.height * this.image.naturalHeight;\n\n    if (x < 0)\n      x = 0;\n    if (x > this.image.naturalWidth)\n      x = this.image.naturalWidth;\n    if (y < 0)\n      y = 0;\n    if (y > this.image.naturalWidth)\n      y = this.image.naturalWidth;\n    if (width > this.image.naturalWidth)\n      width = this.image.naturalWidth;\n    if (height > this.image.naturalHeight)\n      height = this.image.naturalHeight;\n\n    var dataUrl = this.generateCroppedImage(x, y, width, height, this.width, this.height);\n    this.imageCropChanged.emit(dataUrl);\n  }\n\n  private generateCroppedImage(x: number, y: number, width: number, height: number, desiredWidth: number, desiredHeight: number) {\n    this.canvas.width = desiredWidth;\n    this.canvas.height = desiredHeight;\n    const context = this.canvas.getContext(\"2d\");\n    context.clearRect(0, 0, desiredWidth, desiredHeight);\n    context.drawImage(this.image, x, y, width, height, 0, 0, desiredWidth, desiredHeight);\n\n    return this.canvas.toDataURL(\"image/jpeg\", this.quality);\n  }\n\n  private handleNwMouseMove = (event: MouseEvent | TouchEvent) => {\n    this.handleCornerDrag(event, CornerType.nw);\n  }\n\n  private handleNeMouseMove = (event: MouseEvent | TouchEvent) => {\n    this.handleCornerDrag(event, CornerType.ne);\n  }\n\n  private handleSeMouseMove = (event: MouseEvent | TouchEvent) => {\n    this.handleCornerDrag(event, CornerType.se);\n  }\n\n  private handleSwMouseMove = (event: MouseEvent | TouchEvent) => {\n    this.handleCornerDrag(event, CornerType.sw);\n  }\n\n  private handleCornerDrag = (event: MouseEvent | TouchEvent, corner: CornerType) => {\n    if (!this.isMouseStillInTarget(event)){\n      return;\n    }\n    \n    let {left, top} = this.getCornerLeftTop(corner);\n    let newWidth = 0;\n    let newHeight = 0;\n    let orientation: \"horizontal\" | \"vertical\" = \"horizontal\";\n    const wantedRatio = this.width / this.height;\n    const cropRect = this.crop.getBoundingClientRect();\n    const imageRect = this.image.getBoundingClientRect();\n    let { movementX, movementY } = getMovementFromEvent(event, this.previousTouch);\n    if (Math.abs(movementX) < Math.abs(movementY)){\n      orientation = \"vertical\";\n    }\n\n    if (orientation == \"horizontal\"){\n      switch (corner) {\n        case CornerType.nw:\n        case CornerType.sw:\n          newWidth = cropRect.width - movementX;\n          newHeight = newWidth / wantedRatio;\n          break;\n        case CornerType.ne:\n        case CornerType.se:\n          newWidth = cropRect.width + movementX;\n          newHeight = newWidth / wantedRatio;\n          break;\n        default:\n          break;\n      }\n    } else{\n      switch (corner) {\n        case CornerType.nw:\n        case CornerType.ne:\n          newHeight = cropRect.height - movementY;\n          newWidth = newHeight * wantedRatio;\n          break;\n        case CornerType.se:\n        case CornerType.sw:\n          newHeight = cropRect.height + movementY;\n          newWidth = newHeight * wantedRatio;\n          break;\n        default:\n          break;\n      }\n    }\n\n    switch (corner) {\n      case CornerType.ne:\n      case CornerType.nw:\n        const topOffset = cropRect.height - newHeight;\n        top = this.crop.offsetTop + topOffset;\n      default:\n        break;\n    }\n\n    switch (corner) {\n      case CornerType.nw:\n      case CornerType.sw:\n        const leftOffset = cropRect.width - newWidth;\n        left = this.crop.offsetLeft + leftOffset;\n        if (left < 0) left = 0;\n        if (left > imageRect.width) left = imageRect.width;\n        if (top < 0) top = 0;\n        if (top > imageRect.height) top = imageRect.height;\n        if (left + newWidth > imageRect.width) newWidth = imageRect.width - left;\n        if (top + newHeight > imageRect.height) newHeight = imageRect.height - top;\n        break;\n      case CornerType.ne:\n      case CornerType.se:\n        if (top < 0) top = 0;\n        if (top > imageRect.height) top = imageRect.height;\n        if (left + newWidth > imageRect.width) newWidth = imageRect.width - left;\n        if (top + newHeight > imageRect.height) newHeight = imageRect.height - top;\n        break;\n      default:\n        break;\n    }\n\n    if (newWidth / newHeight != wantedRatio){\n      return;\n    }\n\n    if (this.preventUndersized){\n      const zoomRatio = this.image.width / this.image.naturalWidth;\n      if (newWidth / zoomRatio < this.width || newHeight / zoomRatio < this.height){\n        return;\n      }\n    }\n\n    switch (corner) {\n      case CornerType.ne:\n        this.crop.style.top = `${top}px`;\n        this.crop.style.width = `${newWidth}px`;\n        this.crop.style.height = `${newHeight}px`;\n        break;\n      case CornerType.nw:\n        this.crop.style.left = `${left}px`;\n        this.crop.style.top = `${top}px`;\n        this.crop.style.width = `${newWidth}px`;\n        this.crop.style.height = `${newHeight}px`;\n        break;\n      case CornerType.se:\n        this.crop.style.width = `${newWidth}px`;\n        this.crop.style.height = `${newHeight}px`;\n        break;\n      case CornerType.sw:\n        this.crop.style.left = `${left}px`;\n        this.crop.style.width = `${newWidth}px`;\n        this.crop.style.height = `${newHeight}px`;\n        break;\n      default:\n        break;\n    }\n  }\n\n  private getCornerLeftTop(corner: CornerType): { left: number; top: number; } {\n    let left = 0;\n    let top = 0;\n    switch (corner) {\n      case CornerType.se:\n        left = this.crop.offsetLeft;\n        top = this.crop.offsetTop;\n        break;\n      case CornerType.sw:\n        top = this.crop.offsetTop;\n        break;\n      default:\n        break;\n    }\n    return {top, left};\n  }\n\n  private handleCropDrag = (ev: MouseEvent | TouchEvent) => {\n    if (!this.isMouseStillInTarget(ev)){\n      return;\n    }\n    let {movementX, movementY} = getMovementFromEvent(ev, this.previousTouch);\n    let newLeft = this.crop.offsetLeft + movementX;\n    let newTop = this.crop.offsetTop + movementY;\n    var imageRect = this.image.getBoundingClientRect();\n    var cropRect = this.crop.getBoundingClientRect();\n    if (newLeft < 0){\n      newLeft = 0;\n    }\n    if (newTop < 0){\n      newTop = 0;\n    }\n    if (newLeft + cropRect.width > imageRect.width){\n      newLeft = this.crop.offsetLeft;\n    }\n    if (newTop + cropRect.height > imageRect.height){\n      newTop = this.crop.offsetTop;\n    }\n    this.crop.style.left = newLeft + \"px\";\n    this.crop.style.top = newTop + \"px\";\n  };\n\n  private isMouseStillInTarget(event: MouseEvent | TouchEvent) {\n    var inside = false;\n    let mouseX: number;\n    let mouseY: number;\n    const imageRect = this.image.getBoundingClientRect();\n    \n    if (event instanceof MouseEvent){\n      mouseX = event.clientX;\n      mouseY = event.clientY;\n    }\n\n    if (typeof TouchEvent !== \"undefined\"){\n      if (event instanceof TouchEvent){\n        var touch = event.touches[0];\n        mouseX = touch.clientX;\n        mouseY = touch.clientY;\n      }\n    }\n    \n    if (\n      mouseX >= imageRect.x &&\n      mouseY >= imageRect.y &&\n      mouseX <= imageRect.left + imageRect.width &&\n      mouseY <= imageRect.top + imageRect.height)\n    {\n      inside = true;\n    }\n\n    var corners = this.crop.querySelectorAll(\"div\");\n    corners.forEach(corner =>{\n      var cornerRect = corner.getBoundingClientRect();\n      if (\n        mouseX >= cornerRect.x &&\n        mouseY >= cornerRect.y &&\n        mouseX <= cornerRect.left + cornerRect.width &&\n        mouseY <= cornerRect.top + cornerRect.height)\n        {\n          inside = true;\n        }\n    })\n\n    return inside;\n  }\n\n  render() {\n    return (\n      <Host ref={el => this.host = el}>\n        <canvas ref={el => this.canvas = el} />\n        <div\n          class=\"view\"\n          ref={el => this.hasPictureView = el}\n        >\n          <div class=\"cropper\">\n            <img ref={el => this.image = el} />\n            <div class=\"backdrop\" />\n            <div\n              class=\"crop\"\n              ref={e => this.crop = e}\n              onMouseDown={this.handleCropMouseDown}\n              onTouchStart={this.handleCropMouseDown}\n            >\n              <div class=\"nw\" />\n              <div class=\"ne\" />\n              <div class=\"se\" />\n              <div class=\"sw\" />\n            </div>\n          </div>\n        </div>\n        <div\n          class=\"view\"\n          ref={el => this.noPictureView = el}>\n            <dnn-dropzone\n              allowCameraMode\n              onFilesSelected={e => this.handleNewFile(e.detail[0])}\n              resx={\n                {\n                  capture: this.resx.capture,\n                  dragAndDropFile: this.resx.dragAndDropFile,\n                  or: this.resx.or,\n                  takePicture: this.resx.takePicture,\n                  uploadFile: this.resx.uploadFile,\n                }\n              }\n            />\n        </div>\n        <dnn-modal ref={el => this.imageTooSmallModal = el} close-text={this.resx.modalCloseText}>\n          <p>{this.resx.imageTooSmall.replace(\"{width}\", this.width.toString()).replace(\"{height}\", this.height.toString())}</p>\n        </dnn-modal>\n      </Host>\n    );\n  }\n}\n\ninterface IComponentInterfaces\n{\n  View: \"noPictureView\" | \"takingPictureView\" | \"hasPictureView\" | \"hasCroppedPictureView\";\n}",":host {\n  /**\n   * @prop --max-width: The maximum width of the module.\n  */\n  display: block;\n  .overlay{\n    background-color: rgba(0,0,0,0.5);\n    position: fixed;\n    top:0;\n    left:0;\n    width: 100%;\n    height: 100%;\n    z-index: 1;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    backdrop-filter: blur(2px);\n    transition: all 300ms ease-in-out;\n    visibility: hidden;\n    opacity: 0;\n    .modal{\n      max-width: var(--max-width, 1200px);\n      background-color: white;\n      padding: 30px;\n      transform: scale(2);\n      transition: all 300ms ease-in-out;\n      z-index: 2;\n      position: relative;\n      margin: 10%;\n      max-height: 80%;\n      border-radius: var(--dnn-controls-radius, 5px);\n      box-shadow: 10px 10px 20px 0 rgba(0,0,0,0.5);\n      display: block;\n      .close{\n        position: absolute;\n        background-color:white;\n        border: 2px solid white;\n        border-radius: 50%;\n        padding: 0;\n        margin: 0;\n        top: -12px;\n        right: -12px;\n        outline: none;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        &:focus, &:hover{\n          box-shadow: 0 0 2px 2px var(--dnn-color-primary, blue);\n        }\n        svg{\n          width: 24px;\n          height: 24px;\n          color: grey;\n        }\n      }\n    }\n    &.visible{\n      visibility: visible;\n      opacity: 1;\n      .modal{\n        transform: scale(1);\n        box-shadow: 4px 4px 10px 0px rgba(0,0,0,0.5);\n        display: block;\n      }\n    }\n  }\n}","import { Component, Element, Host, h, Prop, Event, EventEmitter, Method } from '@stencil/core';\n\n@Component({\n  tag: 'dnn-modal',\n  styleUrl: 'dnn-modal.scss',\n  shadow: true\n})\nexport class DnnModal {\n  \n  @Element() el!: HTMLDnnModalElement;\n  \n  /**\n   * Pass false to remove the backdrop click auto-dismiss feature.\n   */\n  @Prop() backdropDismiss: boolean = true;\n\n  /**\n   * Optionally pass the aria-label text for the close button.\n   * Defaults to \"Close modal\" if not provided.\n   */\n  @Prop() closeText?: string = \"Close modal\";\n\n  /**\n   * Optionally you can pass false to not show the close button.\n   * If you decide to do so, you should either not also prevent dismissal by clicking the backdrop\n   * or provide your own dismissal logic in the modal content.\n   */\n  @Prop() showCloseButton?: boolean = true;\n\n  /**\n   * Reflects the visible state of the modal.\n   */\n  @Prop({mutable: true, reflect: true}) visible: boolean = false;\n\n  /**\n   * Shows the modal\n   */\n  @Method()\n  async show() {\n    this.visible = true;\n  }\n\n  /**\n   * Hides the modal\n   */\n  @Method()\n  async hide() {\n    this.visible = false;\n  }\n\n  /**\n   * Fires when the modal is dismissed.\n   */\n  @Event() dismissed!: EventEmitter;\n\n  private handleDismiss(){\n    this.visible = false;\n    this.dismissed.emit();\n  }\n\n  private handleBackdropClick(e: MouseEvent): void {\n    const element = (e.target as HTMLElement);\n    if (element.id === \"backdrop\" && this.backdropDismiss){\n      this.handleDismiss();\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        <div id=\"backdrop\"\n          class={this.visible ? 'overlay visible' : 'overlay'}\n          onClick={e => this.handleBackdropClick(e)}\n        >\n          <div class=\"modal\">\n            {this.showCloseButton &&\n              <button\n                class=\"close\"\n                aria-label={this.closeText}\n                onClick={() => this.handleDismiss()}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"/></svg>\n              </button>\n            }\n            <slot></slot>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n\n.add-role-row{\n  display: flex;\n  gap: 1em;\n  align-items: center;\n  flex-wrap: wrap;\n  label{\n    margin-right:0.5em;\n  }\n}\n.search-user{\n  display: flex;\n  gap: 1em;\n  margin-top: 1em;\n  .search-control{\n    position: relative;\n    dnn-collapsible{\n      position: absolute;\n      left: 0;\n      top: calc(100% - 2px);\n      width: 100%;\n      box-shadow: 0px 4px 4px;\n      .dropdown{\n        background-color: white;\n        border: 1px solid lightgray;\n        display: flex;\n        flex-direction: column;\n        button{\n          background-color: transparent;\n          border: none;\n          border-bottom: 1px solid lightgray;\n          padding: 0.25em;\n          margin: 0;\n          text-align: left;\n        }\n      }\n    }\n  }\n}\ntable{\n  border: 1px solid lightgray;\n  border-collapse: collapse;\n  margin-top: 1em;\n  thead{\n    text-align: center;\n    tr{\n      border-bottom: 1px solid lightgray;\n    }\n    th{\n      background-color: lightgray;\n      padding: 0.25em 0.5em;\n      &:first-child{\n        border-right: 1px solid lightgray;\n      }\n    }\n  }\n  tbody{\n    tr{\n      border-bottom: 1px dotted lightgray;\n      th{\n        text-align: left;\n        border-right: 1px solid lightgray;\n        padding: 0 0.5em;\n      }\n      td{\n        text-align: center;\n        dnn-checkbox{\n          span{\n            display: none;\n          }\n        }\n        button{\n          background-color: transparent;\n          border: 0;\n          padding: 0;\n          margin: 0;\n          margin-right: 1em;\n        }\n      }\n    }\n  }\n}","import { Component, Host, h, Prop, State, Event, EventEmitter, Watch } from '@stencil/core';\nimport { ILocalization } from './localization-interface';\nimport { IPermissionDefinition, IPermissions, IRolePermission, IUserPermission } from './permissions-interface';\nimport { IRoleGroup } from './role-group-interface';\nimport { IRole } from './role-interface';\nimport { ISearchedUser } from './searched-user-interface';\n\n@Component({\n  tag: 'dnn-permissions-grid',\n  styleUrl: 'dnn-permissions-grid.scss',\n  shadow: true,\n})\nexport class DnnPermissionsGrid {\n\n  /** The list of permissions. */\n  @Prop({mutable: true}) permissions!: IPermissions;\n\n  /** The list of role groups. */\n  @Prop() roleGroups!: IRoleGroup[];\n\n  /** The list of possible roles. */\n  @Prop() roles!: IRole[];\n\n  /** Optionally allows localizing the component strings. */\n  @Prop() resx: ILocalization = {\n    Add: \"Add\",\n    AllRoles: \"All Roles\",\n    FilterByGroup: \"Filter By Group\",\n    GlobalRoles: \"Global Roles\",\n    Role: \"Role\",\n    RolePermissions: \"Role Permissions\",\n    SelectRole: \"Select Role\",\n    User: \"User\",\n    UserPermissions: \"User Permissions\",\n  }\n\n  /** The list of users to show under the search users field when a search is performed. */\n  @Prop() foundUsers: ISearchedUser[] = [];\n\n  /** Fires when searching for users to add to the permissions. Emits the search query. */\n  @Event() userSearchQueryChanged: EventEmitter<string>;\n  \n  /** Fires when any permissions have changed, can be used for instance to have linked permissions. */\n  @Event() permissionsChanged: EventEmitter<IPermissions>;\n\n  @State() selectedRoleGroupId = -1;\n  @State() userQuery: string;\n  @State() pickedUser: ISearchedUser;\n  \n  \n  @Watch(\"foundUsers\")\n  handleFoundUsersChanged(newValue: ISearchedUser[]){\n    if (newValue?.length > 0){\n      setTimeout(() => {\n        this.userCollapsible.expanded = true;\n      }, 100);\n    }\n  }\n  \n  componentWillLoad() {\n    document.addEventListener(\"click\", this.dismissUserResults.bind(this));\n  }\n  \n  disconnectedCallback() {\n    document.removeEventListener(\"click\", this.disconnectedCallback.bind(this));\n  }\n  \n  private roleDropDown: HTMLSelectElement;\n  private userCollapsible: HTMLDnnCollapsibleElement;\n\n  private dismissUserResults(e: MouseEvent){\n    const dropdownRect = this.roleDropDown.getBoundingClientRect();\n    if (\n      e.pageX > dropdownRect.right ||\n      e.pageX < dropdownRect.left ||\n      e.pageY > dropdownRect.bottom ||\n      e.pageY < dropdownRect.top){\n        this.userCollapsible.expanded = false;\n      }\n  } \n\n  private handleRoleGroupChanged(dropdown: HTMLSelectElement): void {\n    const index = dropdown.selectedIndex;\n    const value = Number.parseInt(dropdown.options[index].value);\n    this.selectedRoleGroupId = value;\n  }\n\n  private addRole(): void {\n    const roleId = Number.parseInt(this.roleDropDown.options[this.roleDropDown.selectedIndex].value);\n    const role = this.roles.filter(r => r.RoleId == roleId)[0];\n    this.permissions = {\n      ...this.permissions,\n      rolePermissions: [\n        ...this.permissions.rolePermissions,\n        {\n          default: false,\n          locked: false,\n          permissions: [],\n          roleId: role.RoleId,\n          roleName: role.RoleName,\n        }\n      ]\n    }\n    this.permissionsChanged.emit(this.permissions);\n  }\n\n  private addUser(): void {\n    if (this.pickedUser != undefined){\n      this.permissions = {\n        ...this.permissions,\n        userPermissions: [\n          ...this.permissions.userPermissions,\n          {\n            displayName: this.pickedUser.displayName,\n            permissions: [],\n            userId: this.pickedUser.userId,\n          },\n        ],\n      };\n      this.pickedUser = undefined;\n      this.userQuery = \"\";\n      this.permissionsChanged.emit(this.permissions);\n    }\n  }\n\n  private getRoles(){\n    const filteredRoles = this.roles.filter(role => \n      !this.permissions.rolePermissions.some(rp => rp.roleId == role.RoleId))\n    if (this.selectedRoleGroupId == -2){\n      // All Roles\n      return filteredRoles;\n    }\n\n    if (this.selectedRoleGroupId == -1){\n      // Global Roles\n      return filteredRoles.filter(role => role.IsSystemRole);\n    }\n    \n    return filteredRoles.filter(role => role.RoleGroupId == this.selectedRoleGroupId);\n  }\n\n  private renderRoleCheckBox(rolePermission: IRolePermission, permissionDefinition: IPermissionDefinition) {\n    const item = rolePermission.permissions.filter(permission => permission.permissionId == permissionDefinition.permissionId)[0];\n    if (rolePermission.locked){\n      return(\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><g fill=\"none\"><path d=\"M0 0h24v24H0V0z\"/><path d=\"M0 0h24v24H0V0z\" opacity=\".87\"/></g><path d=\"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9V6zm9 14H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\"/></svg>\n      )\n    }\n\n    const checked = item == undefined ? \"intermediate\" : item.allowAccess ? \"checked\" : \"unchecked\";\n    return(\n      <dnn-checkbox\n        use-intermediate\n        checked={checked}\n        onCheckedchange={e => this.handleRoleChanged(e.detail, rolePermission, permissionDefinition)}\n      >\n        <div slot=\"intermediateicon\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"/></svg>\n        </div>\n        <div slot=\"uncheckedicon\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM4 12c0-4.42 3.58-8 8-8 1.85 0 3.55.63 4.9 1.69L5.69 16.9C4.63 15.55 4 13.85 4 12zm8 8c-1.85 0-3.55-.63-4.9-1.69L18.31 7.1C19.37 8.45 20 10.15 20 12c0 4.42-3.58 8-8 8z\"/></svg>\n        </div>\n        <span>{permissionDefinition.permissionName}</span>\n      </dnn-checkbox>\n    )\n  }\n\n  private renderUserCheckBox(userPermission: IUserPermission, permissionDefinition: IPermissionDefinition) {\n    const item = userPermission.permissions.filter(permission => permission.permissionId == permissionDefinition.permissionId)[0];\n\n    const checked = item == undefined ? \"intermediate\" : item.allowAccess ? \"checked\" : \"unchecked\";\n    return(\n      <dnn-checkbox\n        use-intermediate\n        checked={checked}\n        onCheckedchange={e => this.handleUserChanged(e.detail, userPermission, permissionDefinition)}\n      >\n        <div slot=\"intermediateicon\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"/></svg>\n        </div>\n        <div slot=\"uncheckedicon\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM4 12c0-4.42 3.58-8 8-8 1.85 0 3.55.63 4.9 1.69L5.69 16.9C4.63 15.55 4 13.85 4 12zm8 8c-1.85 0-3.55-.63-4.9-1.69L18.31 7.1C19.37 8.45 20 10.15 20 12c0 4.42-3.58 8-8 8z\"/></svg>\n        </div>\n        <span>{permissionDefinition.permissionName}</span>\n      </dnn-checkbox>\n    )\n  }\n  \n  private handleRoleChanged(\n    checked: \"checked\" | \"unchecked\" | \"intermediate\",\n    rolePermission: IRolePermission,\n    permissionDefinition: IPermissionDefinition\n  ): void {\n    switch (checked) {\n      case \"unchecked\":\n        this.permissions = {\n          ...this.permissions,\n          rolePermissions: [\n            ...this.permissions.rolePermissions.map(r => {\n              if (r.roleId != rolePermission.roleId){\n                return r;\n              }\n\n              const newRolePermission = Object.assign({}, r);\n              newRolePermission.permissions = [\n                ...newRolePermission.permissions.filter(p => p.permissionId != permissionDefinition.permissionId),\n                {\n                  allowAccess: false,\n                  fullControl: false,\n                  permissionCode: permissionDefinition.permissionCode,\n                  permissionId: permissionDefinition.permissionId,\n                  permissionKey: permissionDefinition.permissionKey,\n                  permissionName: permissionDefinition.permissionName,\n                  view: false,\n                },\n              ];\n              return newRolePermission;\n            }),\n          ],\n        };\n        break;\n      case \"checked\":\n        this.permissions = {\n          ...this.permissions,\n          rolePermissions: [\n            ...this.permissions.rolePermissions.map(r => {\n              if (r.roleId != rolePermission.roleId){\n                return r;\n              }\n\n              const newRolePermission = Object.assign({}, r);\n              newRolePermission.permissions = [\n                ...newRolePermission.permissions.filter(p => p.permissionId != permissionDefinition.permissionId),\n                {\n                  allowAccess: true,\n                  fullControl: false,\n                  permissionCode: permissionDefinition.permissionCode,\n                  permissionId: permissionDefinition.permissionId,\n                  permissionKey: permissionDefinition.permissionKey,\n                  permissionName: permissionDefinition.permissionName,\n                  view: false,\n                },\n              ];\n              return newRolePermission;\n            }),\n          ],\n        };\n        break;\n        case \"intermediate\":\n        this.permissions = {\n          ...this.permissions,\n          rolePermissions: [\n            ...this.permissions.rolePermissions.map(r => {\n              if (r.roleId != rolePermission.roleId){\n                return r;\n              }\n\n              const newRolePermission = Object.assign({}, r);\n              newRolePermission.permissions = [\n                ...newRolePermission.permissions.filter(p => p.permissionId != permissionDefinition.permissionId),\n              ];\n              return newRolePermission;\n            }),\n          ],\n        };\n        break;\n      default:\n        break;\n    }\n    this.permissionsChanged.emit(this.permissions);\n  }\n\n  private handleUserChanged(\n    checked: \"checked\" | \"unchecked\" | \"intermediate\",\n    userPermission: IUserPermission,\n    permissionDefinition: IPermissionDefinition\n  ): void {\n    switch (checked) {\n      case \"unchecked\":\n        this.permissions = {\n          ...this.permissions,\n          userPermissions: [\n            ...this.permissions.userPermissions.map(u => {\n              if (u.userId != userPermission.userId){\n                return u;\n              }\n\n              const newUserPermission = Object.assign({}, u);\n              newUserPermission.permissions = [\n                ...newUserPermission.permissions.filter(p => p.permissionId != permissionDefinition.permissionId),\n                {\n                  allowAccess: false,\n                  fullControl: false,\n                  permissionCode: permissionDefinition.permissionCode,\n                  permissionId: permissionDefinition.permissionId,\n                  permissionKey: permissionDefinition.permissionKey,\n                  permissionName: permissionDefinition.permissionName,\n                  view: false,\n                },\n              ];\n              return newUserPermission;\n            }),\n          ],\n        };\n        break;\n      case \"checked\":\n        this.permissions = {\n          ...this.permissions,\n          userPermissions: [\n            ...this.permissions.userPermissions.map(u => {\n              if (u.userId != userPermission.userId){\n                return u;\n              }\n\n              const newUserPermission = Object.assign({}, u);\n              newUserPermission.permissions = [\n                ...newUserPermission.permissions.filter(p => p.permissionId != permissionDefinition.permissionId),\n                {\n                  allowAccess: true,\n                  fullControl: false,\n                  permissionCode: permissionDefinition.permissionCode,\n                  permissionId: permissionDefinition.permissionId,\n                  permissionKey: permissionDefinition.permissionKey,\n                  permissionName: permissionDefinition.permissionName,\n                  view: false,\n                },\n              ];\n              return newUserPermission;\n            }),\n          ],\n        };\n        break;\n        case \"intermediate\":\n        this.permissions = {\n          ...this.permissions,\n          userPermissions: [\n            ...this.permissions.userPermissions.map(u => {\n              if (u.userId != userPermission.userId){\n                return u;\n              }\n\n              const newUserPermission = Object.assign({}, u);\n              newUserPermission.permissions = [\n                ...newUserPermission.permissions.filter(p => p.permissionId != permissionDefinition.permissionId),\n              ];\n              return newUserPermission;\n            }),\n          ],\n        };\n        break;\n      default:\n        break;\n    }\n    this.permissionsChanged.emit(this.permissions);\n  }\n\n  private removeRole(rolePermission: IRolePermission): void {\n    this.permissions = {\n      ...this.permissions,\n      rolePermissions: [\n        ...this.permissions.rolePermissions.filter(rp => rp.roleId != rolePermission.roleId),\n      ],\n    };\n    this.permissionsChanged.emit();\n  }\n\n  private removeUser(userPermission: IUserPermission): void {\n    this.permissions = {\n      ...this.permissions,\n      userPermissions: [\n        ...this.permissions.userPermissions.filter(up => up.userId != userPermission.userId),\n      ]\n    };\n    this.permissionsChanged.emit(this.permissions);\n  }\n\n  private handleQueryChanged(query: string): void {\n    this.userQuery = query;\n    if (query == undefined || query.length == 0){\n      this.userCollapsible.expanded = false;\n      this.pickedUser = undefined;\n      this.foundUsers = [];\n      return;\n    }\n    this.userSearchQueryChanged.emit(query);\n  }\n\n  private handleSearchUserFieldKeyDown(e: KeyboardEvent): void {\n    if (e.key != \"ArrowDown\"){\n      return;\n    }\n\n    e.preventDefault();\n    const firstButton = this.userCollapsible.querySelector(\"button\");\n    if (firstButton != undefined){\n      firstButton.focus();\n    }\n  }\n\n  private handleSearchedUserKeyDown(e: KeyboardEvent): void {\n    const button = e.target as HTMLButtonElement;\n    \n    switch(e.key) {\n      case \"ArrowDown\":\n        e.preventDefault();\n        const nextButton = button.nextElementSibling as HTMLButtonElement;\n        nextButton?.focus();\n        break;\n      case \"ArrowUp\":\n        e.preventDefault();\n        const previousButton = button.previousElementSibling as HTMLButtonElement;\n        previousButton?.focus();\n      break;\n      default:\n        break;\n    }\n  }\n\n  private handleUserPicked(searchedUser: ISearchedUser): void {\n    this.userQuery = searchedUser.displayName;\n    this.pickedUser = searchedUser;\n  }\n\n  private getFilteredUsers() {\n    return this.foundUsers.filter(fu => !this.permissions.userPermissions.some(up => up.userId == fu.userId))\n  }\n  \n  render() {\n    const filteredRoles = this.getRoles();\n    return (\n      <Host>\n        <div class=\"add-role-row\">\n          <div class=\"dropdown\">\n            <label>{this.resx.FilterByGroup} :</label>\n            <select\n              onChange={e => this.handleRoleGroupChanged(e.target as HTMLSelectElement)}\n            >\n              <option\n                value={-2}\n                selected={this.selectedRoleGroupId == -2}\n              >\n                {this.resx.AllRoles}\n              </option>\n              <option\n                value={-1}\n                selected={this.selectedRoleGroupId == -1}\n              >\n                {this.resx.GlobalRoles}\n              </option>\n              {this.roleGroups.map(roleGroup =>\n                <option\n                  value={roleGroup.id}\n                  selected={this.selectedRoleGroupId == roleGroup.id}\n                >\n                  {roleGroup.name}\n                </option>\n              )}\n            </select>\n          </div>\n            {filteredRoles && filteredRoles.length > 0 && [\n              <div class=\"dropdown\">\n                <label>{this.resx.SelectRole} :</label>\n                <select ref={el => this.roleDropDown = el}>\n                  {this.getRoles().map(role =>\n                    <option value={role.RoleId}\n                    >\n                      {role.RoleName}\n                    </option>\n                  )}\n                </select>\n              </div>,\n              <dnn-button\n              type=\"primary\"\n              onClick={() => this.addRole()}\n              >\n                {this.resx.Add}\n              </dnn-button>\n            ]\n          }\n        </div>\n        <table class=\"roles-table\">\n          <caption>{this.resx.RolePermissions}</caption>\n          <thead>\n            <tr>\n              <th>{this.resx.Role}</th>\n              {this.permissions.permissionDefinitions.map(permissionDefinition =>\n                <th>{permissionDefinition.permissionName}</th>\n              )}\n              <th>&nbsp;</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.permissions.rolePermissions.map(rolePermission =>\n              <tr>\n                <th>{rolePermission.roleName}</th>\n                {this.permissions.permissionDefinitions.map(permissionDefinition =>\n                  <td>\n                    {this.renderRoleCheckBox(rolePermission, permissionDefinition)}\n                  </td>\n                )}\n                <td>\n                  {!rolePermission.default &&\n                    <button\n                      onClick={() => this.removeRole(rolePermission)}\n                    >\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M14.59 8L12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41 14.59 8zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"/></svg>\n                    </button>\n                  }\n                </td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n        <div class=\"search-user\">\n          <div class=\"search-control\">\n            <dnn-searchbox\n              placeholder={this.resx.User}\n              debounced\n              onQueryChanged={e => this.handleQueryChanged(e.detail)}\n              onKeyDown={e => this.handleSearchUserFieldKeyDown(e)}\n              query={this.userQuery}\n            />\n            <dnn-collapsible ref={el => this.userCollapsible = el}>\n              <div class=\"dropdown\">\n                {this.getFilteredUsers().map(searchedUser =>\n                  <button\n                    onKeyDown={e => this.handleSearchedUserKeyDown(e)}\n                    onClick={() => this.handleUserPicked(searchedUser)}\n                  >\n                    {searchedUser.displayName}\n                  </button>\n                )}\n              </div>\n            </dnn-collapsible>\n          </div>\n          {this.pickedUser &&\n            <dnn-button\n              onClick={() => this.addUser()}\n            >\n              {this.resx.Add}\n            </dnn-button>\n          }\n        </div>\n        {this.permissions.userPermissions && this.permissions.userPermissions.length > 0 &&\n          <table class=\"users-table\">\n            <caption>{this.resx.UserPermissions}</caption>\n            <thead>\n              <tr>\n                <th>{this.resx.User}</th>\n                {this.permissions.permissionDefinitions.map(permissionDefinition =>\n                  <th>{permissionDefinition.permissionName}</th>\n                )}\n                <th>&nbsp;</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.permissions.userPermissions.map(userPermission =>\n                <tr>\n                  <th>{userPermission.displayName}</th>\n                  {this.permissions.permissionDefinitions.map(permissionDefinition =>\n                    <td>\n                      {this.renderUserCheckBox(userPermission, permissionDefinition)}\n                    </td>\n                  )}\n                  <td>\n                    <button\n                      onClick={() => this.removeUser(userPermission)}\n                    >\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M14.59 8L12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41 14.59 8zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"/></svg>\n                    </button>\n                </td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        }\n      </Host>\n    );\n  }\n}",":host {\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  --background-color: transparent;\n  --color: #333;\n  --border-size: 1px;\n  --border-color: grey;\n  --border-active-color: black;\n  --border-radius: var(--dnn-controls-radius, 5px);\n  --padding: var(--dnn-controls-padding, 5px);\n  --focus-color: var(--dnn-color-primary, blue);\n  input {\n    width:100%;\n    border: var(--border-size) solid var(--border-color);\n    outline: none;\n    border-radius: var(--border-radius);\n    padding: var(--padding);\n    padding-right: 32px;\n    transition: all 300ms ease-in-out;\n    &:focus, &:hover{\n      outline: none;\n      box-shadow: 0 0 2px 2px var(--focus-color);\n    }\n  }\n  svg{\n    position: absolute;\n    top:0;\n    right:0;\n    height: 100%;\n    transform: scale(0.7);\n    fill: var(--color);\n    outline: var(--color);\n    color: var(--color);\n    transition: all 300ms ease-in-out;\n  }\n  button{\n    background: transparent;\n    border: 0;\n    margin: 0;\n    padding: 0;\n    &:focus, &:hover{\n      svg{\n        fill: var(--focus-color);\n      outline: var(--focus-color);\n      color: var(--focus-color);\n      }\n    }\n  }\n}\n","import { Component, Host, h, Event, EventEmitter, Watch, Prop } from '@stencil/core';\nimport { Debounce } from '../../utilities/debounce';\n@Component({\n  tag: 'dnn-searchbox',\n  styleUrl: 'dnn-searchbox.scss',\n  shadow: true\n})\nexport class DnnSearchbox {\n\n  /**\n   * Sets the field placeholder text.\n   */\n  @Prop() placeholder?: string = \"\";\n\n  /**\n   * Debounces the queryChanged by 500ms.\n   */\n  @Prop() debounced: boolean = true;\n\n  /** Sets the query */\n  @Prop({mutable: true}) query: string = \"\";\n\n  /**\n   * Fires up each time the search query changes.\n   * The data passed is the new query.\n   */\n  @Event() queryChanged: EventEmitter<string>;\n\n  @Watch('query')\n  fireQueryChanged(){\n    if (this.debounced){\n      this.debouncedHandleQueryChanged();\n    }\n    else{\n      this.handleQueryChanged();\n    }\n  }\n  \n  private handleQueryChanged(){\n    this.queryChanged.emit(this.query);\n  }\n\n  @Debounce(500)\n  private debouncedHandleQueryChanged(){\n    this.handleQueryChanged();\n  }\n\n  render() {\n    return (\n      <Host>\n        <input type=\"text\" value={this.query}\n          placeholder={this.placeholder}\n          onInput={e => this.query = (e.target as HTMLInputElement).value}\n        />\n        {this.query !== \"\" ?\n          <button class=\"svg clear\"\n            onClick={() => this.query = \"\"}\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"/></svg>\n          </button>\n        :\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/></svg>\n        }\n      </Host>\n    );\n  }\n\n}\n",":host {\n  /**\n  * @prop --color: Normal Color of the inactive sort icon.\n  * @prop --color-sorted: Color of the sorted sort icon.\n  * @prop --color-hover: Color of the icons when hovered.\n  */\n  --color: #888;\n  --color-sorted: var(--dnn-color-primary, rgb(2,139,255));\n  --color-hover: var(--dnn-color-primary-light, #36a1ff);\n  \n  display: inline-block;\n}\n\nbutton {\n  outline: none;\n  border: none;\n  margin: 0;\n  padding: 0;\n  background-color: transparent;\n  outline: none;\n  display: inline-block;\n  line-height: 1em;\n  position: relative;\n  top: 0.25em;\n  svg{\n    height: 1.5em;\n    width: auto;\n    fill: var(--color);\n  }\n  &.active{\n    svg{\n      fill: var(--color-sorted);\n    }\n  }\n  &:hover, &:focus{\n    svg{\n      fill: var(--color-hover);\n    }\n  }\n}","import { Component, Host, h, Prop, Event, EventEmitter } from '@stencil/core';\n\n@Component({\n  tag: 'dnn-sort-icon',\n  styleUrl: 'dnn-sort-icon.scss',\n  shadow: true\n})\nexport class DnnSortIcon {\n  /** Defines the current sort direction */\n  @Prop() sortDirection: \"asc\" | \"desc\" | \"none\" = \"none\";\n\n  /** Emitted when the sort is changed. */\n  @Event() sortChanged!: EventEmitter<\"asc\"|\"desc\"|\"none\">;\n  \n  private changeSort(): void {\n    switch (this.sortDirection) {\n      case \"asc\":\n        this.sortDirection = \"desc\";\n        break;\n      case \"desc\":\n        this.sortDirection = \"asc\";\n        break;\n      case \"none\":\n        this.sortDirection = \"asc\";\n        break;\n      default:\n        break;\n    }\n\n    this.sortChanged.emit(this.sortDirection);\n  }\n\n  render() {\n    return (\n      <Host>\n        <button\n          class={{\"active\": this.sortDirection != \"none\"}}\n          onClick={() => this.changeSort()}\n        >\n          {this.sortDirection == \"none\" &&\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 12 16\"><path d=\"M 0 7 H 12 L 6 0 Z M 0 9 H 12 L 6 16 Z\"></path></svg>\n          }\n          {this.sortDirection == \"asc\" &&\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 12 16\"><path d=\"M 0 7 H 12 L 6 0 Z\"></path></svg>\n          }\n          {this.sortDirection == \"desc\" &&\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 12 16\"><path d=\"M 0 9 H 12 L 6 16 Z\"></path></svg>\n          }\n        </button>\n      </Host>\n    );\n  }\n}\n",null,"import { Component, Host, h, Prop, State, Method } from \"@stencil/core\";\r\n\r\n/** Represents a single tab and must be used inside a dnn-tabs element. */\r\n@Component({\r\n    tag: 'dnn-tab',\r\n    styleUrl: 'dnn-tab.scss',\r\n    shadow: true,\r\n})\r\nexport class DnnTab {\r\n    /** Defines the tab title. */\r\n    @Prop() tabTitle!: string;\r\n\r\n    @State() visible: boolean = false;\r\n\r\n    /** Shows the tab. */\r\n    @Method()\r\n    async show(){\r\n        this.visible = true;\r\n    }\r\n\r\n    /** Hides the modal */\r\n    @Method()\r\n    async hide(){\r\n        this.visible = false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Host>\r\n                {this.visible &&\r\n                    <slot></slot>\r\n                }\r\n            </Host>\r\n        );\r\n    }\r\n}",":host {\r\n    /**\r\n    * @prop --color-background: The color of the inactive tabs.\r\n    * @prop --color-text: The color of the text for inactive tabs.\r\n    * @prop --color-visible: The color of the active tab.\r\n    * @prop --color-visible-text: The color of the text for the active tab.\r\n    * @prop --color-focus: outline color when hovering or pre-selecting a tab.\r\n    */\r\n    display: block;\r\n    --color-background: var(--dnn-color-secondary-dark, lightgray);\r\n    --color-text: var(--dnn-color-secondary-contrast, #333);\r\n    --color-visible: var(--dnn-color-primary, #3792ED);\r\n    --color-visible-text: var(--dnn-color-primary-contrast, #FFF);\r\n    --color-focus: var(--dnn-color-primary, #3792ed);\r\n  }\r\n\r\n  .tabTitles{\r\n      display: flex;\r\n      background-color: var(--color-background);\r\n      color: var(--color-text);\r\n      button{\r\n          padding: 0.5rem 1rem;\r\n          border: 0;\r\n          margin: 0;\r\n          background-color: transparent;\r\n          &.visible{\r\n              background-color: var(--color-visible);\r\n              color: var(--color-bisible-text);\r\n          }\r\n          &:focus, &:hover{\r\n            outline: none;\r\n            box-shadow: 0 0 2px 2px var(--color-focus);\r\n          }\r\n      }\r\n  }\r\n\r\n  .currentTab{\r\n      border: 1px solid var(--color-background);\r\n      padding: 1rem;\r\n  }","import { Component, Host, h, State } from \"@stencil/core\";\r\n\r\n@Component({\r\n    tag: 'dnn-tabs',\r\n    styleUrl: 'dnn-tabs.scss',\r\n    shadow: true,\r\n})\r\nexport class DnnTabs {\r\n    private component: HTMLElement;\r\n\r\n    @State() tabTitles: string[] = [];\r\n    @State() selectedTabTitle: string = \"\";\r\n\r\n    componentDidLoad(){\r\n        requestAnimationFrame(() => {\r\n            this.updateTitles();\r\n            this.showFirstTab();\r\n        });\r\n    }\r\n\r\n    private getTabs() {\r\n        return this.component.shadowRoot.querySelector(\"slot\").assignedElements() as HTMLDnnTabElement[];\r\n    }\r\n\r\n    private updateTitles(){\r\n        const tabs = this.getTabs();\r\n        tabs.forEach(tab => this.tabTitles = [...this.tabTitles, tab.tabTitle]);\r\n    }\r\n\r\n    private showFirstTab(){\r\n        const tab = this.getTabs()[0];\r\n        tab.show();\r\n        this.selectedTabTitle = tab.tabTitle;\r\n    }\r\n\r\n    private showTab(tabTitle: string) {\r\n        const tabs = this.getTabs();\r\n        tabs.forEach(tab => {\r\n            if (tab.tabTitle == tabTitle){\r\n                tab.show();\r\n                return;\r\n            }\r\n\r\n            tab.hide();\r\n        });\r\n        this.selectedTabTitle = tabTitle;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Host ref={el => this.component = el}>\r\n                <div class=\"tabTitles\">\r\n                    {this.tabTitles.map(tabTitle =>\r\n                        <button\r\n                            class={this.selectedTabTitle == tabTitle ? \"visible\": \"\"}\r\n                            onClick={() => this.showTab(tabTitle)}\r\n                        >\r\n                            {tabTitle}\r\n                        </button>\r\n                    )}\r\n                </div>\r\n                <div class=\"currentTab\">\r\n                    <slot></slot>\r\n                </div>\r\n            </Host>\r\n        );\r\n    }\r\n}",":host {\n    /**\n     * @prop --background: Background of the toggle.\n     * @prop --background-checked: Background of the toggle when checked.\n     * @prop --handle-background:  Background of the handle.\n     * @prop --handle-background-checked:  Background of the handle when checked.\n     * @prop --border-radius: The radius of the background borders.\n     * @prop --handle-border-radius: The radius of the handle.\n    */\n\n    display: inline-block;\n    outline: none;\n    cursor: pointer;\n}\n\nbutton {\n    height: 1.5em;\n    width: 2.5em;\n    outline: none;\n    background-color: var(--background, #888);\n    border: 0;\n    border-radius: var(--border-radius, var(--dnn-controls-radius, 0.75em));\n    padding: 0.1em;\n    position: relative;\n    margin: 0;\n    transition: background-color 300ms ease-in-out;\n    position: relative;\n    cursor: pointer;\n    &:hover, &:focus{\n        box-shadow: 0 0 2px 2px var(--dnn-color-primary);\n    }\n    &.checked{\n        background-color: var(--background-checked, var(--dnn-color-primary, blue));\n        .handle{\n            left: calc(1em + 4px);\n        }\n    }\n    &:disabled{\n        opacity: 0.5;\n        cursor: not-allowed;\n        box-shadow: none;\n    }\n    .handle{\n        transition: all 300ms ease-in-out;\n        background-color:white;\n        width: 1em;\n        height: 1em;\n        border-radius: var(--handle-border-radius, var(--dnn-controls-radius, 50%));\n        position: absolute;\n        top: calc(50% - 0.5em);\n        left: 2px;\n    }\n}","import { Component, h, Element, Prop, Event, EventEmitter, Watch, Host } from \"@stencil/core\";\nimport { DnnToggleChangeEventDetail } from \"./toggle-interface\";\n\n\n@Component({\n    tag: \"dnn-toggle\",\n    styleUrl: \"dnn-toggle.scss\",\n    shadow: true\n})\nexport class DnnToggle {\n\n    @Element() element: HTMLDnnToggleElement;\n\n    /** If 'true' the toggle is checked (on). */\n    @Prop({mutable: true}) checked = false;\n\n    /** If 'true' the toggle is not be interacted with. */\n    @Prop() disabled = false;\n\n    /** Fires when the toggle changed */\n    @Event() checkChanged!: EventEmitter<DnnToggleChangeEventDetail>;\n\n    @Watch(\"checked\")\n    checkedChanged(isChecked: boolean){\n        this.checkChanged.emit({checked: isChecked});\n    }\n\n    render() {\n        return (\n            <Host>\n                <button disabled={this.disabled} class={{'checked': this.checked}}\n                    onClick={() => {\n                        if (!this.disabled) {\n                            this.checked = !this.checked;\n                        }\n                    }}\n                >\n                    <div class=\"handle\"></div>\n                </button>\n            </Host>\n        );\n    }\n}\n",":host {\n  display: flex;\n  overflow: visible;\n}\n.expander{\n  width: 24px;\n  height: 24px;\n  button{\n    transition: all 150ms ease-in-out;\n    background-color:transparent;\n    border: none;\n    padding: 0;\n    margin: 0;\n    height: 1em;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    position: relative;\n    top: 2px;\n    svg{\n      :first-child{\n        transition: all 150ms ease-in-out;\n        fill: white;\n        stroke: black\n      }\n    }\n  }\n  &.expanded{\n    button{\n      transform: rotate(45deg);\n      svg{\n        :first-child{\n          fill: black;\n          stroke: black;\n        }\n      }\n    }\n  }\n}\ndiv.item{\n  .item-slot{\n    display: flex;\n    align-items: center;\n    gap: 0.25em;\n    min-height: 24px;\n  }\n  div.children{\n    overflow: hidden;\n    height:0;\n    transition: all 150ms ease-in-out;\n  }\n}","import { Component, Host, h, Prop, State, Element, Event, EventEmitter, Watch } from '@stencil/core';\n\n/** \n * @slot - The content of this node.\n * @slot children - The content nested under this node.\n*/\n@Component({\n  tag: 'dnn-treeview-item',\n  styleUrl: 'dnn-treeview-item.scss',\n  shadow: true,\n})\nexport class DnnTreeviewItem {\n  \n  private expander!: HTMLDivElement;\n\n  @Element() el!: HTMLDnnTreeviewItemElement;\n  \n  /** Defines if the current node is expanded.  */\n  @Prop({mutable: true, reflect: true}) expanded: boolean = false;\n\n  /** Fires when the user expands a node. */\n  @Event({bubbles: false}) userExpanded: EventEmitter<void>;\n\n  /** Fires when the user collapses a node. */\n  @Event({bubbles: false}) userCollapsed: EventEmitter<void>;\n\n  /** Manages state for whether or not item has children. */\n  @State() hasChildren: boolean = false;\n\n  /** Watch expanded Prop */\n  @Watch('expanded')\n  watchExpanded(expanded: boolean) {\n    if (expanded) {\n      this.expander.classList.add(\"expanded\");\n      this.collapsible.expanded = true;\n      return;\n    }\n    \n    this.expander.classList.remove(\"expanded\");\n    this.collapsible.expanded = false;\n  }\n      \n  \n  private childElement!: HTMLDivElement;\n  private collapsible!: HTMLDnnCollapsibleElement;\n\n  componentDidLoad() {\n    requestAnimationFrame(() => {\n      const child = this.childElement.children[0] as HTMLSlotElement;\n      const count = child.assignedElements().length\n      if (count > 0){\n        this.hasChildren = true;\n      }\n      if (this.expanded){\n        this.expander.classList.add(\"expanded\");\n        this.collapsible.expanded = false;\n        setTimeout(() => {\n          this.collapsible.expanded = true;\n        }, 300);\n      }\n    });\n  }\n\n  private toggleCollapse(): void {\n    this.expanded = !this.expanded;\n    if (this.expanded){\n      this.expander.classList.add(\"expanded\");\n      this.userExpanded.emit();\n      return;\n    }\n\n    this.expander.classList.remove(\"expanded\");\n    this.userCollapsed.emit();\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class=\"expander\" ref={el => this.expander = el}>\n          {this.hasChildren &&\n            <button\n              onClick={() => this.toggleCollapse()}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M10 17l5-5-5-5v10z\"/><path d=\"M0 24V0h24v24H0z\" fill=\"none\"/></svg>\n            </button>\n          }\n        </div>\n        <div class=\"item\">\n          <div class=\"item-slot\">\n            <slot></slot>\n          </div>\n          <dnn-collapsible ref={el => this.collapsible = el} expanded={this.expanded}>\n            <div ref={el => this.childElement = el}>\n              <slot name=\"children\"></slot>\n            </div>\n          </dnn-collapsible>\n          </div>\n      </Host>\n    );\n  }\n}\n\nexport interface ExpandedToggledEvent{\n  state: \"expanded\" | \"collapsed\";\n  height: number;\n}",":host {\n  /**\n    * @prop --background-color:  Defines the menu background color.\n    * @prop --foreground-color: A color that contrasts with the background color.\n  */\n  --background-color: var(--dnn-color-primary-contrast, white);\n  --foreground-color: var(--dnn-color-primary, #3792ED);\n\n  display: block;\n}\n\n.menu-container{\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  background-color: var(--background-color);\n  .menu{\n    margin: 0.5em;\n    display: flex;\n    gap: 1em;\n    justify-content: flex-start;\n    align-items: center;\n    white-space: nowrap;\n    width: 100%;\n  }\n  .overflow {\n    margin-left: auto;\n    position: relative;\n    button{\n      cursor: pointer;\n      svg{\n        fill: var(--foreground-color);\n      }\n      padding: 0;\n      margin: 0;\n      background-color: transparent;\n      border: none;\n    }\n    .dropdown{\n      position:absolute;\n      display: flex;\n      flex-direction: column;\n      white-space: nowrap;\n      right: 0;\n      transition: 100ms ease-in-out;\n      height: 0;\n      overflow: hidden;\n      &.visible{\n        padding: 1em;\n        gap: 0.5em;\n        background-color: var(--background-color);\n        box-shadow: 2px 2px 4px rgba(0,0,0,0.7);\n      }\n    }\n  }\n}\n","import { Component, Element, Host, h, State } from '@stencil/core';\n\n@Component({\n  tag: 'dnn-vertical-overflow-menu',\n  styleUrl: 'dnn-vertical-overflow-menu.scss',\n  shadow: true,\n})\nexport class DnnVerticalOverflowMenu {\n\n  @Element() element!: HTMLDnnVerticalOverflowMenuElement;\n  \n  @State() showDropdownButton = false;\n  @State() showDropdownMenu = false;\n\n  private menu!: HTMLDivElement;\n  private dropdown: HTMLDivElement;\n  private resizeObserver: ResizeObserver;\n  private button!: HTMLButtonElement;\n  private previousMenuWidth = 0;\n\n  componentDidRender() {\n    requestAnimationFrame(() => {\n      this.moveItemsToDropDownIfNecessery();\n      this.resizeObserver = new ResizeObserver(entries => {\n        for (let entry of entries){\n          if (entry.contentRect.width < this.previousMenuWidth){\n            this.moveItemsToDropDownIfNecessery()\n          }\n          if (this.previousMenuWidth > 0 && entry.contentRect.width > this.previousMenuWidth){\n            this.moveItemsToMenuIfPossible();\n          }\n          this.previousMenuWidth = entry.contentRect.width;\n        }\n      });\n      this.resizeObserver.observe(this.element);\n    });\n  }\n\n  private moveItemsToDropDownIfNecessery(){\n    const menuItems = Array.from(this.menu.querySelector(\"slot\").assignedElements());\n    const availableWidth = this.menu.getBoundingClientRect().width;\n    let neededWidth = parseFloat(getComputedStyle(this.element).fontSize)*2;\n    menuItems.forEach(item => neededWidth += this.getFullWidth(item));\n    neededWidth += (menuItems.length - 1) * parseFloat(getComputedStyle(this.element).fontSize);\n    if (neededWidth > availableWidth){\n      this.showDropdownButton = true;\n      var lastItem = menuItems[menuItems.length -1];\n      if (this.dropdown == undefined){\n        return;\n      }\n      lastItem.slot = \"dropdown\";\n      this.moveItemsToDropDownIfNecessery();\n    }\n  }\n  \n  private moveItemsToMenuIfPossible(){\n    if (this.dropdown == undefined || !this.dropdown.hasChildNodes()){\n      return;\n    }\n    const menuItems = Array.from(this.menu.querySelector(\"slot\").assignedElements());\n    const availableWidth = this.menu.getBoundingClientRect().width;\n    let neededWidth = parseFloat(getComputedStyle(this.element).fontSize)*2;\n    neededWidth += (menuItems.length - 1) * parseFloat(getComputedStyle(this.element).fontSize);\n    menuItems.forEach(item => neededWidth += this.getFullWidth(item));\n    const firstItem = this.dropdown.querySelector(\"slot\").assignedElements()[0];\n    if (firstItem != undefined){\n      neededWidth += this.getFullWidth(firstItem);\n    }\n\n    if (neededWidth < availableWidth){\n      if (firstItem != undefined){\n        firstItem.slot = \"\";\n      }\n      if(firstItem == undefined){\n        this.dropdown.classList.remove(\"visible\");\n        this.showDropdownMenu = false;\n        this.showDropdownButton = false;\n      }\n    }    \n  }\n\n  private getFullWidth(item: Element) {\n    var width = item.getBoundingClientRect().width;\n    var styles = getComputedStyle(item);\n    width += parseFloat(styles.marginLeft);\n    width += parseFloat(styles.marginRight);\n    width += parseFloat(styles.paddingLeft);\n    width += parseFloat(styles.paddingRight);\n    return width;\n  }\n\n  private toggleOverflowMenu(): void {\n    this.showDropdownMenu = !this.showDropdownMenu;\n    if (this.showDropdownMenu){\n      this.dropdown.classList.add(\"visible\");\n      let contentHeight = 0;\n      const items = Array.from(this.dropdown.querySelector(\"slot\").assignedElements());\n      items.forEach(item => contentHeight += item.getBoundingClientRect().height);\n      const emHeight = parseFloat(getComputedStyle(this.dropdown).fontSize);\n      const gapsHeight = emHeight * (this.dropdown.children.length - 1) / 2;\n      contentHeight += gapsHeight;\n      const marginHeight = emHeight * 2;\n      contentHeight += marginHeight;\n      this.dropdown.style.height = `${contentHeight}px`;\n      const dismissMenu = (e: MouseEvent) => {\n        const buttonRect = this.button.getBoundingClientRect();\n        if (\n          e.clientX < buttonRect.left ||\n          e.clientX > buttonRect.right ||\n          e.clientY < buttonRect.top ||\n          e.clientY > buttonRect.bottom){\n            this.toggleOverflowMenu();\n          }\n          document.removeEventListener(\"click\", dismissMenu);\n      };\n      setTimeout(() => {\n        document.addEventListener(\"click\", dismissMenu, false);\n      }, 100);\n    }\n    else{\n      this.dropdown.classList.remove(\"visible\");\n      this.dropdown.style.height = \"0px\";\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class=\"menu-container\">\n          <div class=\"menu\" ref={el => this.menu = el}>\n            <slot></slot>\n          </div>\n            {this.showDropdownButton &&\n              <div class=\"overflow\">\n                <button\n                  ref={el => this.button = el}\n                  class=\"icon\"\n                  onClick={() => this.toggleOverflowMenu()}>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"/></svg>\n                </button>\n                <div class=\"dropdown\" ref={el => this.dropdown = el}>\n                  <slot name=\"dropdown\"></slot>\n                </div>\n              </div>\n            }\n          </div>\n      </Host>\n    );\n  }\n}\n",":host {\n    /**\n      * @prop --left-pane-background-color:  Allows customizing the left pane background-color\n      * @prop --right-pane-background-color: Allows customizing the right pane background-color\n    */\n\n    display: flex;\n    align-items: stretch;\n    margin: 0 auto;\n    position: relative;\n\n    --left-pane-background-color: transparent;\n    --right-pane-background-color: transparent;\n}\n\nbutton{\n  border: none;\n  margin:0;\n  padding:0;\n  cursor: ew-resize;\n  position: absolute;\n  height: 100%;\n  background-color: transparent;\n  &.transition{\n    transition: all 300ms ease-in-out;\n  }\n}\n\n\n.pane{\n  overflow-y: auto;\n  &.transition{\n    transition: all 300ms ease-in-out;\n  }\n  &.left{\n    background-color: var(--left-pane-background-color);\n  }\n  &.right{\n    background-color: var(--right-pane-background-color);\n    flex-grow: 1;\n  }\n}","import { Component, Host, h, Prop, Element, State, Method, Event, EventEmitter } from '@stencil/core';\nimport { getMovementFromEvent } from \"../../utilities/mouseUtilities\";\n\n/**\n * @slot default - The split divider control you want to use.\n * @slot left - The content of the left pane.\n * @slot right - The content of the right pane.\n */\n@Component({\n  tag: 'dnn-vertical-splitview',\n  styleUrl: 'dnn-vertical-splitview.scss',\n  shadow: true,\n})\nexport class DnnVerticalSplitview {\n\n  /** The width of the splitter area. */\n  @Prop() splitterWidth = 16;\n\n  /** The percentage position of the splitter in the container. */\n  @Prop({mutable: true}) splitWidthPercentage = 30;\n  \n  private splitter!: HTMLButtonElement;\n\n  private resizeObserver: ResizeObserver;\n\n  /** Sets the width percentage of the divider */\n  @Method()\n  async setSplitWidthPercentage(newWidth: number) {\n    const panes = this.element.shadowRoot.querySelectorAll(\".pane\");\n    requestAnimationFrame(() => {\n      panes.forEach(pane => pane.classList.add(\"transition\"));\n      this.splitter.classList.add(\"transition\");\n      requestAnimationFrame(() => {\n        const fullWidth = this.element.getBoundingClientRect().width;\n        let newLeft = fullWidth * newWidth / 100;\n        if (newLeft < 0){\n          newLeft = 0;\n        }\n        if (newLeft > fullWidth){\n          newLeft = fullWidth;\n        }\n        this.leftWidth = newLeft;\n        this.rightWidth = fullWidth - newLeft;\n        setTimeout(() => {\n          panes.forEach(pane => pane.classList.remove(\"transition\"));\n          this.splitter.classList.remove(\"transition\");\n        }, 300);\n      });\n    });\n  }\n\n  /** Gets the current divider position percentage. */\n  @Method()\n  async getSplitWidthPercentage(){\n    const fullWidth = this.element.getBoundingClientRect().width;\n    return this.leftWidth / fullWidth;\n  }\n\n  /** Fires when the width of the divider changes. */\n  @Event() widthChanged: EventEmitter<number>;\n\n  @State() leftWidth = 0;\n  @State() rightWidth = 0;\n\n  @Element() element : HTMLDnnVerticalSplitviewElement;\n  \n  componentDidLoad() {\n    requestAnimationFrame(() => {\n      this.resizeObserver = new ResizeObserver(() => {\n        const fullWidth = this.element.getBoundingClientRect().width;\n        this.leftWidth = fullWidth * this.splitWidthPercentage / 100;\n        this.rightWidth = fullWidth - this.leftWidth;\n        this.widthChanged.emit(this.splitWidthPercentage);\n      });\n      this.resizeObserver.observe(this.element);\n    });\n  }\n  \n  private previousTouch: Touch;\n\n  private handleMouseDown(event: MouseEvent | TouchEvent) {\n    event.preventDefault();\n    const handleDrag = (ev: MouseEvent | TouchEvent) => {\n      requestAnimationFrame(() => {\n        let fullWidth = this.element.getBoundingClientRect().width;\n        let {movementX} = getMovementFromEvent(ev, this.previousTouch);\n        let newLeft = this.leftWidth + movementX;\n        if (newLeft < 0){\n          newLeft = 0;\n        }\n        if (newLeft > fullWidth){\n          newLeft = fullWidth;\n        }\n        this.leftWidth = newLeft;\n        this.rightWidth = fullWidth - newLeft;\n        this.splitWidthPercentage = this.leftWidth / fullWidth * 100;\n      });\n    }\n    const handleDragFinished = () => {\n      document.removeEventListener(\"mousemove\", handleDrag);\n      document.removeEventListener(\"touchmove\", handleDrag);\n      const fullWidth = this.element.getBoundingClientRect().width;\n      const newPercentage = this.leftWidth / fullWidth * 100;\n      this.widthChanged.emit(newPercentage);\n    };\n    document.addEventListener(\"mouseup\", handleDragFinished);\n    document.addEventListener(\"touchend\", handleDragFinished);\n    document.addEventListener(\"mousemove\", handleDrag);\n    document.addEventListener(\"touchmove\", handleDrag);\n  }\n\n  private handleKeyDown(e: KeyboardEvent): void {\n    let movementX = 0;\n    switch (e.key) {\n      case \"ArrowLeft\":\n        movementX = -10;\n        break;\n      case \"ArrowRight\":\n        movementX = 10;\n        break;\n      default:\n        return;\n    }\n    if (e.shiftKey){\n      movementX = movementX * 10;\n    }\n    const fullWidth = this.element.getBoundingClientRect().width;\n    let newLeft = this.leftWidth + movementX;\n    if (newLeft < 0){\n      newLeft = 0;\n    }\n    if (newLeft > fullWidth){\n      newLeft = fullWidth;\n    }\n    this.leftWidth = newLeft;\n    this.rightWidth = fullWidth - this.leftWidth;\n  }\n\n  render() {\n    return (\n      <Host>\n          <div class=\"left pane\" style={{\n              width: `${this.leftWidth}px`,\n            }}>\n            <slot name=\"left\"></slot>\n          </div>\n          <button\n            onMouseDown={e => this.handleMouseDown(e)}\n            onTouchStart={e => this.handleMouseDown(e)}\n            onKeyDown={e => this.handleKeyDown(e)}\n            ref={el => this.splitter = el}\n            style={{\n              minWidth: `${this.splitterWidth.toString()}px`,\n              left: `${this.leftWidth - 2}px`,\n            }}\n          >\n            <slot></slot>\n          </button>\n          <div\n            class=\"right pane\"\n            style={{\n              width: `${this.rightWidth}px`,\n            }}>\n            <slot name=\"right\"></slot>\n          </div>\n      </Host>\n    );\n  }\n}\n"]}